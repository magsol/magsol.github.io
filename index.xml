<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Stochastic Stenography</title>
<link>https://magsol.github.io/index.html</link>
<atom:link href="https://magsol.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Data, donuts, and detours</description>
<image>
<url>https://magsol.github.io/images/logo.png</url>
<title>Stochastic Stenography</title>
<link>https://magsol.github.io/index.html</link>
<height>144</height>
<width>144</width>
</image>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Thu, 16 Feb 2023 10:30:00 GMT</lastBuildDate>
<item>
  <title>Mastodon, Part IV: SSL with Let’s Encrypt</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-02-16-ssl-with-lets-encrypt/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-02-16-ssl-with-lets-encrypt/https_meme.jpeg" class="preview-image img-fluid" alt="Sean Bean LOTR meme, stating &quot;One does not simply use HTTPS when it doesn't work&quot; (obtained from imgflip)."></p>
<p><em>This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:</em></p>
<ol type="1">
<li><a href="../../posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html">Introduction</a></li>
<li><a href="../../posts/2023-01-23-mastodon-home-network-topology/index.html">Part I: My home network topology</a></li>
<li><a href="../../posts/2023-01-25-mastodon-helm-chart/index.html">Part II: The Mastodon Helm chart</a></li>
<li><a href="../../posts/2023-02-09-configuring-and-installing-prereqs/index.html">Part III: Configuring and installing prerequisites</a></li>
<li>Part IV: The waking nightmare that is Let’s Encrypt <em>(this post)</em></li>
<li>Part V: Actually installing Mastodon</li>
<li>Conclusions</li>
</ol>
<p>I want to start by saying: I am no expert here. As such, it is not only possible, but is in fact likely, that I was missing something so painfully obvious as to be worthy of derision for the rest of my natural life.</p>
<p>To be fair, that’d be mean, but still very possibly deserved.</p>
<p>When I started the whole Mastodon installation process, I loosely followed the <a href="https://geek-cookbook.funkypenguin.co.nz/recipes/kubernetes/mastodon/">recipe outlined here at Geek Cookbook</a>, which—until this series of blog posts!—was the only resource I could find anywhere on the world wide interwubs on installing Mastodon on kubernetes (thank you again, funkypenguin; <a href="https://github.com/sponsors/funkypenguin">go sponsor him!</a>).</p>
<p>Of course, I could only follow it to a point; I didn’t make use of <a href="https://geek-cookbook.funkypenguin.co.nz/kubernetes/deployment/flux/">flux</a> (though I know I really, really should; that’s a blog series for another time, methinks) so a lot of the constructs weren’t precisely relevant to me. As such there was a lot I had to infer. <a href="https://geek-cookbook.funkypenguin.co.nz/kubernetes/ingress/">Ingress was no exception</a>.</p>
<section id="so-much-traeffik" class="level3">
<h3 class="anchored" data-anchor-id="so-much-traeffik">So much tra[e|f]fik</h3>
<p>This bit is actually entirely separate from Mastodon; it just <em>felt</em> like it was part of Mastodon, since it was Mastodon that I couldn’t reach. When SSL is misconfigured, your experience is strictly browser-dependent: in my case, Chrome<sup>1</sup> would throw up myriad warnings and, in regular mode, wouldn’t let me navigate to the page at all. In incognito mode, it would allow me to navigate there provided I clicked a link to acknowledge I was doing something “unsafe”.</p>
<p>So let’s back up a bit. I’m using <a href="https://traefik.io/">traefik</a> as my ingress controller. Not, I should add, because it’s packaged with k3s; I actually disabled that because it’s an old version. Rather, I installed traefik via <a href="https://github.com/traefik/traefik-helm-chart">its official helm chart</a>.</p>
<p>Now. In keeping with my philosophy of doing the simplest thing that gets results, I tried for the http-01 option when it came to <a href="https://letsencrypt.org/docs/challenge-types/">Let’s Encrypt challenge modes</a>, as it’s by far the most straightforward, at least when it comes to configuring the ingress. I had to make only very minor modifications to the traefik helm chart; it ended up looking something like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ports</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">websecure</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">tls</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">certResolver</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"leresolver"</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">domains</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">main</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"quinnwitz.house"</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">certResolvers</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">leresolver</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">email</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my email&gt;</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">httpChallenge</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">entryPoint</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"web"</span></span></code></pre></div>
<p>That’s pretty much it! I made a few other modifications around debugging and logging, and a small addition around load balancing (to account for metallb), but simplicity won the day.</p>
<p>…and lo, did the problems come thence <em>unceasingly</em>.</p>
</section>
<section id="get-problems" class="level3">
<h3 class="anchored" data-anchor-id="get-problems">GET problems</h3>
<p>Here’s the part that drove me absolutely insane.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-overflow-wrap code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">E1129</span> 00:45:08.092782       1 sync.go:190] cert-manager/challenges <span class="st" style="color: #20794D;">"msg"</span>=<span class="st" style="color: #20794D;">"propagation check failed"</span> <span class="st" style="color: #20794D;">"error"</span>=<span class="st" style="color: #20794D;">"failed to perform self check GET request 'http://quinnwitz.house/.well-known/acme-challenge/jVKFmi_ulnESi0pCj-KnVC5mPt0RouNcfUOEKcYe9ro': Get </span><span class="dt" style="color: #AD0000;">\"</span><span class="st" style="color: #20794D;">http://quinnwitz.house/.well-known/acme-challenge/jVKFmi_ulnESi0pCj-KnVC5mPt0RouNcfUOEKcYe9ro</span><span class="dt" style="color: #AD0000;">\"</span><span class="st" style="color: #20794D;">: context deadline exceeded (Client.Timeout exceeded while awaiting headers)"</span> <span class="st" style="color: #20794D;">"dnsName"</span>=<span class="st" style="color: #20794D;">"quinnwitz.house"</span> <span class="st" style="color: #20794D;">"resource_kind"</span>=<span class="st" style="color: #20794D;">"Challenge"</span> <span class="st" style="color: #20794D;">"resource_name"</span>=<span class="st" style="color: #20794D;">"mastodon-tls-lzwbv-1403372365-523260434"</span> <span class="st" style="color: #20794D;">"resource_namespace"</span>=<span class="st" style="color: #20794D;">"mastodon"</span> <span class="st" style="color: #20794D;">"resource_version"</span>=<span class="st" style="color: #20794D;">"v1"</span> <span class="st" style="color: #20794D;">"type"</span>=<span class="st" style="color: #20794D;">"HTTP-01"</span></span></code></pre></div>
<p>This is what I saw appear over and over on <a href="https://letsdebug.net/">Let’s Debug</a> (thank you for that website, by the way!). No matter what (http-01) configuration I tried, this was what came back: timeouts.</p>
<p>As best I can tell, <a href="https://github.com/cert-manager/cert-manager/issues/3238#issuecomment-1384438850">this recent comment on GitHub</a> miiight identify the source of the problem and how to fix it:</p>
<blockquote class="blockquote">
<p>So basically, your node cannot access http://1.2.3.4/.well-known/whatever and http://your-page.com/.well-known/whatever, but computers on the internet (such as letsencrypt) can.</p>
</blockquote>
<p>though I’m still not certain, because the method for testing this eventuality (<code>dig</code> or <code>curl</code>ing the URL from the kubernetes nodes themselves) worked fine for me.</p>
<p>After (I kid you not) an entire <strong>week</strong> of this, I gave up. It was time to switch to dns-01.</p>
</section>
<section id="its-always-dns" class="level3">
<h3 class="anchored" data-anchor-id="its-always-dns">It’s always DNS</h3>
<p>This took more doing. First, I moved my DNS nameservers from Google over to Cloudflare (Google was and continues to be my domain name provider, so initially that’s where my nameservers were, too). The reason for this move was because Google charges for DNS API access (which we’re going to need in a minute), whereas Cloudflare does not<sup>2</sup>.</p>
<p>Second, I created API keys with Cloudflare specifically for modifying DNS entries. The cert-manager documentation has a whole page on dns-01 verification steps <a href="https://cert-manager.io/docs/configuration/acme/dns01/cloudflare/">and uses Cloudflare as its examplar</a>.</p>
<p>FUN LITTLE FACTOID: Using the method outlined in the cert-manager documentation, I still encountered weird errors involving “invalid request headers.” <em>For whatever bloody reason</em>, when creating the <code>Secret</code> that stores the Cloudflare API tokens, I had to use <code>data</code> rather than <code>stringData</code> otherwise it simply wouldn’t work. <a href="https://github.com/cert-manager/cert-manager/issues/3021#issuecomment-861894010">Here’s the solution</a>. It also needs to be in the same namespace as Mastodon. Also also, I needed to use <code>api-key</code>, <code>api-token</code>, and <code>email</code> fields, <a href="https://go-acme.github.io/lego/dns/cloudflare/">since these are specific to the permissions LE will need</a>.</p>
<p>Third, I had to make more modifications to the traefik helm chart. These included flipping the <code>certResolver.leresolver</code> from <code>httpChallenge</code> to <code>dnsChallenge</code>, and also included adding environment variables for each of the <code>data</code> fields in the cloudflare API secret. Here’s what those changes looked like:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;">certResolvers</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">leresolver</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">email</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my email&gt;</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">dnsChallenge</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">provider</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> cloudflare</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">resolvers</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fl" style="color: #AD0000;">1.1.1.1</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fl" style="color: #AD0000;">8.8.8.8</span></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;">env</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> CF_API_EMAIL</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">valueFrom</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">secretKeyRef</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-13"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my secret&gt;</span></span>
<span id="cb3-14"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">key</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> email</span></span>
<span id="cb3-15"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> CF_API_KEY</span></span>
<span id="cb3-16"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">valueFrom</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-17"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">secretKeyRef</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-18"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my secret&gt;</span></span>
<span id="cb3-19"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">key</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> api-key</span></span>
<span id="cb3-20"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> CF_DNS_API_TOKEN</span></span>
<span id="cb3-21"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">valueFrom</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-22"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">secretKeyRef</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-23"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my secret&gt;</span></span>
<span id="cb3-24"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">key</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> api-token</span></span></code></pre></div>
<p>The final step was to create a new <code>ClusterIssuer</code>, one that specifically used dns-01 verification. Here’s what it looked like:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;">apiVersion</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> cert-manager.io/v1</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">kind</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ClusterIssuer</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">metadata</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> letsencrypt-prod-dns</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;">spec</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">acme</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">email</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my email&gt;</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">server</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> https://acme-v02.api.letsencrypt.org/directory</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">privateKeySecretRef</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;cert key&gt;</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">solvers</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-12"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">dns01</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-13"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">cloudflare</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-14"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">apiTokenSecretRef</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-15"><span class="at" style="color: #657422;">            </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my secret&gt;</span></span>
<span id="cb4-16"><span class="at" style="color: #657422;">            </span><span class="fu" style="color: #4758AB;">key</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> api-token</span></span></code></pre></div>
<p>I wouldn’t call this super-complicated, but it definitely wasn’t the ease of http-01 configuration. But unlike http-01, this actually worked!</p>
</section>
<section id="other-musings" class="level3">
<h3 class="anchored" data-anchor-id="other-musings">Other musings</h3>
<p>Oddly enough, this was the part that took the longest on the road to getting my own Mastodon instance running. Not the <a href="../../posts/2023-01-23-mastodon-home-network-topology/index.html">obfuscated and undocumented network topology hiccups</a>, not the <a href="../../posts/2023-02-09-configuring-and-installing-prereqs/index.html">literally incompatible and also required prerequisites</a>; no, we got to bang our heads against a 9-year old technology that took nearly a week to find a working configuration.</p>
<p>I’ve had some folks suggest <a href="https://github.com/nabsul/kcert">kcert</a> as a drop-in replacement for cert-manager. For specific use-cases it certainly seems as though its simplicity could grease the skids of development; personally, I did not have a chance to try it out before landing on a working dns-01 setup, but I wanted to mention it as others have spoken positively about it.</p>
<p>Another promising bit of technology the Mastodon devs pointed me to was <a href="https://tailscale.com/">Tailscale</a>, which recently released their own implementation of <a href="https://tailscale.com/kb/1153/enabling-https/">HTTPS certificates</a> for nodes on a tailscale network. Traefik has even started working on <a href="https://traefik.io/blog/exploring-the-tailscale-traefik-proxy-integration/">integrating tailscale network overlays into its proxy configuration</a>, so this could be worth looking at instead of LE in the very near future.</p>
<div class="callout-tip callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Oh hey!
</div>
</div>
<div class="callout-body-container callout-body">
<p>As of traefik 3.0 beta 1, <a href="https://tailscale.com/kb/1234/traefik-certificates/">the integration is already present!</a>. Here’s the <a href="https://tailscale.com/blog/traefik-certificate-resolver/">official announcement from Tailscale</a>.</p>
</div>
</div>
<p>Until next time!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Yeah yeah yeah I know I need to switch to Brave or Firefox, IN MY SPARE TIME FOLKS.↩︎</p></li>
<li id="fn2"><p>At least, not at the rates I’d be using it.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Mastodon, {Part} {IV:} {SSL} with {Let’s} {Encrypt}},
  date = {2023-02-16},
  url = {https://magsol.github.io/2023-02-16-ssl-with-lets-encrypt},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Mastodon, Part IV: SSL with Let’s
Encrypt.”</span> February 16, 2023. <a href="https://magsol.github.io/2023-02-16-ssl-with-lets-encrypt">https://magsol.github.io/2023-02-16-ssl-with-lets-encrypt</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>k3s</category>
  <category>mastodon</category>
  <category>ssl</category>
  <category>dns</category>
  <guid>https://magsol.github.io/posts/2023-02-16-ssl-with-lets-encrypt/index.html</guid>
  <pubDate>Thu, 16 Feb 2023 10:30:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-02-16-ssl-with-lets-encrypt/https_meme.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Setting up a wildlife camera</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/wildlifegen.png" class="preview-image img-fluid" alt="Midjourney-generated image of a rabbit in a nightvision style, as if pictured by an infrared camera at night (generated by Midjourney)."></p>
<p>For <em>years</em>, I’ve been wanting to set up an outdoor wildlife camera. Somewhere in the <a href="https://pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch forums</a><sup>1</sup> there’s a post from 2017-me remarking on how excited I am to have finally gotten my hands on an Nvidia 1080 Ti and, therefore, sufficient horsepower to chew up streaming video from outdoors.</p>
<p>In case some readers are unaware: <a href="https://www.visitathensga.com/">Athens</a> is a quintessential college town where, even if starting from the middle of downtown, you’re only ever at most 15 minutes from literal cow pastures. As such, encounters with wildlife are frequent and to be expected if you’re spending any decent amount of time here.</p>
<section id="its-always-the-year-of-the-rabbit" class="level3">
<h3 class="anchored" data-anchor-id="its-always-the-year-of-the-rabbit">It’s always the year of the rabbit</h3>
<p>There was a stretch of time, also back around 2017 I think, where our bunny Clover would occasionally<sup>2</sup> wake us up in the middle of the night by thumping. Again, for those who may not know, <a href="https://www.rabbitcaretips.com/why-do-rabbits-thump-their-feet/">rabbits will thump if they sense danger</a> as a way of warning those around them. Clover in particular is also known to thump when she’s having fun, but these few times when we woke up and checked, she was doing her best statue imitation in between thumps, strongly suggesting she really was scared of… something.</p>
<p>We never figured out what, exactly. Best guess: her super-sensitive rabbit ears + eyes picked up something prowling outside in the dark that our duller human senses just couldn’t perceive. Which also gave me a specific application for night cameras beyond simple curiosity: to try and figure out what, if anything, was making Clover nervous (I even had an idea to include some kind of seismometer so I could sync up the offline video analysis with Clover’s thumps, but it’s been years since she last woke us up with thumping so I figure I missed the moment).</p>
</section>
<section id="i-normally-like-deer" class="level3">
<h3 class="anchored" data-anchor-id="i-normally-like-deer">I normally like deer</h3>
<p>But I was still curious about the nearby wildlife. This only intensified in the summer of 2021: unusually ravenous deer<sup>3</sup> ate all the lilies in our front yard before they even bloomed. An idea formed to sync a night camera up with a programmable drone that could, after identifying the deer in the yard, harass them away from the lilies. Oddly, summer 2022 was a return to normal: only one flower was eaten early on in the season; the other few dozen went through their full lifecycle, never getting eaten.</p>
<p>But even so, I still wanted to see what was cruising around our neighborhood.</p>
</section>
<section id="bring-on-the-over-engineered-solution" class="level3">
<h3 class="anchored" data-anchor-id="bring-on-the-over-engineered-solution">Bring on the over-engineered solution</h3>
<p>Yes, dear reader–years have passed in this retelling with little to no progress on the wildlife front. I will readily admit this project suffered what most personal projects do. I will say this, though: in my defense, 2018 through 2021 was the back half of my tenure-track appointment. Couple that with welcoming my daughter, and the onset of a global pandemic… yeah. A liiiiittle bit of burnout<sup>4</sup>, plus a LOT of higher-priority items to worry about than a wildlife camera for the sake of curiosity.</p>
<p>But by summer 2022, I finally had something physically taking shape–<a href="../../posts/2022-07-13-the-raspberry-pi-cluster/index.html">head over to my July 2022 blog post to check it out, complete with photos</a>! I even mounted the birdhouse outside, calibrated the camera’s field of view, and wired it all up… but then left it for several more months.</p>
<p>Now I’m <em>finally</em> getting some hard, empirical data on how it’s all working. And man, it’s going to be a challenge to have this work well.</p>
</section>
<section id="technical-challenges" class="level3">
<h3 class="anchored" data-anchor-id="technical-challenges">Technical challenges</h3>
<p>Legion.</p>
<p>By far the biggest challenge I’m dealing with is <strong>how resource-constrained the Raspberry Pi 3B+ is</strong>. I’m working with 1GB of RAM, though the effective memory available at any given moment is maaaybe 75% of that; as such, <strong>66%</strong> is the safe margin I operate with. Another limitation is the SD card size (effectively the hard drive of the Pi): at least when I purchased it, the limit was 32GB. That’s now no longer the case, but I haven’t gotten around to reformatting it, so it’s still a 32GB limit for now.</p>
<p>This effectively means that capturing lots of video for testing purposes is difficult. Even reasonable resolutions like 1280x720 at 30fps will exhaust the little Pi’s memory after a mere <strong>4 minutes</strong> of video capture, assuming all the buffering was happening in RAM.</p>
<p>I looked into streaming the video directly as it’s captured; that was, after all, the idea I had behind purchasing the 1080 Ti back in 2017. However, the 3B+ wifi operates only on the 2.4GHz band, which… is unfortunately shared by our baby monitor. Thus, whenever the Pi is transferring data over the air, the baby monitor becomes completely unusable.</p>
<p>So the upshot here is</p>
<ol type="1">
<li>I need to dramatically downsample the incoming video feed, and</li>
<li>any real-time processing I want to do (including downsampling) has to be done on the Pi itself</li>
</ol>
<p>I have been looking into things like <a href="https://en.wikipedia.org/wiki/Power_over_Ethernet">power-over-ethernet</a> to try and solve #2 (though it would require running an ethernet cable outside, which has its own challenges), and I’ve been running some experiments on the most effective downsampling methods for #1. I’ve also been strongly considering simply upgrading the Pi to a 4B when they become available again, as they can operate on the 5GHz wifi band, and can go up to 8GB of memory. Together, these two immediate fixes would dramatically simplify the situation. But Pi 4s most likely won’t be readily available again until Q2 this year (a few months from now, at least).</p>
</section>
<section id="logistical-challenges" class="level3">
<h3 class="anchored" data-anchor-id="logistical-challenges">Logistical challenges</h3>
<p>There are a ton of unknowns when it comes to what <em>kind</em> of data I can expect. Already the few experiments I’ve run have shown a wide variability in the video I capture in the context of trying to decide on-the-fly what to keep and what to discard.</p>
<p>The <a href="https://github.com/raspberrypi/picamera2">Picamera2 library</a> also recently entered “beta” (from “alpha”). While that’s most certainly a positive development, it still means the library is undergoing substantial changes, and so not only may functionality change very suddenly, but–as I’ve already been encountering–existing functionality is often poorly documented, if at all. It took me some time to piece together how to configure both high-res and low-res video streams to capture the <em>full</em> field of view of the camera (relative to the camera’s native resolution), rather than cropping out a section, as is what would happen with most of the configurations in the <a href="https://github.com/raspberrypi/picamera2/tree/main/examples"><code>examples</code> folder</a>.</p>
<p>Oh, yeah: I also have a full-time job, and a toddler. So those are definitely logistics to be considered.</p>
</section>
<section id="experiments" class="level3">
<h3 class="anchored" data-anchor-id="experiments">Experiments</h3>
<p>I have run a few experiments to get a feel for what to expect. The <a href="https://github.com/magsol/wildlife-cameras/blob/0881bf2043a0c5e97177105894508e3dfebacee6/src/noir.py">latest commit</a> (as of writing this post) shows what the experiments more or less look like. Here are the highlights:</p>
<ul>
<li>A dual-stream video recording configuration, where the high-res is set to 1640x1232 and the low-res is 410x308.</li>
<li>The camera runs for a fixed period of time (in the script, it’s 8 hours).</li>
<li>During that time, a continuous loop does the following:
<ol type="1">
<li>Grab a frame from the low-res stream.</li>
<li>Convert this frame from <a href="https://en.wikipedia.org/wiki/YUV">YUV</a> to grayscale (Picamera2 requires low-res feeds to be in YUV; fortunately, this step doesn’t seem too arduous).</li>
<li>Compare this frame to the <em>previous</em> frame by way of calculating <a href="https://en.wikipedia.org/wiki/Mean_squared_error">mean squared error</a> (MSE). This provides some measure of how much has changed from one sequential frame to the next.</li>
<li>If MSE exceeds some threshold, start recording a video with the high-res stream. Continue recording so long as MSE exceeds that threshold.</li>
<li>If MSE drops below that threshold <em>and stays there for a certain length of time</em>, stop the high-res stream.</li>
<li>Hang onto all MSE measurements.</li>
</ol></li>
</ul>
<p>That’s the basic gist. It’s functional, if blunt. Fortunately, I’ve already collected some interesting data. For instance, here’s an MSE plot from one 8-hour experiment I ran. Important to note: these MSE measurements are <em>only</em> from the events that <em>exceeded</em> the MSE threshold (I’m running separate experiments to try and determine what a baseline MSE looks like).</p>
<p><img src="https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/detected_motion_mse.png" class="img-fluid" alt="Matplotlib line plot showing multiple variable-length plots of MSE along the y-axis versus time on the x-axis."></p>
<p>One’s first reaction to this plot might be “Huh, there’s a wide variability in the things that can trigger MSE to exceed the threshold!”. And that would most certainly be correct. But even more complicating is the fact <em>ALL of these events are of the same thing</em>: a car driving by on the street. Not only is it not really something I’m interested in–it’s a wildlife camera, after all–but clearly MSE is ill-suited as a method for identifying the <em>kind</em> of event behind it.</p>
<p>I ran a second experiment over 10 minutes to investigate what MSE baselines might look like (and I’m currently running a longer one; results TBD), but basically you have something that looks like this:</p>
<p><img src="https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/10min_test.png" class="img-fluid" alt="Matplotlib line plot showing a single plot of MSE along the y-axis versus time on the x-axis."></p>
<p>My take-away from this plot is: given the 30fps capture rate (or very close to it; at least, depending on how much real-time processing I try to cram in), very little changes from one frame to the next. Empirically, it’s a little more than a single pixel. However, there’s a lot this plot <em>doesn’t</em> tell me, such as:</p>
<ul>
<li>What are the effects of weather, such as wind or rain, on the baseline MSE? (not a clue)</li>
<li>How does absolute MSE change with respect to resolution, fps, or other camera settings? (in theory, MSE should scale with resolution; fps could at least be simulated by systematically downsampling, though upsampling would be more difficult)</li>
<li>What are the effects of night vs day on MSE? (again, in theory this shouldn’t be a huge deal, as I only plan to operate the camera at night)</li>
<li>How can MSE identify two separate events vs something like a person who stands still long enough to make it <em>seem</em> like two separate events? (it probably can’t)</li>
</ul>
<p>Anyway, I’m running a 24-hour test right now that will hopefully provide at least a little more intuition into the role of MSE vs the real world, if not any outright answers to the above questions.</p>
<p>Finally, I did want to get some feel for the overall performance of the code itself. I wanted to try and understand what I was working with in terms of options for real-time processing. So I ran a profiler on the same 10-minute experiment I ran above, and this is what came back:</p>
<p><img src="https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/profiling.png" class="img-fluid" alt="Output of the top `cumtime` hits from running cProfile on the 10-minute MSE experiment. Main take-away is that Picamera2 internals are by far the biggest time sink, by at least an order of magnitude."></p>
<p>This was comforting to see, as I had been worried the real-time conversion of YUV to grayscale may have been a bigger performance hit; turns out, it’s over two orders of magnitude less problematic than Picamera2 internals, and an order of magnitude less so than the <code>numpy.mean</code> function call for calculating MSE (and this is something I might be able to optimize a bit with some clever leveraging of in-memory data structures).</p>
<p>I was even able to look at the timestamping of the MSE calculations themselves to see that, by far, I was very close to the 30fps sampling rate of the camera itself, meaning I definitely have some head room for additional real-time operations. Granted, this concern has always been secondary to memory constraints, but still: it’s good to know where the hard limits are, and where we have some room to operate.</p>
</section>
<section id="ongoing" class="level3">
<h3 class="anchored" data-anchor-id="ongoing">Ongoing</h3>
<p>It’s clear that, if there are animals prowling around at night, they don’t elicit much of a reaction from MSE, meaning I’m going to need smarter methods of teasing them out. One thought I had was considering both MSE magnitude <em>and</em> duration, but for that I’d need a much more thorough understanding of the role of the baseline MSE (hence the 24-hour experiment). Another thought I had was combining this with a <em>window</em> of frames, rather than just instantaneous MSE over a pair of frames. Finally, I also wanted to look into some basic (non-DL) object detection in OpenCV, since considering first-order image features like edges and corners might be more sensitive to small animals walking around while also keeping added computationl and memory demands at a minimum.</p>
<p>Stay tuned!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>RIP.↩︎</p></li>
<li id="fn2"><p>Every few months, so not very often. The impressive bit here is that a 4.5lb <em>rabbit</em> could wake up two snoring humans through multiple walls and a closed door.↩︎</p></li>
<li id="fn3"><p>We assume. We didn’t have the camera in place to confirm, but we did hear numerous anecdotes from folks also suggesting the deer were weirdly ravenous and less fearful of humans that year.↩︎</p></li>
<li id="fn4"><p>Hopefully obvious understatement.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Setting up a Wildlife Camera},
  date = {2023-02-15},
  url = {https://magsol.github.io/2023-02-15-calibrating-a-wildlife-camera},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Setting up a Wildlife Camera.”</span>
February 15, 2023. <a href="https://magsol.github.io/2023-02-15-calibrating-a-wildlife-camera">https://magsol.github.io/2023-02-15-calibrating-a-wildlife-camera</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>wildlife</category>
  <category>ir</category>
  <category>camera</category>
  <category>video processing</category>
  <guid>https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/index.html</guid>
  <pubDate>Wed, 15 Feb 2023 15:57:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-02-15-calibrating-a-wildlife-camera/wildlifegen.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Mastodon, Part III: Configuring and installing the prerequisites</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-02-09-configuring-and-installing-prereqs/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-02-09-configuring-and-installing-prereqs/https:/imgs.xkcd.com/comics/tech_loops.png" class="preview-image img-fluid" alt="XKCD comic #1579, Tech Loops."></p>
<p><em>This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:</em></p>
<ol type="1">
<li><a href="../../posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html">Introduction</a></li>
<li><a href="../../posts/2023-01-23-mastodon-home-network-topology/index.html">Part I: My home network topology</a></li>
<li><a href="../../posts/2023-01-25-mastodon-helm-chart/index.html">Part II: The Mastodon Helm chart</a></li>
<li>Part III: Configuring and installing prerequisites <em>(this post)</em></li>
<li>Part IV: The waking nightmare that is Let’s Encrypt</li>
<li>Part V: Actually installing Mastodon</li>
<li>Conclusions</li>
</ol>
<section id="preamble" class="level3">
<h3 class="anchored" data-anchor-id="preamble">Preamble</h3>
<p>As stated previously, the Mastodon image is fully arm64-compatible. However, if and until the dev team chooses to unbundle Mastodon from its dependencies in the Helm chart, we have to worry about multiple applications Mastodon relies on which themselves rely on images that are <em>not</em> arm64-compatible.</p>
<p>This isn’t exactly <a href="https://en.wikipedia.org/wiki/Dependency_hell">dependency hell</a>, but it did bring to mind a recent blog post by <a href="https://vickiboykis.com/">Vicki Boykis</a>–who you should absolutely follow if you don’t already–about <a href="https://vickiboykis.com/2022/12/05/the-cloudy-layers-of-modern-day-programming/">how layered modern software engineering and programming have become</a>:</p>
<blockquote class="blockquote">
<p>Modern software is hard to develop locally, hard to build the internal logic for, and intrinsically hard to deploy, especially so in the case of machine learning. Just take a look at <a href="https://arxiv.org/ftp/arxiv/papers/2205/2205.02302.pdf">the MLOps paper</a>, which I have nightmares about occasionally.</p>
<p>The problem has gotten so bad that you can usually no longer start from scratch and develop and test <a href="https://twitter.com/vboykis/status/1592576567305474049">a single piece of software in a single, preferably local environment</a>.</p>
</blockquote>
<p>As someone in the data science and machine learning space for the past decade+, I can definitely say that this is true. So I hope this post provides some clarity so you can proceed with installing arm64-compatible Mastodon without spending as much time as I did getting it to run.</p>
</section>
<section id="the-short-version" class="level3">
<h3 class="anchored" data-anchor-id="the-short-version">The short version</h3>
<p>The upshot is that the three major dependencies of Mastodon–redis, postgres, and elasticsearch–are all <a href="https://bitnami.com/">bitnami</a> images, and <strong>none of bitnami’s images are arm64-compatible</strong>.</p>
<p>(<a href="https://github.com/bitnami/charts/issues/7305">there is a mega-thread open</a> discussing bitnami’s <em>eventual</em> migration to arm64-compatible images, but they’ve made it very clear that it just isn’t a priority for them right now)</p>
<p>In mid-November 2022, <a href="https://github.com/mastodon/chart/issues/22">this issue</a> was posted. I was still working on getting my own Mastodon instance up and running, so it wasn’t until <a href="https://github.com/mastodon/chart/issues/22#issuecomment-1350081697">Dec 1 that I was finally able to respond</a> with something concrete (though by no means a complete picture–I still couldn’t figure out what to do about elasticsearch).</p>
<p>My response should have some familiar notes from the previous post, specifically regarding the modifications that needed to be made to <code>Chart.yaml</code>.</p>
<p>Another user in the issue mentioned the <a href="https://github.com/mastodon/chart/issues/22#issuecomment-1363930695">“bitnami-compat” project</a>, which I highly recommend checking out, but which I didn’t end up using, for reasons I’ll get into later in this post.</p>
<p>The OP on the issue <a href="https://github.com/mastodon/mastodon/discussions/22319">opened up a Discussion</a>, where I answered with the <a href="https://github.com/mastodon/mastodon/discussions/22319#discussioncomment-4410612">short version</a> of what this post will contain (along with, again, some content from the last post). You can read that if you like, or continue here! Or both!</p>
<p>The key approach I took: rather than swapping out entire charts, I stuck with the bitnami charts referenced in the Mastodon chart, but modified the <em>images</em> each of the bitnami charts referred to. In this way, I could minimize the amount of yaml reconfiguration I was doing to keep things at a reasonable amount of crazy.</p>
</section>
<section id="postgresql" class="level3">
<h3 class="anchored" data-anchor-id="postgresql">postgresql</h3>
<p>PostgreSQL was the easiest change, at least if minimizing “number of switches I needed to flip” is our metric of choice here for determining easy versus difficult.</p>
<p>The only real change I needed to make was how I performed the <code>helm install</code> process of the bitnami chart for postgres. Here’s the command I used:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">helm</span> install postgres bitnami/postgresql <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-2">    <span class="at" style="color: #657422;">--set</span> global.postgresql.auth.postgresPassword=<span class="st" style="color: #20794D;">"my_postgres_password"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-3">    <span class="at" style="color: #657422;">--set</span> global.postgresql.auth.username=<span class="st" style="color: #20794D;">"my_postgres_username"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-4">    <span class="at" style="color: #657422;">--set</span> global.postgresql.auth.password=<span class="st" style="color: #20794D;">"my_postgres_password"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-5">    <span class="at" style="color: #657422;">--set</span> global.postgresql.auth.database=<span class="st" style="color: #20794D;">"my_postgres_database"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-6">    <span class="at" style="color: #657422;">--set</span> image.repository=<span class="st" style="color: #20794D;">"postgres"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-7">    <span class="at" style="color: #657422;">--set</span> image.tag=<span class="st" style="color: #20794D;">"15.0"</span></span></code></pre></div>
<p>That’s it. The only <em>real</em> change of note is the <code>image.repository</code> target: it’s pointing to the <a href="https://hub.docker.com/_/postgres">official PostgreSQL image on DockerHub</a>, which has arm64-compatible images. The other items related to username, password, and database are items that need to be filled in anyway (here or in the <code>values.yaml</code> file), and the tag just ensures I’m using the same version that the bitnami image would have used, again to minimize any downstream conflicts.</p>
<p>And that was it! I used the bitnami <em>chart</em> with the postgres <em>image</em>, and it worked!</p>
</section>
<section id="redis" class="level3">
<h3 class="anchored" data-anchor-id="redis">redis</h3>
<p>Next up, our in-memory data broker.</p>
<p>This process was largely the same as with PostgreSQL, with one notable deviation: I also set the flag to put redis in <code>standalone</code> mode, given that my Pi cluster is resource-constrained and couldn’t afford to have the HA version that, I believe, is the default for the bitnami chart.</p>
<p>Here’s the helm command:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">helm</span> install redis bitnami/redis <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb2-2">    <span class="at" style="color: #657422;">--set</span> global.redis.password=<span class="st" style="color: #20794D;">"my_redis_password"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb2-3">    <span class="at" style="color: #657422;">--set</span> architecture=<span class="st" style="color: #20794D;">"standalone"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb2-4">    <span class="at" style="color: #657422;">--set</span> image.repository=<span class="st" style="color: #20794D;">"redis"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb2-5">    <span class="at" style="color: #657422;">--set</span> image.tag=<span class="st" style="color: #20794D;">"7.0"</span></span></code></pre></div>
<p>Again, the password is something we need to set up anyway, the architecture is set to <code>standalone</code> to minimize its in-memory footprint, tag is meant to match with the bitnami version, and finally the <code>image.repository</code> points to the <a href="https://hub.docker.com/_/redis">official redis image on DockerHub</a> which, like PostgreSQL, has an arm64-compatible version.</p>
</section>
<section id="elasticsearch-opensearch" class="level3">
<h3 class="anchored" data-anchor-id="elasticsearch-opensearch"><del>elasticsearch</del> OpenSearch</h3>
<p>I tried to get elasticsearch to work. I really did.</p>
<p>I started off the same way as with postgres and redis: like the first two, there are <a href="https://github.com/bitnami/charts/tree/main/bitnami/elasticsearch#global-parameters">only a few critical global parameters</a> that need to be set, and they’re the usual suspects–change the image registry to point to the official image on DockerHub, change the image tag to match the bitnami image version, and… that’s really about it.</p>
<p>The hang-ups, crashes, and reboots started immediately. Turns out, elasticsearch is <em>incredibly resource-intensive</em>. So I set about trying to set absolutely minimal overheads: setting master and data replicas to 1, constraining the java heap size, and disabling ingest… none of which worked.</p>
<p>Even aside from the resource constraints, there was a second problem. For whatever reason, the bitnami chart for elasticsearch has a <em>second</em> container–the “kernel settings modifier”–that is part of the pod, and which also has an image that, by default, is not compatible with ARM. So in theory, to get elasticsearch to work with the same technique, the following fields would also have to be changed in the helm chart:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1">    <span class="ex" style="color: null;">--set</span> sysctlImage.registry=<span class="st" style="color: #20794D;">"ghcr.io"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb3-2">    <span class="at" style="color: #657422;">--set</span> sysctlImage.repository=<span class="st" style="color: #20794D;">"zcube/bitnami-compat/bitnami-shell"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb3-3">    <span class="at" style="color: #657422;">--set</span> sysctlImage.tag=<span class="st" style="color: #20794D;">"11.0.0-debian-11-r39"</span> <span class="dt" style="color: #AD0000;">\</span></span></code></pre></div>
<p>This is a bit different from the changes made with postgres and redis. There is no “official” distribution of the “kernel settings modifier” image, as this is exclusive to bitnami. Instead, we needed to go to the <a href="https://github.com/ZCube/bitnami-compat">bitnami-compat project</a> which is attempting to make bitnami-compatible arm64 images for all the major charts, and which could feasibly serve as drop-in replacements for redis and postgres as well (I just didn’t try them because I got them working before discovering bitnami-compat). But it’s perfect for this situation.</p>
<p>Suffice to say, this completely solved the architectural compatibility issues, but I still could not fix the resourcing problems without fundamentally hobbling elasticsearch to the point of futility.</p>
<p>Instead, I followed some advice from the Mastodon devs who have, unofficially, been able to get <a href="https://opensearch.org/docs/latest/about/">OpenSearch to work as a drop-in elasticsearch replacement</a> in Mastodon.</p>
<p>(Side note: OpenSearch is based on Apache Lucene, which was the progenitor project to <a href="https://mahout.apache.org/">Apache Mahout</a>, for which I’m a member of its PMC! Small world. I love open source &lt;3 )</p>
<p>Turns out, OpenSearch is <em>remarkable</em>, both in its minimal resource usage <em>and</em> with its ease of dropping right in where elasticsearch would go. My only complaint was the chart’s use of a multi-line yaml string in its settings, which–to my limited knowledge and experience, at least–precluded its exclusive command-line use, and forced me instead to modify the <code>values.yaml</code> and pass that directly to helm. Still, there were very few modifications I needed to make–here’s an indicator with line numbers corresponding to <a href="https://github.com/opensearch-project/helm-charts/blob/c6ebc864c92e6d64cb2097269290193b3844a8e7/charts/opensearch/values.yaml">what is <em>currently</em> the latest version of the chart</a> (committed Jan 3, 2023):</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># Line 8: again, needed to keep things minimal</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">singleNode</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;"># Line 22: just to be obnoxiously consistent</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;">replicas</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;"># config.opensearch.yml | plugins.security</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;"># Insert the following line just below Line 61</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;"># *** This might be the single most important change! ***</span></span>
<span id="cb4-10"><span class="fu" style="color: #4758AB;">disabled</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;"># Added somewhere under persistence, after Line 187</span></span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;">storageClass</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;my storage class&gt;</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;"># Line 299</span></span>
<span id="cb4-16"><span class="fu" style="color: #4758AB;">securityConfig.enabled</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">false</span></span></code></pre></div>
<p>That’s all I needed. Then by passing the edited <code>values.yaml</code> to <code>helm install</code>, it ran just fine.</p>
</section>
<section id="postamble" class="level3">
<h3 class="anchored" data-anchor-id="postamble">Postamble</h3>
<p>That’s it for the prerequisites! At this point, you could pretty much spin up a Mastodon instance as configured. However, before getting to how I went about that process, I wanted to touch on one final problem I ran into, which–despite the nit-picky-ness of getting these arm64-compatible dependencies working–is where I <em>actually</em> spent most of my time trying to get Mastodon up and running: obtaining an SSL certificate through Let’s Encrypt.</p>
<p>Until next time!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Mastodon, {Part} {III:} {Configuring} and Installing the
    Prerequisites},
  date = {2023-02-09},
  url = {https://magsol.github.io/2023-02-09-configuring-and-installing-prereqs},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Mastodon, Part III: Configuring and
Installing the Prerequisites.”</span> February 9, 2023. <a href="https://magsol.github.io/2023-02-09-configuring-and-installing-prereqs">https://magsol.github.io/2023-02-09-configuring-and-installing-prereqs</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>k3s</category>
  <category>mastodon</category>
  <category>dependencies</category>
  <guid>https://magsol.github.io/posts/2023-02-09-configuring-and-installing-prereqs/index.html</guid>
  <pubDate>Thu, 09 Feb 2023 14:39:00 GMT</pubDate>
  <media:content url="https://imgs.xkcd.com/comics/tech_loops.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Mastodon, Part II: The Mastodon Helm chart</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-01-25-mastodon-helm-chart/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-01-25-mastodon-helm-chart/helmsperson.png" class="preview-image img-fluid" alt="Dramatic image of a galleon sailing on stormy seas (generated by Midjourney)."></p>
<p><em>This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:</em></p>
<ol type="1">
<li><a href="../../posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html">Introduction</a></li>
<li><a href="../../posts/2023-01-23-mastodon-home-network-topology/index.html">Part I: My home network topology</a></li>
<li>Part II: The Mastodon Helm chart <em>(this post)</em></li>
<li>Part III: Configuring and installing prerequisites</li>
<li>Part IV: The waking nightmare that is Let’s Encrypt</li>
<li>Part V: Actually installing Mastodon</li>
<li>Conclusions</li>
</ol>
<p>I don’t know about you, dear reader, but when I first started this journey into teaching myself kubernetes, I was elated at the prospect of Helm: a “package manager for kubernetes”, it said! Thank the cloudless heavens; I was getting so bogged down with managing separate yaml files, I was thrilled at the prospect of someone just setting some reasonable defaults and packaging it all together.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-25-mastodon-helm-chart/take-this-helmchart.jpg" class="img-fluid figure-img" alt="Spongebob meme base, with text reading 'Take this helm chart they said, everything will work they said.'"></p>
<p></p><figcaption class="figure-caption">Such a cruel realization.</figcaption><p></p>
</figure>
</div>
<section id="introducing-the-mastodon-chart" class="level3">
<h3 class="anchored" data-anchor-id="introducing-the-mastodon-chart">Introducing the Mastodon chart</h3>
<p>You can find the latest version of the Mastodon chart <a href="https://github.com/mastodon/chart">here</a>.</p>
<p>I should mention: when I started working on this in early December, the chart was actually still part of the main Mastodon repo! This meant that changes were much slower to be merged, and as a result I had to implement some workarounds that have since been fixed in the newest chart. Even so, I’ll point out 1) any changes I made, 2) whether those changes still need to be made now, and 3) relevant PRs.</p>
<p>The chart repo’s README linked above provides pretty good instructions for getting up and running. Or, in my case, to get some initial error messages that pointed me where I needed to go next.</p>
<p>At the bare minimum, <a href="https://github.com/mastodon/chart#configuration"><em>everyone</em> has to fill in</a>:</p>
<ul>
<li>the whole <code>mastodon.secrets</code> section (four keys)</li>
<li>the <code>postgres</code> and <code>redis</code> sections (whether or not they’re enabled in the chart)</li>
<li>the <code>mastodon.stmp</code> section for the mailer’s SMTP settings (not <em>technically</em> required, but nobody will be able to register with your instance or reset their passwords without them)</li>
</ul>
<p>Because of my circumstances, I also had to modify the <code>elasticsearch</code> section (that’s another bitnami image that wasn’t ARM-compatible, like redis and postgres; but I’m leaving all three of these for the next post!), the <code>ingress</code> section (because I was running <a href="https://github.com/traefik/traefik-helm-chart">traefik</a> instead of the default nginx), and the <code>mastodon.persistence</code> section (because I was using a local NAS for storage–I know, not recommended for production, but for a two-user instance? no problem).</p>
<p>So with that lengthy introduction and background out of the way, the salient points here and the primary guiding principles in diving into the chart are:</p>
<ul>
<li><em>Disabling</em> the dependencies (elasticsearch, redis, postgres) so I could install them myself later (next post!)</li>
<li><em>Adding</em> NAS storage as the primary storage mechanism (I was using <a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner">nfs subdir external provisioner</a>)</li>
<li><em>Configuring</em> ingress to work with traefik instead of nginx</li>
</ul>
</section>
<section id="the-easy-stuff-storage-and-ingress" class="level3">
<h3 class="anchored" data-anchor-id="the-easy-stuff-storage-and-ingress">The “easy” stuff: storage and ingress</h3>
<p>Probably the easiest modification to make was the storage. Under <code>mastodon.persistence</code>, there are two main groups: <code>assets</code> and <code>system</code>. They both have their own persistent volumes in case you need to dramatically alter their respective configurations, but I went with the default, adding only one line to each subsection (since <code>storageClassName</code> wasn’t even listed in the default chart, but has templates in the backend that will handle the key-values if provided):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">persistence</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">assets</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;">      # -- ReadWriteOnce is more widely supported than ReadWriteMany, but limits</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;">      # scalability, since it requires the Rails and Sidekiq pods to run on the</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;">      # same node.</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">accessMode</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ReadWriteOnce</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">storageClassName</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> my-nfs-storage-class</span><span class="co" style="color: #5E5E5E;"> ### ADDED THIS LINE</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">resources</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">requests</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">storage</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> 10Gi</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">system</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">accessMode</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ReadWriteOnce</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">storageClassName</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> my-nfs-storage-class</span><span class="co" style="color: #5E5E5E;"> ### ADDED THIS LINE</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">resources</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">requests</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">storage</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> 100Gi</span></span></code></pre></div>
<p>That’s it! Mischief managed.</p>
<p>For ingress, things were a little more complicated. Not because it required more configuration in the chart itself, but because it required more configuration <em>ahead of using the chart at all</em>. The ingress configuration in the Mastodon chart itself masks the hours spent getting traefik set up exactly the way I wanted. Sadly, this is beyond the scope of the Mastodon instance setup (it will definitely appear in a blog post about just getting my k3s cluster off the ground!), but I <em>will</em> discuss configuring the TLS support / SSL certificates in a later post in this series, so stay tuned.</p>
<p>Here was my configuration (changes from the current default are marked, and comments are deleted for brevity):</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">ingress</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">enabled</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">annotations</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">cert-manager.io/cluster-issuer</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"letsencrypt-prod-dns"</span><span class="co" style="color: #5E5E5E;"> ### ADDED - will go over in detail in a future post in this series</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">ingressClassName</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> traefik</span><span class="co" style="color: #5E5E5E;">  ### MODIFIED - added the ingress class name I used</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">hosts</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">host</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> quinnwitz.house</span><span class="co" style="color: #5E5E5E;">  ### MODIFIED - my instance domain name</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">paths</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">'/'</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">tls</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">secretName</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> mastodon-tls</span></span>
<span id="cb2-12"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">hosts</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-13"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> quinnwitz.house</span><span class="co" style="color: #5E5E5E;"> ### MODIFIED - my instance domain name</span></span></code></pre></div>
<p>That’s it! Relatively tame modifications, but belie a groundswell of configuration and wrangling that had already happened. In particular, note the <code>tls.secretName</code> field: I may not have modified it, but I did have to create a Secret named <code>mastodon-tls</code> ahead of deploying the chart! That was part of the magic of cert-manager behind the scenes, communicating with Let’s Encrypt and getting an SSL certificate set up (again, a future post–stay tuned).</p>
</section>
<section id="the-harder-stuff-disabling-dependencies-and-modifying-templates" class="level3">
<h3 class="anchored" data-anchor-id="the-harder-stuff-disabling-dependencies-and-modifying-templates">The harder stuff: disabling dependencies and modifying templates</h3>
<p>Ok, disabling the dependencies was actually easy. Here’s all it took:</p>
<ol type="1">
<li>Go to <code>redis</code>, <code>postgresql</code>, and <code>elasticsearch</code> sections</li>
<li>Each one has an <code>enabled:</code> key–set it to <code>false</code></li>
</ol>
<p>That’s it! They’re disabled. <strong>Your Helm chart is now fully ARM-compatible!</strong></p>
<p>…except by disabling all the bitnami charts, you’ve introduced an insidious bug where, for some reason, the <a href="https://artifacthub.io/packages/helm/bitnami/common">Bitnami Common Library chart</a> can no longer be found. Fortunately, the fix is easy.</p>
<p>Go to the <a href="https://github.com/mastodon/chart/blob/main/Chart.yaml">Chart.yaml file</a> and add a new entry under the <code>dependencies:</code> list:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> common</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">   </span><span class="fu" style="color: #4758AB;">version</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> 1.x.x</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">   </span><span class="fu" style="color: #4758AB;">repository</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> https://charts.bitnami.com/bitnami</span></span></code></pre></div>
<p>Now when you run <code>helm dep update</code> before installing the chart, the Common chart will still be downloaded and everything will work, even with the other bitnami dependencies disabled.</p>
<p>Unfortunately, this leaves us with the trickiest part of the Helm chart modifications: actually tweaking the redis, postgres, and elasticsearch sections (and, in some cases, templates!) to work with the separate instances we’ll spin up later.</p>
<p><strong>Elasticsearch</strong> doesn’t require any extra tweaking, so we can leave that alone for now.</p>
<p><strong>Postgres</strong> needs the following fields:</p>
<ul>
<li><code>postgresqlHostname</code>: postgres automatically spits this out when you succesfully install it for the first time, so just copy/paste from that</li>
<li><code>postgresqlPort</code>: this is almost always 5432, to the point where that’s the default in the helm chart’s backend template</li>
<li><code>auth.database</code>, <code>auth.username</code>, and <code>auth.password</code> / <code>auth.postgresPassword</code> are set <strong>by you, the user</strong> when you install postgres separately; we’ll go over this in the following blog post</li>
<li>it’s very important to note that <code>auth.password</code> and <code>auth.postgresPassword</code> <strong>should have the same value</strong></li>
</ul>
<p>Finally, <strong>redis</strong> needs the following fields:</p>
<ul>
<li><code>hostname</code>: like postgres, this is spit out automatically when you successfully spin up redis for the first time, so take note of it and copy/paste it here</li>
<li><code>password</code>: this is set <strong>by you, the user</strong> when you install redis separately; we’ll go over this in the following blog post</li>
<li>weirdly, I needed to set <code>auth.existingSecret</code> too</li>
</ul>
<p>To the last point, I created the following <code>redis-password.yaml</code> file:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;">apiVersion</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> v1</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">kind</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Secret</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">metadata</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> mastodon-redis</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">namespace</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> mastodon</span></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Opaque</span></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;">stringData</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">redis-password</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> &lt;same value as password&gt;</span></span></code></pre></div>
<p>Running <code>kubectl apply -f redis-password.yaml</code> into the Mastodon namespace got it working. I still don’t know why I needed both the Secret and the password in the helm chart to get it to work–it may work with just the Secret, or maybe whatever weird situation caused it was fixed and now just the password in the helm chart will work–but this operation was fairly simple and got everything working so I went with it. I <a href="https://github.com/mastodon/mastodon/pull/20819">created a PR for this</a> a few months back, but it was rolled into a broader PR tasked with migrating the chart over to its own repository, so I’m not sure if its fixes were ever implemented.</p>
<p>There were some changes directly to the <code>templates/configmap-env.yaml</code> file that were needed, but thankfully many of these have already been addressed courtesy of some PRs:</p>
<ul>
<li><a href="https://github.com/mastodon/mastodon/pull/19678">Fix helm postgresql secret</a> (#19678)</li>
<li><a href="https://github.com/mastodon/chart/pull/6">Allow external redis instance</a> (#6, replaces <a href="https://github.com/mastodon/mastodon/pull/20322">#20322</a>)</li>
<li><a href="https://github.com/mastodon/mastodon/pull/20370">Add option to configure external postgresql port</a> (#20370)</li>
<li><a href="https://github.com/mastodon/mastodon/pull/19826">Helm chart improved for ingress</a> (#19826)</li>
</ul>
</section>
<section id="thanks-helm" class="level3">
<h3 class="anchored" data-anchor-id="thanks-helm">Thanks Helm!</h3>
<p>That about does it for setting up the Helm chart and its corresponding values ahead of installing it… which we won’t actually do for a couple more blog posts yet.</p>
<p>For now, I need to rewind a bit to go over 1) how to install the dependencies we just spent an entire blog post disabling and then configuring anyway, and 2) how to get SSL to work.</p>
<p>Once we get those items squared away, then we can circle back to the completed Helm chart and install a functioning Mastodon instance! Isn’t being a sysadmin great?!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Mastodon, {Part} {II:} {The} {Mastodon} {Helm} Chart},
  date = {2023-01-25},
  url = {https://magsol.github.io/2023-01-25-mastodon-helm-chart},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Mastodon, Part II: The Mastodon Helm
Chart.”</span> January 25, 2023. <a href="https://magsol.github.io/2023-01-25-mastodon-helm-chart">https://magsol.github.io/2023-01-25-mastodon-helm-chart</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>k3s</category>
  <category>mastodon</category>
  <category>helm</category>
  <guid>https://magsol.github.io/posts/2023-01-25-mastodon-helm-chart/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 16:27:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-01-25-mastodon-helm-chart/helmsperson.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Mastodon, Part I: My home network topology</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/networking_made_easy.png" class="preview-image img-fluid" alt="Horrific jumble of networking wires and equipment stylized like Cthulu (generated by Midjourney)."></p>
<p><em>This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:</em></p>
<ol type="1">
<li><a href="../../posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html">Introduction</a></li>
<li>Part I: My home network topology <em>(this post)</em></li>
<li>Part II: The Mastodon Helm chart</li>
<li>Part III: Configuring and installing prerequisites</li>
<li>Part IV: The waking nightmare that is Let’s Encrypt</li>
<li>Part V: Actually installing Mastodon</li>
<li>Conclusions</li>
</ol>
<p>Admittedly, this post in the series will be less “here’s how to spin up your own instance” than “here’s why I had so many problems that are specific just to me”, so if you have a solid handle on your own home network topology and/or are a DNS savant, feel free to skip this post.</p>
<p>For the rest of us mere networking mortals, let me walk you through a network hiccup that has been stymieing my attempt at an honest-to-goodness homelab kubernetes cluster for the better part of the last couple years.</p>
<section id="thanks-a-lot-bezos" class="level3">
<h3 class="anchored" data-anchor-id="thanks-a-lot-bezos">Thanks a lot, Bezos</h3>
<p>During the height of the pandemic in summer 2020–and somewhat in preparation for the birth of our daughter–I performed some long-overdue home network upgrades. This included 1) switching over to fiber internet, and 2) upgrading to a mesh network, rather than the janky router-plus-extender setup that honestly never really worked all that well. The router itself was already 5+ years old (purchased when we first moved into the house), so it needed an upgrade anyway.</p>
<p>At the recommendation of some friends, I went with <a href="https://eero.com/">eero</a>. Honestly, I’d still recommend it: it’s been rock-solid, with no problems between my Apple devices (MBP, iPad Pro, and iPhone), my wife’s Android+Windows devices (Surface, Pixels), and our myriad <a href="https://twitter.com/internetofshit">internet-of-sh!t devices</a> strewn throughout the house. Literally zero problems, which I honestly can’t even say for our old router.</p>
<p>…with, I suppose, one exception: putting the eeros into bridge mode.</p>
</section>
<section id="bridge-mode-is-not-what-you-think-it-is" class="level3">
<h3 class="anchored" data-anchor-id="bridge-mode-is-not-what-you-think-it-is">Bridge mode is not what you think it is</h3>
<p>As far as I’m aware, across all devices–from ISP modems to VirtualBox to Docker to home routers–the term “bridge mode” has a common intuition: it means the device that has been placed into bridge mode relinquishes any intelligent packet organizing methods it may have been using before and simply acts as a simple “bridge” between whatever entities it is connected to. As such, it doesn’t really care what those entities are, it just passes traffic between them.</p>
<p>Not so with eeros.</p>
<p>To illustrate, here is what my home network looked like <em>before</em> starting any of this craziness.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/original.jpg" class="img-fluid figure-img" alt="My home network setup pre-Mastodon, where the main eero connects directly to the AT&amp;T modem and acts as the chief router and DHCP server of the household."></p>
<p></p><figcaption class="figure-caption">Why yes, I did configure MoCA for my home mesh, thanks for asking.</figcaption><p></p>
</figure>
</div>
<p>This setup worked, except… see that Raspberry Pi cluster in the bottom left? That’s where I installed k3s for tinkering, but “tinkering” is pretty much all anything amounted to, because eeros have an odd limitation when it comes to port forwarding: <strong>they don’t allow IP-based service forwarding</strong>, or at least, service forwarding that is based <strong>solely</strong> on IP addresses; they also require MAC addresses. When dealing with ephemeral services created by kubernetes clusters on floating IP ranges, there aren’t associated MAC addresses with these services, which makes it impossible to use software-based load balancers like <a href="https://metallb.universe.tf/">metallb</a>, and therefore impossible to deploy multiple services that use similar configurations–like, say, multiple websites: Mastodon and something else.</p>
<p>So the first thing I had to do, were I to run my own instance, was to figure out a network configuration that would allow me to do IP-based port forwarding. I recalled that my old router had this ability, so I figured: let’s just pull that out of retirement and use it purely for port forwarding!</p>
<p>Following was my first attempt. Note the major changes: the router has taken the place of the “main” eero as connecting directly to the ISP modem, and what was formerly the “main” eero is now just a wireless access point, connected to nothing <em>except</em> the router.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/first_bridge_attempt.jpg" class="img-fluid figure-img" alt="My initial attempt at a home network setup that re-integrated my old router which could perform IP-based port forwarding. It took the place of the main eero by connecting to the ISP modem, and what had been the main eero was now just another access point, connected only to the now-unretired router."></p>
<p></p><figcaption class="figure-caption">My first attempt at putting the eeros in bridge mode and un-retiring my old router.</figcaption><p></p>
</figure>
</div>
<p>Suffice to say, this didn’t work. I mean, it <em>kind of</em> worked: the Raspberry Pi cluster was getting the right traffic forwarded to it. But seemingly random devices on the network would, suddenly and for no reason I could discern, disconnect and refuse to reconnect unless the <em>entire network</em> was rebooted.</p>
<p>Not exactly a tenable situation. So I reverted to the previous configuration where the eeros were in charge while I tried to figure out what was going on.</p>
<p>Fast forward about 8 months. I finally, <em>finally</em> found <a href="https://www.reddit.com/r/eero/comments/nxlspa/psa_bridge_mode_is_not_what_you_think_it_is/">this post on Reddit</a> (because why would eero have it in their technical support documents?) from a couple years ago, with this critical element:</p>
<p><img src="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/eero_bridge_network.jpeg" class="img-fluid" alt="Screenshot of one post from the previous Reddit link, summarizing the precise network topology and positioning of the main eero in the sequence that eero expects in order to function correctly in bridge mode."></p>
<p>Apparently, even in bridge mode, there has to be at least one eero that can “see” the entirety of your home network (i.e., all incoming traffic should pass through it).</p>
<p>This… made absolutely no sense to me, as it directly contravened my understanding of “bridge mode”. But I went with it, and retooled my network to follow this new bit of information.</p>
<p>Here was my next attempt. Like my previous attempt, the router is connected directly to the ISP model. However, <em>unlike</em> my previous attempt, what was the “main” eero in the original configuration–while still connected to the router–now sits between the router and <em>the entire rest of the home network</em>, rather than just the router and… whatever devices deign to connect wirelessly to it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/newest_topology.jpg" class="img-fluid figure-img" alt="My final attempt at a home network setup that re-integrated my old router which could perform IP-based port forwarding. This took into account that at least one eero still needed to be able to see all the incoming traffic, so I made sure there was one situated in between the now-unretired router and the rest of the home network. This seemed to resolve the issues and has been my stable configuration for several months now."></p>
<p></p><figcaption class="figure-caption">My final attempt at a network reconfiguration, this time putting one eero ahead of the rest of the home network.</figcaption><p></p>
</figure>
</div>
<p>This configuration, while still strange to me, officially works–or at least, it’s worked for the past few months with no issues.</p>
</section>
<section id="load-balancers-green" class="level3">
<h3 class="anchored" data-anchor-id="load-balancers-green">Load balancers: green</h3>
<p>With the issue of the k3s Raspberry Pi cluster being able to receive incoming traffic from the wider internet effectively resolved, I could now undertake the process of installing a Mastodon instance on the cluster with gusto.</p>
<p>In the next post, we’ll look at the <a href="https://github.com/mastodon/chart">Mastodon Helm chart</a> in all its glory. Stay tuned!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Mastodon, {Part} {I:} {My} Home Network Topology},
  date = {2023-01-23},
  url = {https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Mastodon, Part I: My Home Network
Topology.”</span> January 23, 2023. <a href="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/">https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>k3s</category>
  <category>mastodon</category>
  <category>networking</category>
  <guid>https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/index.html</guid>
  <pubDate>Mon, 23 Jan 2023 15:44:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/networking_made_easy.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Running your own Mastodon instance on a Raspberry Pi k3s cluster</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/elephant.png" class="img-fluid" alt="Rear view of a sitting elephant gazing at mountains in the distance (generated by Midjourney)."></p>
<ol type="1">
<li>Introduction <em>(this post)</em></li>
<li>Part I: My home network topology</li>
<li>Part II: The Mastodon Helm chart</li>
<li>Part III: Configuring and installing prerequisites</li>
<li>Part IV: The waking nightmare that is Let’s Encrypt</li>
<li>Part V: Actually installing Mastodon</li>
<li>Conclusions</li>
</ol>
<p>As I mentioned in my previous post, I spent the last month of last year spinning up my own Mastodon instance (<a href="https://quinnwitz.house/">which you can check out</a>!) I’ve had a Raspberry Pi cluster of 5x Pi 4B modules sitting around for the better part of the last two years<sup>1</sup>. I’ve occasionally toyed with installing <a href="https://k3s.io/">k3s</a> and experimenting with various bits and pieces of kubernetes, but never actually deployed something I found useful.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/pi_cluster.jpg" class="img-fluid figure-img" alt="A very suspicious looking server rack for the five Raspberry Pi computers."></p>
<p></p><figcaption class="figure-caption">Don’t worry, they’re well protected.</figcaption><p></p>
</figure>
</div>
<p>Don’t get me wrong–I do want to go over how I installed and configured k3s on my Raspberry Pi cluster. It’s remarkable how quickly this area of things moves, and the guides I was working off for this were all 2-3 years old, and <em>remarkably</em> outdated. So a more recent tutorial on that basic component would definitely have its niche, I think.</p>
<p>But first, I want to kick off a series of posts detailing how I got a Mastodon instance running! It took a surprising amount of wrangling, so I wanted to share my experience before I forget the tiny details.</p>
<p>Why would you be interested in this series? Aside from the usual rough-and-tumble of installing anything on kubernetes via <a href="https://helm.sh/">helm</a>, the two parts that took the greatest amount of time and effort were 1) getting the Mastodon <em>dependencies</em> to work, and 2) wrestling <a href="https://letsencrypt.org/">Let’s Encrypt</a> into submission. That first point is interesting because while Mastodon itself works just fine on ARM, the default images included in the Mastodon helm chart for the dependencies do <em>NOT</em>, and so it won’t work out-of-the-box on a Raspberry Pi cluster. And the second point was just plain rage-inducing, and I’d love for folks to not have to experience that.</p>
<p>I’ll fill in the links as I write the posts, so that you can bookmark this page if you’d like, though I’ll make sure to include the links on the other posts as well as I write them. In the meantime, don’t hesitate to drop any pointers / corrections / questions!</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Yes, I did indeed purchase them two years ago. Would’ve been nigh impossible to get them at any time in between 😬↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {Running Your Own {Mastodon} Instance on a {Raspberry} {Pi}
    K3s Cluster},
  date = {2023-01-20},
  url = {https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“Running Your Own Mastodon Instance on a
Raspberry Pi K3s Cluster.”</span> January 20, 2023. <a href="https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/">https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>k3s</category>
  <category>mastodon</category>
  <guid>https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html</guid>
  <pubDate>Fri, 20 Jan 2023 16:15:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/elephant.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>2022: A year in review</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2023-01-14-year-that-almost-was/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/broken_sword.png" class="preview-image img-fluid" alt="Close-up of a broken sword lying amidst ruins (generated by Midjourney)."></p>
<div class="callout-warning callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>There’s going to be <em>language</em> in this post. Consider skipping if you prefer your blog posts merely warmed and with cream; this one is straight out of the pourover.</p>
</div>
</div>
<p>2022 was a fucking shitshow.</p>
<p>Forget the transition out of academia that fell flat on its fucking face in the final mile<sup>1</sup>. Forget the actual running that went from runway to runway, gunning the engine and building some speed on occasion but without ever quite taking off. Forget 2022’s parting shot of giving our entirely family COVID within days of the year’s end (save our daughter, miraculously and thankfully) when we’ve been so diligent for three fucking years. Forget that we’ve been pretty much the only ones still wearing masks on planes and at our daughter’s daycare, as if “I’ve decided to get on with my life” somehow makes the pandemic over simply by willing it; as if it’s impossible to “get on with life” while also taking basic fucking precautions that hurt no one and help everyone.</p>
<p>All of that was rage-inducing beyond words and each deserve their own posts to really break down. But the real story of my 2022 was of burnout that I foolishly thought I could outrun.</p>
<section id="burnout-dances-to-its-own-tune" class="level3">
<h3 class="anchored" data-anchor-id="burnout-dances-to-its-own-tune">Burnout dances to its own tune</h3>
<p>I’ve been burned out for quite awhile now; realistically, there are likely roots going all the way back to graduate school, but things really kicked into gear with the tenure-track position and the stress it brought.</p>
<p>The pandemic didn’t create anything new in this regard, but it did act as a force multiplier, frying what little bandwidth I had left and forcing me to confront just how toxic my working circumstances were.</p>
<p>This was all complicated by the birth of my daughter, happening at the same time as my promotion and tenure process, wrapped up in some of the most gratuitous displays of academia’s <em>utter disdain</em> both for growing families and, it turns out, straightforward public health guidelines around pandemic mitigation strategies.</p>
<p>Suffice to say, when I landed a job at Quansight in mid-late 2021, I jumped at the possibility of an exit strategy. Admittedly, I jumped way, way too soon: I was worried of losing the opportunity if I waited (irony), I didn’t have anything approximating a concrete exit strategy from academia (haste), and I thought I could hold down two positions long enough to gracefully exit (fucking LOL).</p>
</section>
<section id="writing-on-the-wall" class="level3">
<h3 class="anchored" data-anchor-id="writing-on-the-wall">Writing on the wall</h3>
<p>Even when I formalized a sabbatical beginning August 2022–an entire <em>eight months</em> after I started working full-time at Quansight–I was so far beyond any kind of discernible burnout threshold that it’s a miracle I lasted another three months before leaving.</p>
<p>Through all of 2022, my burnout was so severe that entire consecutive weeks would go by where I napped <em>daily</em> just to make it through the day. I was besieged by migraine headaches at the base of my neck that radiated down my legs; they wouldn’t respond to ibuprofen, and made literally any activity impossible. By the fall, I was having these migraines 3-4 days a <em>week</em>. But the <em>coup de gr<img src="https://latex.codecogs.com/png.latex?%5Chat%7Ba%7D">ce</em>, the real cherry on top of it all was how, on a given work week in 2022, my upper bound for productivity was probably about 25% efficiency.</p>
<p>Yes, I typed that correctly: on a given 40-hour work week, I at my peak could probably crank out about 10 hours of real, actual work. Most of the time, I was operating at some sigma less than that. <a href="https://www.youtube.com/watch?v=zBfTrjPSShs">I’ll take my promotion now</a>.</p>
<p>The weirdest thing about this level of burnout probably answers the obvious burning question following that previous revelation: I had no idea this was all related, or that there was even really a problem. The headaches were annoying, the naps made things bearable (in a sense), and surely I was just still getting the hang of things and I’d soon start churning out productive weeks? After all, I just had to hold out until I could sever all ties to academia in… 6-8 more months.</p>
<p>About that.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/this_is_fine.png" class="img-fluid figure-img" alt="A small child looking on with mild concern as a tiny being is on fire, sitting in a cooking dish, and also seems mildly perturbed by the situation. Meant to evoke similarities with the this-is-fine meme."></p>
<p></p><figcaption class="figure-caption">Midjourney did a pretty bang-up job when I asked for a tweaked version of “this is fine”.</figcaption><p></p>
</figure>
</div>
<p>To address the (one of many, I suspect) elephant in the room: wasn’t I on sabbatical from my academic role? Yes, dear reader, I was. And it was still requiring at least a handful of hours from me, on a good week. Some sabbatical.</p>
<p>Oh yeah, October. Our entire family got RSV in the second half of October. Didn’t I mention that earlier? No? Yeah, that was an entire week where all three of us were sick (so no daycare for kiddo), followed by a second week where my daughter and I developed secondary bacterial infections! Great for the aforementioned productivity!</p>
</section>
<section id="no-options-given" class="level3">
<h3 class="anchored" data-anchor-id="no-options-given">No options given</h3>
<p>If there’s anything positive to be said about burnout, it’s this: eventually, it gives you no choice. You reach a point where it’s physically, mentally, emotionally, spiritually, ecumenically, and grammatically <em>impossible</em> to keep moving forward.</p>
<p>Without going into detail<sup>2</sup>, that point came just before Thanksgiving. I left Quansight. I took the entire month of December off. And hooooooly shit y’all, but that month was, honest-to-goodness, maybe the first time in over a year I not only stopped digging the burnout hole deeper, but <em>actually started filling it back in</em>. I can’t describe the feeling of my brain lighting up and making connections and actually <em>functioning</em>–I spun up our household Mastodon instance in that time<sup>3</sup>! I actually recovered a bit, holy <em>fuck</em>.</p>
<p>And only then did I slowly begin to realize how absolutely <em>fucked</em> I’d been the entire year up until that point. How the <em>fuck</em> did I expect to be able to continue down this road for another <em>six to eight MONTHS</em>?</p>
<p>It seems ridiculous–laughable, if it didn’t border so close to outright dangerous–but only in hindsight.</p>
</section>
<section id="light-even-in-darkness" class="level3">
<h3 class="anchored" data-anchor-id="light-even-in-darkness">Light even in darkness</h3>
<p>My 2022 was defined by my burnout… but also by my realization of its full extent. And, in doing so, by the start of me turning things around.</p>
<p>Beyond burnout, there were some other events and accomplishments in 2022 that were cause for celebration by themselves.</p>
<p>My wife quit the job that was stifling her and is now pursuing her dreams as a full-time fiction writer. This was one of the very first things I learned about her all those years ago when we met<sup>4</sup>, and the fact that she’s living it now–and all the challenges and anxieties and freedoms and blessings it comes with–makes me prouder than I’ve been of anyone in years.</p>
<p>Speaking of my wife and her writing, she finished a complete draft of the book she’s been working on for the past bit. I finished reading it a week or so ago, and I <em>fucking love it</em>. I may be a little biased, but I also read 30 books last year according to my StoryGraph<sup>5</sup>, so I have at least an inkling of what I’m talking about. She’s an amazing writer; you should buy it when it’s published!</p>
<p>My daughter is rapidly turning into the most fiery and powerful person I could have ever hoped she would be. It’s exhausting and enthralling and I’m so freaking happy to be her dad.</p>
<p>We did, in fact, solve some of the flooding problems around our house<sup>6</sup>. We had extensive work done on the back and front yards, and I can proudly say that our front yard is virtually problem-free and our backyard is… better. Obviously there’s more to be done, but in exchange for a lot of money there was a good amount of progress toward eliminating the literal rivers that swirl around our house during a downpour.</p>
<p>For all my breathless pearl-clutching around my running failures, 2022 was, by any reasonable measure, an improvement over 2021, and those improvements should be celebrated… even if they aren’t the <em>impossible gains</em> I wanted.</p>
<p>Strava has a fitness estimate tracker; it’s obscenely biased in ways I can’t begin to wrap my head around, but it seems like a moderate-to-low variance estimator, so it provides a decent relative intuition on fitness over time. And I have to say: given my 2022, it’s halfway ok.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/fitness_estimate.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Yeah, my fitness hasn’t been great the past 6 months, but it’s held relatively steady. Given 2022, that’s an accomplishment by itself.</figcaption><p></p>
</figure>
</div>
<p>Speaking of running, my total mileage improved year-over-year. I also ran my first half marathon since before COVID<sup>7</sup>. It was the slowest half I’ve ever run (by a lot), but I finished. I also ran a handful of other races last year, which helped remind me that racing is a lot of fun–which helped remind me that <em>running is a lot of fun</em>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/annual_mileage.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Year-over-year total mileage run. More mileage with fewer runs indicate longer runs.</figcaption><p></p>
</figure>
</div>
<p>I spun up an entire Mastodon instance, <a href="https://quinnwitz.house/">Casa Quinnwitz</a>, on my homelab Raspberry Pi cluster (shout-out to the Mastodon dev team, which is full of super kind and patient folks). It’s pretty much my new socialz home, since Twitter has been rendered all-but-unusable with Tweetbot and all the other third-party clients going belly-up. I kind of love the vibe there; feels very longer-form-proto-Twitter with a pre-<a href="https://en.wikipedia.org/wiki/Eternal_September">Eternal September</a> thing going.</p>
<p><sup>8</sup></p>
</section>
<section id="whats-next" class="level3">
<h3 class="anchored" data-anchor-id="whats-next">What’s next?</h3>
<p>I’m back in the academy this semester, teaching my <a href="https://dsp-uga.github.io/sp23">data science practicum</a> course while guiding a half dozen of my remaining students to graduation in May. I have a weekly structure in place that balances my obligations to the academy with my needs for continuing rest, exercise, and <em>my own fun shit</em>. I’m still feeling the after-effects of COVID but am hoping that will taper off as I get back into running again, training for a half marathon in April and multiple shorter races before then. I have a concrete exit strategy from academy, and a timeline of events and milestones to accompany it.</p>
<p>Crucially, I’ve also adopted a new strategy for handling work-related items coming my way: <strong><em>NO</em></strong>.</p>
<p>No, I’m not taking new students.</p>
<p>No, I can’t review for your conference/study section/journal.</p>
<p>No, I’m not open to new research collaborations.</p>
<p>No, I can’t sit on your [insert topic here] panel<sup>9</sup>.</p>
<p>No, I’m not going to be on that committee.</p>
<p>No no no no no. No.</p>
<p>It’s a really hard fucking thing for a lifetime people-pleaser to set up boundaries, but for me in this moment, it’s both a matter of mere survival as well as a pathway to doing what I <em>really</em> love.</p>
<p>Here’s to a 2023 of healing. Much love to all of you 🥂</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Yes, there will be a future blog post on this. No, I’m not going to expound any further on it here.↩︎</p></li>
<li id="fn2"><p>Ask if you really want to know.↩︎</p></li>
<li id="fn3"><p>Don’t worry, I have an entire series of blog posts (six, I think?) planned to go over it in gross detail. Stay tuned!↩︎</p></li>
<li id="fn4"><p>Just about 17 years ago! 😱 ↩︎</p></li>
<li id="fn5"><p>Ditch Goodreads!↩︎</p></li>
<li id="fn6"><p>This one’s for you, Mom and Dad 🎄✉️ ↩︎</p></li>
<li id="fn7"><p>The last half I ran was late 2019, almost a 3-year gap!↩︎</p></li>
<li id="fn8"><p>Now I’m just fucking with you. Also I love footnotes, so expect to see a lot of them on every blog post.↩︎</p></li>
<li id="fn9"><p>Though I did get invited to one on <a href="https://www.reddit.com/r/ChatGPT/comments/10am8to/do_we_have_a_winner/">ChatGPT</a>, and <em>wow</em> the temptation to say “yes” and then just burn the whole place down is <em>overpowering</em>… I’ll have to think about it.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2023,
  author = {Shannon Quinn},
  title = {2022: {A} Year in Review},
  date = {2023-01-17},
  url = {https://magsol.github.io/posts/2023-01-14-year-that-almost-was/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2023" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2023. <span>“2022: A Year in Review.”</span> January 17,
2023. <a href="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/">https://magsol.github.io/posts/2023-01-14-year-that-almost-was/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>professional</category>
  <category>news</category>
  <guid>https://magsol.github.io/posts/2023-01-14-year-that-almost-was/index.html</guid>
  <pubDate>Tue, 17 Jan 2023 15:42:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2023-01-14-year-that-almost-was/broken_sword.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Pardon de dust (2)</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2022-12-13-pardon-the-dust/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2022-12-13-pardon-the-dust/clover.jpg" class="preview-image img-fluid" alt="Our bunny, Clover."></p>
<p>Why hello there. You may have noticed that things look a little bit different around here.</p>
<p>I’m in the process of migrating my blog <em>off</em> <a href="https://getpelican.com/">Pelican</a> and <em>on</em> to <a href="https://quarto.org/">Quarto</a>.</p>
<p>Why, you ask? Honestly, I got tired of having to fix a broken plugin or failed <code>git push</code> <em>every. single. time.</em> that I finished writing out a blog post. It gave an already-infrequent task an even higher activation threshold, and during a stretch where spare bandwidth was an incredible luxury.</p>
<p>In short: I’d really like to blog more often, and from what I’ve seen, Quarto will help me do just that. It definitely requires some extra bandwidth to get things migrated over, but fortunately: I have some of that at the moment :)</p>
<p>Stay tuned! In the meantime, please enjoy the above recent photo of Clover helping us put up our tree.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2022,
  author = {Shannon Quinn},
  title = {Pardon de Dust (2)},
  date = {2022-12-13},
  url = {https://magsol.github.io/posts/2022-12-13-pardon-the-dust/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2022" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2022. <span>“Pardon de Dust (2).”</span> December 13,
2022. <a href="https://magsol.github.io/posts/2022-12-13-pardon-the-dust/">https://magsol.github.io/posts/2022-12-13-pardon-the-dust/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>professional</category>
  <category>news</category>
  <guid>https://magsol.github.io/posts/2022-12-13-pardon-the-dust/index.html</guid>
  <pubDate>Tue, 13 Dec 2022 15:48:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2022-12-13-pardon-the-dust/clover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Breath of Fresh (albeit, indoor) Air</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/lakehylia.jpg" class="preview-image img-fluid" alt="Link from Breath of the Wild overlooking the scenery from the vantage point of Lake Hylia."></p>
<p>This is a divergence that is simultaneously strange and entirely predictable.</p>
<p>Allow me to explain.</p>
<p>First and foremost, <a href="https://wherearethepancakes.wordpress.com/2019/08/07/marathon-training-mode-enable/">I’ve been training for my first marathon in 4.5 years for the past several months</a>. It’s largely consisted of <a href="https://www.runnersworld.com/training/a20807188/how-do-i-build-a-training-base/">base-building</a>, but in the last couple of weeks we entered the “official” 16-week marathon training period…</p>
<p>…and my knee started pulling. Oh! And it coincided with the first week of decent summer weather we’ve had here in Athens since…2018? And if the past two weeks are any indication, this summer is going to be <a href="https://wherearethepancakes.wordpress.com/2016/08/23/the-summer-doldrums-arent-all-theyre-cracked-up-to-be/">as bad as that brutal one in 2016</a>.</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/goroncity.jpg" class="img-fluid" alt="Link from Breath of the Wild speaking with a Goron in Goron City."></p>
<p>Anyway!</p>
<p>Since I noticed the pulling in my knee the week before “official” training was to begin, my coach and I agreed–in the name of being super-cautious this early in the training cycle–that I would take a week off from running, focus on cross-training and physical therapy exercises, and let my knee heal up. During this time, I dove into the 2017 hit <em>Zelda: Breath of the Wild</em>, the new Zelda release for the Nintendo Switch, and logged–to use the technical term–a shitton of hours.</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/hillside.jpg" class="img-fluid" alt="Link from Breath of the Wild standing on a hillside covered in flowers."></p>
<p>Let me back up a little further.</p>
<p>I’ve never been secretive about my love of video gaming (and board gaming, and regular old sportsball gaming… any kind of gaming, really). But my real passion in video games has largely been constrained to variants of <a href="https://en.wikipedia.org/wiki/First-person_shooter">first-person shooters</a> and <a href="https://en.wikipedia.org/wiki/Real-time_strategy">real-time strategy</a>. This includes the usual suspects like <em>Left 4 Dead 2</em> and <em>StarCraft II</em>, but also slight variations like <em>Civilization V</em> (haven’t gotten the hang of <em>VI</em> yet), <em>Cities: Skylines</em>, <em>Homeworld</em>, and <em>Sins of a Solar Empire</em>.</p>
<p>The upshot: <em>Zelda</em> has never really been on my radar.</p>
<p>I mean, <strong>of course</strong> I’m familiar with the Zelda franchise. Back in the days of the <a href="https://www.dkoldies.com/game-boy-original-system-nintendo/">OG GameBoy</a>, I played <em>Link’s Awakening</em>. A lot of it. I played through it so many times I eventually figured out how to find enough “secret seashells” to get the Master Sword just before completing the 4th of the 8 main dungeons.</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/linksawakening_orig.jpg" class="img-fluid" alt="Screenshot from Link's Awakening on the original GameBoy unit."></p>
<p>(if it’s possible to get the sword sooner than that, don’t bother, I don’t want to know)</p>
<p>But for those who know the larger Zelda lore, this installment exists awkwardly both within but also without the Zelda story. I mean–SPOILERS for a 20+ year old game SPOILERS–it was all a dream. Or was it instead a reality that existed within our own, but vanished when the Wind Fish woke up? Who knows?</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/linksawakening_switch.jpg" class="img-fluid" alt="A pair of screenshots comparing the same location in Link's Awakening on the GameBoy version of the game to the recent Switch port."></p>
<p>(apparently there was a Nintendo Switch remake of <em>Link’s Awakening</em>?)</p>
<p>Regardless, while the usual Zelda themes certainly exist in <em>Link’s Awakening</em>, the specific story points don’t. So years later it was a shock to learn that Link actually had a primary antagonist, <strong>Ganon</strong>.</p>
<p>When I first met my future wife, one of the many things about her that charmed me was her love of the <em>Zelda</em> franchise, especially <em>Ocarina of Time</em>. I was never super motivated to play the games myself, but something that seems almost uniquely exclusive to Zelda games: they’re incredibly fun to watch someone else play! Even better, The Lady and I soon discovered that, not only did we have different playstyles when it came to video games, but they complemented each other in a way that really helped her/us solve the puzzles in these games with ruthless efficiency.</p>
<p>But even after watching her crush Ganon in <em>Ocarina of Time</em>, <em>Twilight Princess</em>, and Ganon’s progenitor in <em>Skyward Sword</em> (which I bought her as a gift on the very first Nintendo console we ever owned together… awwwwwww), I still never felt the itch to play the game myself.</p>
<p>And when I likewise bought <em>Breath of the Wild</em>, again for her to play, I once more assumed I’d watch, point things out here and there, and let her Zelda fandom run wild. Plus, I’d seen the reviews of this installment, and knew that while they’d thrown out a lot of “typical” Zelda grind, they also added a bunch of new gaming mechanisms that, on the surface, I held my nose for:</p>
<ul>
<li>Breakable weapons: I’d played games where weapons only lasted for finite amounts of time, and <em>holy shit</em> did this mechanic annoy the crap out of me.</li>
<li>Recipes: I haven’t actually played a game with this mechanic, but it’s been showing up more frequently in RPGs, a gaming genre I generally have a very, very hard time getting into.</li>
<li>Seasonality: This encompasses not only night/day changes, but also changes in weather patterns in-game, and subsequent changes in clothing / preparation of countermeasures (food, elixirs) in order to survive. I’ve played a lot of games with the night/day mechanic and have found it “meh” at best, super f*ckin annoying at worst. Combined with the need to constantly swap out clothing to adjust (and potentially lose abilities the previous clothing gave me) was irksome just to think about.</li>
<li>Nonlinear open world: Again, nothing against nonlinear gameplay–I for one love that <em>Civilization</em> has multiple win conditions, and that the <em>StarCraft II</em> missions are built to discourage “turtling” and force you to get creative–but as an avid follower of <a href="https://www.escapistmagazine.com/v2/series/zero-punctuation/">Zero Punctuation</a> I know how “well” Ubisoft’s (for example) “nonlinear” “open world” games have faired, and for the life of me I couldn’t see a game on Zelda’s scope doing any better.</li>
</ul>
<p>Boy oh boy, was I <em>wrong</em>.</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/lostwoods.jpg" class="img-fluid" alt="Link from Breath of the Wild standing near a campfire on a tower overlooking the foggy Lost Woods."></p>
<p>I watched The Lady play a game of her own for quite awhile, and at some point just kinda thought: eh, why not? and started my own game.</p>
<p>I was <em>hooked</em>. I can’t even explain why; even while writing that list of grievances, I kept thinking of examples <em>other</em> than <em>Breath of the Wild</em> with those mechanics and getting annoyed all over again. And yet, these are so well-done in <em>Breath of the Wild</em> that I don’t even notice them. Even moreso, annoyances in previous Zelda iterations–the “forced save points” of <em>Skyward Sword</em>, the nails-on-a-chalkboard running-back-and-forth over the <em>Ocarina</em> landscape to finish a simple side quest, the rupee limitations of literally every other <em>Zelda</em> game (until you bought a bigger rupee purse ???), the constant hunt for more arrows, and the lack of any jumping ability–they’re all gone!</p>
<p>The best thing I can say about this game is that they did an incredible job of 1) identifying the annoying things of previous Zelda games and cutting them out, and 2) introducing these new mechanics in a way that felt natural and intuitive. That’s really the crux of it: the game is <em>easy to figure out</em>, even while the actual gameplay is incredibly, brutally, and satisfyingly challenging.</p>
<p>That mastery of basics is why the game scales to such a <em>massive</em> landscape (thank you, travel points!); that’s why there’s enough room for three distinct and gorgeous dragons that fill you with excitement every time their music comes out of nowhere;</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/dinraal.jpg" class="img-fluid" alt="Link from Breath of the Wild looking up at the dragon Dinraal in the sky above."></p>
<p>that’s why staying in the nearest stable during a thunderstorm or going deep into the arctic tundra feels so much like curling up in front of a crackling fire on a freezing cold day;</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/snow.jpg" class="img-fluid" alt="Link from Breath of the Wild standing in a snowstorm with minimal visibility in any direction."></p>
<p>that’s why, even after completing part of a main quest, you’ll find yourself returning over and over to the same points on the map–to see an old friend, find a new side quest, or exchange some shiny rocks you could sell anywhere for a better price but you keep coming here because something about it makes you feel at home;</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/zoradomain.jpg" class="img-fluid" alt="Link from Breath of the Wild standing in the central fountain at Zora's Domain."></p>
<p>that’s why you can take a break in between main quests to try and ride a stag;</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/shrinequest.jpg" class="img-fluid" alt="Link from Breath of the Wild mounted on a stag, both standing on a shrine pedestal."></p>
<p>and yes, this is an actual side quest.</p>
<p>Nintendo knocked this one clear out of the park. It’s so wonderfully and incredibly immersive: I go from exploring the freezing cold peaks of the Hebra mountains to chasing down a monster aficionado with a nighttime shop along the southeastern coastline with absolutely no recollection of how I transitioned from one to the other.</p>
<p>But by far, the single biggest surprise is <strong>the plot</strong>. It’s nuanced, and mysterious, and even chilling in some cases, and it has me on the edge of my seat wanting to know what happens next. Previously, I’ve always felt the plot in Zelda games was a perpetual weakness: Zelda/Link good, Ganon bad, bludgeon Ganon until bad goes away and credits roll. But this game–at least so far (I’m not done yet)–makes me think there’s something at work beyond Ganon and his usual hijinks. The “good guys” in particular don’t seem perfect; I’m being led to think they made mistakes!</p>
<p>Sadly, classes start this week, so it’s unlikely I’ll be making fast progress over the next few months. But I do know The Lady was pretty thrilled to unlock one particular character from previous Zelda games who, while technically present in this game, required some external convincing to join the quest:</p>
<p><img src="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/epona.jpg" class="img-fluid" alt="Link from Breath of the Wild standing in front of Epona, the horse of legend."></p>
<p>I am loving everything about this game. Go buy it and forget reality! It’s a great way to kill time while healing from an injury.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2019,
  author = {Shannon Quinn},
  title = {Breath of {Fresh} (Albeit, Indoor) {Air}},
  date = {2019-08-12},
  url = {https://magsol.github.io/2019-08-12-breath-of-the-wild},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2019" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2019. <span>“Breath of Fresh (Albeit, Indoor)
Air.”</span> August 12, 2019. <a href="https://magsol.github.io/2019-08-12-breath-of-the-wild">https://magsol.github.io/2019-08-12-breath-of-the-wild</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>breath of the wild</category>
  <category>zelda</category>
  <category>running</category>
  <category>gaming</category>
  <category>nerds</category>
  <category>the lady</category>
  <category>injury</category>
  <guid>https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/index.html</guid>
  <pubDate>Mon, 12 Aug 2019 13:53:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2019-08-12-breath-of-the-wild/lakehylia.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Quinnwitz in Ireland</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/gapofdunloe.jpg" class="preview-image img-fluid" alt="The Gap of Dunloe in Killarney, Ireland."></p>
<p>The Lady and I just returned from a 12-day trip to Ireland (with a stop at the very start in Kent, England, to visit some <a href="https://twitter.com/kmorrell04">dear friends</a> and their <a href="./kent.jpg">6-month old</a> twins!).</p>
<p>I can’t begin to describe how incredible the trip was. It was one of those dreams you realize at some point you’ve been discussing with your significant other for <em>years</em>–quips here and there about “wouldn’t it be awesome to visit x” or “when we visit y someday…”. Ireland had been at the top of our list of international locations to see since years before we even got married, but it was always 5-10 years in the future, and never got any closer to reality.</p>
<p>Until that dear friend’s wedding in Bedford, England, in late summer 2017. At some point during some downtime in that long weekend, Ireland came up again in the same way it always did, but whether it was the international setting we were already in or some other twist of fate, The Lady suddenly said: “Let’s set a date.”</p>
<p>That day in August 2017, we set a tentative, but <em>actual</em>, date of May 2019. And we nailed it.</p>
<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview">Overview</h3>
<p>The logistics of the trip were pretty complicated. First, we wanted to fly into London and spend a day visiting those friends of ours out in Kent. Next, we wanted to start our journey in Ireland by spending a few days in Dublin.</p>
<p>From there, we wanted to hike in <a href="https://www.wicklowmountainsnationalpark.ie/">Wicklow National Park</a> before spending a few days in Killarney, exploring the <a href="https://ringofkerrytourism.com/">Ring of Kerry</a> (important note: not a “ring” as in a piece of jewelry).</p>
<p>Finally, we wanted to drive to Galway and spend a few days there, before returning to Dublin and flying back home.</p>
<p><strong>tl;dr A travel agent will make your life a lot easier when your international travels have a lot of moving parts.</strong></p>
</section>
<section id="the-emerald-isle" class="level3">
<h3 class="anchored" data-anchor-id="the-emerald-isle">The Emerald Isle</h3>
<p>The country was seriously amazing. Ireland is the most incredible combination of different landscapes and ecosystems all coexisting side by side; driving from Dublin to Killarney to Galway and back will show multiple distinct countrysides that change seamlessly yet suddenly.</p>
<p>Without further adieu, I’ll post some of my favorite pictures here from the trip.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/oscar_wilde.jpg" class="img-fluid"></p>
<p>In front of the Oscar Wilde statue in Dublin.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/guinness_storehouse.jpg" class="img-fluid"></p>
<p>The Guinness Storehouse in Dublin.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/book_of_kells.jpg" class="img-fluid"></p>
<p>In the <a href="https://www.tcd.ie/visitors/book-of-kells/">Book of Kells exhibit</a> at Trinity College in Dublin.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/wicklow_park.jpg" class="img-fluid"></p>
<p>At Wicklow park, before a 9-mile hike.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/wicklow_park2.jpg" class="img-fluid"></p>
<p>Also Wicklow park, about halfway through the hike.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/gap_of_dunloe.jpg" class="img-fluid"></p>
<p>Running the <a href="http://www.theringofkerry.com/the-gap-of-dunloe">Gap of Dunloe</a> in Killarney.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/gap_me.jpg" class="img-fluid"> <img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/gap_lady.jpg" class="img-fluid"></p>
<p>The Lady and myself running in the Gap.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/irish_wolfhound.jpg" class="img-fluid"></p>
<p>The Lady meets an adorable Irish wolfhound during our Ring of Kerry tour.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/ring_of_kerry.jpg" class="img-fluid"></p>
<p>Coastline stop along the Ring of Kerry tour.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/secret_garden.jpg" class="img-fluid"></p>
<p>We met a very friendly regular at the <a href="http://www.secretgardengalway.com/">Secret Garden</a> in Galway.</p>
<p><img src="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/galway.jpg" class="img-fluid"></p>
<p>Sitting in the main square at Galway.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2019,
  author = {Shannon Quinn},
  title = {Quinnwitz in {Ireland}},
  date = {2019-06-03},
  url = {https://magsol.github.io/2019-06-03-quinnwitz-in-ireland},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2019" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2019. <span>“Quinnwitz in Ireland.”</span> June 3, 2019.
<a href="https://magsol.github.io/2019-06-03-quinnwitz-in-ireland">https://magsol.github.io/2019-06-03-quinnwitz-in-ireland</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>travel</category>
  <category>ireland</category>
  <guid>https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/index.html</guid>
  <pubDate>Mon, 03 Jun 2019 19:24:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2019-06-03-quinnwitz-in-ireland/gapofdunloe.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>StarCraft II Questions</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/do_you_wanna_play_sc2.jpeg" class="preview-image img-fluid" alt="A meme image of the Frozen song, with the words instead indicating 'Do you want to play Starcraft?'"></p>
<p>I’ve been sick the past couple of days. In between drinking way too much tea, passing out cold, and actually getting the occasional bit of work done, I’ve been (re-)playing a decent amount of <em>StarCraft II</em>, specifically the <em>Legacy of the Void</em> (<em>LotV</em>) campaign. It’s the final installment of SC2, and honestly it’s the one I find most frustrating.</p>
<p>No, it’s not the dialogue, which is <em>super</em> cliche and overwrought, but it’s endemic across the entire SC2 series. Also, the <em>LotV</em> gameplay honestly makes up for it (as is true for most of the SC2 series).</p>
<p>Rather, my problem is with the actual storytelling. There are lots of sprawling story elements but a lot of them just don’t make any sense. <em>Heart of the Swarm</em> (<em>HotS</em>) <a href="https://magsol.wordpress.com/2013/04/01/starcraft-ii-heart-of-the-swarm-review/">had a few chin-scratching moments</a>, but overall the storyline was a pretty clear and well-motivated revenge tale. Even before that, <em>Wings of Liberty</em> (<em>WoL</em>) was a clear and compact story of regret and redemption. So while the <em>LotV</em> gameplay was outstanding, it was extremely jarring for the story to be so jumbled and reliant on retconning a large amount of StarCraft lore.</p>
<p>So may I present, <a href="https://www.youtube.com/watch?v=-x1YuvUQFJ0">inspired by RedLetterMedia’s treatment of <em>Prometheus</em> several years back</a>, a list of questions that came to mind. Presented in no particular order:</p>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/like_farmville.jpg" class="img-fluid" alt="A meme image based on a screenshot from in-game Starcraft, with text reading 'Like Farmville, but with attack function.'"></p>
<ul>
<li>So apparently Emil Narud / Samir Duran was <em>also</em> a fallen Xel’Naga, as he said as much in the <em>LotV</em> epilogue missions. Why was he alive all this time, but not Amon? How did he escape Amon’s fate?</li>
<li>Why did he take the form of a human instead of some all-powerful hybrid like the ones he was cultivating in those years? What was stopping Amon from taking the form of a human as well?</li>
<li>What were the purposes of Duran’s machinations in <em>Brood War</em>? As stated at the time, it was in the service of returning Amon and breeding the hybrid, but if he was a full Xel’Naga, why would Amon’s resurrection even be necessary? Couldn’t Narud just remake all life in the universe, then resurrect Amon at his leisure for their <a href="https://en.wikipedia.org/wiki/The_World%27s_End_(film)">post-universe-destruction celebration party</a>?</li>
</ul>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/siege_tank_rush.gif" class="img-fluid" alt="A meme image of the original Starcraft with a screen filled with siege tanks, and text saying 'Where is your god now?'"></p>
<ul>
<li>Oh man, the <a href="https://starcraft.fandom.com/wiki/Khala">Khala</a>. Supposedly the thing that both saved the Protoss race back in the day, but also nearly led to their destruction when Amon infiltrated it in <em>LotV</em>. A nice symmetry, sure, but… ok. So. The Khala was linked through khaydarin crystals, which are rife throughout Protoss technology. The Protoss themselves interface with it through their nerve cords, which [SPOILER ALERT] they all sever at the end of <em>LotV</em> to drive Amon back into the Void. But couldn’t he just live on in their technology?</li>
<li>Would the Protoss have to derive entirely new, non-khaydarin crystal technology to completely drive out Amon?</li>
<li>How on Kerrigan’s red Char did they manage to sever the nerve cords of literally all the Protoss of the Golden Armada–including those who had not yet arrived at Aiur–in the two minutes that the keystone was able to contain Amon?! <a href="https://starcraft.fandom.com/wiki/Rohana">Rohana</a> proved that physical distance was not an issue for Amon, only connection to the Khala via nerve cords did. How could they have possibly gotten the order out to all those Protoss in such a short period?</li>
<li>Amon is shown leaving Artanis’ body when Zeratul severs his nerve cords. But couldn’t Amon just possess Artanis? Why was Amon able to inhabit the Khala, but not individuals?</li>
<li>I mean, where is the Khala even centralized? If it’s just the psychic connection between Protoss–and therefore completely decentralized–wouldn’t Amon act more like a virus? Why would severing everyone’s nerve cords suddenly leave Amon homeless? Is severing your nerve cords like a vaccination?</li>
<li>Why would Amon even need a “host body” if he’s able to take over literally all the Khalai Protoss?</li>
</ul>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/nuclear_launch.png" class="img-fluid" alt="A meme image of a cat, with text saying 'Nuclear launch detected.'"></p>
<ul>
<li>How did Amon control the Zerg? Through an Overmind? Where was it located? If not, did he exert control over every individual Zerg? How? Why couldn’t he do the same thing through the Protoss? Or hell, even the Terrans?</li>
<li>Did he possess the Zerg? Why couldn’t he control Kerrigan’s Zerg? Or again, the Protoss?</li>
<li>Where was Amon in the intervening period of <em>Heart of the Swarm</em> when he was (presumably) already revived following the conclusion of <em>Wings of Liberty</em>, but not yet the main villain at beginning of <em>LotV</em>? <a href="https://xkcd.com/712/">Drinking at a bar somewhere</a>?</li>
<li>The original StarCraft lore seems to be retconned to suggest (in no uncertain terms) that any and all tampering in the development of the Zerg and Protoss was the fault of Amon and his followers and <em>not</em> part of the original plan put in motion by the Xel’Naga. Does that mean the Khala was Amon’s creation, as well as the Overmind? What was even supposed to happen absent the Khala or the Overmind?</li>
<li>Why was Amon so much more powerful than Ouros? They’re both Xel’Naga; wouldn’t they be evenly matched?</li>
<li>Kerrigan was Xel’Naga for all of an hour before she flat-out blasted Amon out of existence. How? Why was she better equipped to deal with Amon in such short order, compared to a friendly Xel’Naga trapped in the Void for eons?</li>
<li>Sure, maybe the combined might of both Narud and Amon kept Ouros trapped in the Void, but Narud was only with his master for all of a campaign and a half; plus, it was only <em>after</em> Stukov dealt Narud the killing blow in the epilogue that Ouros began the process of giving Kerrigan his essence. Wouldn’t the combined might of Kerrigan and Ouros be infinitely more powerful than just Amon?</li>
<li>If Amon killed all those slumbering Xel’Naga in Ulnar, why wouldn’t they also just return to the Void, as Amon did at the end of <em>LotV</em>?</li>
</ul>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/no_patience.jpg" class="img-fluid" alt="A meme image showing a siege tank operator in Starcraft II, with text saying 'Claims to have no patience for sitting around, chooses siege tank operator as his profession.'"></p>
<ul>
<li>The Tal’darim are introduced in <em>WoL</em> as a “fanatical” group of Protoss who generally do their own thing. In <em>LotV</em>, it’s revealed that they’re actually in league with Amon. But in <em>WoL</em>, they are <em>actively</em> fighting <em>against</em> the retrieval of the artifact pieces–an essential step to assembling the artifact, using it to de-infest Kerrigan, and capturing all that power to resurrect Amon. This connection becomes even more confusing when considering that it was Moebius Corps who literally hired Jim Raynor and his Raiders to assemble the artifact pieces.</li>
<li>i.e., Moebius Corps was led by Emil Narud, aka Samir Duran, aka <em>the one dude who’s been trying for millennia to resurrect Amon</em>. Why would the Tal’darim fight directly against him? Did it take them the countless ages between the <a href="https://starcraft.fandom.com/wiki/Aeon_of_Strife">Aeon of Strife</a> and <em>HotS</em> to realize they were working for the same guy?</li>
<li>Do the Tal’darim still have their nerve cords? Are they connected to the Khala?</li>
<li>It would seem not, since after Alarak becomes their highlord and turns them against Amon, I would think Amon’s first course of action would be to take control of them, but he doesn’t, or can’t. But it seems like they <em>do</em> have nerve cords, given Alarak’s huge jagged ponytail thing. So are they somehow <em>not</em> connected to the Khala, despite having nerve cords? If that’s the case, why can’t the Daelaam do the same? Is it a <em>choice</em> to connect to the Khala? Is it like the Force–something you can train yourself to use, but which you can also consciously separate yourself from?</li>
<li>Alarak is, like, wicked powerful. <em>Crazy</em> powerful. He breaks through a stasis field on the <em>Spear of Adun</em> like it was tissue paper, and blasts open an armored door and destroys a warp crystal on Aiur with a <em>single shot</em>. Where was that ability when he was fighting Malash for highlord?</li>
</ul>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/7_marines.jpg" class="img-fluid" alt="A meme image showing a Terran Marine, with text reading 'Build 7 marines, lose to 2 zealots.'"></p>
<ul>
<li>The <a href="https://starcraft.fandom.com/wiki/Nerazim">Nerazim</a> are said to draw their power “from the <a href="https://starcraft.fandom.com/wiki/Void">Void</a>”. What even is the Void? Some kind of <a href="https://en.wikipedia.org/wiki/Mirror_Universe">parallel evil dimension</a>?</li>
<li>But the Void clearly has toxic and destabilizing effects on the “current” dimension, since anytime a rift opens it pretty much wipes everything it touches apart. But then, in the epilogue, everyone gears up and heads into the Void! How?!</li>
<li>So, the Dark Templar get their power from the same place as the Xel’Naga? And Amon? Wouldn’t that mean only a Dark Templar can defeat Amon? Or that Amon could pierce Nerazim cloaks?</li>
<li>Or, wouldn’t that mean Amon would have total control over their abilities, making them just as vulnerable to his influence as the Khalai Protoss?</li>
<li>Seriously, how are <em>missiles</em> going to be an effective weapon in the Void?</li>
<li>Against Narud and Amon?</li>
<li><em>AMON</em>.</li>
</ul>
<p><img src="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/i_got_this.jpeg" class="img-fluid" alt="A meme image showing a lone Terran Marine standing in front of an Ultralisk, with text reading 'GTFO, I got this.'"></p>
<ul>
<li>Let’s talk a bit about Amon’s “plan”. He wanted to break the <a href="https://starcraft.fandom.com/wiki/Infinite_Cycle">Infinite Cycle</a> and remake all life in his image. But the end credits of <em>LotV</em> literally said, that with Kerrigan’s ascension and the alliance’s victory over Amon, the Infinite Cycles came to an end. So… mission accomplished?</li>
<li>So, from the Void, he uses his pawn / follower / fellow Xel’Naga (???) Narud to work on a way to resurrect him, creating “false” hybrid armies in the meantime. Were these hybrid basically accelerated versions of what the Infinite Cycles were supposed to “naturally” result in? I mean, weren’t the Zerg and Protoss ultimately meant to merge?</li>
<li>Amon corrupted the Zerg, creating an overriding imperative to destroy or assimilate the Protoss. Since the Protoss can’t be infested, I would assume that basically amounts to a “kill” order?</li>
<li>Anyway, the Overmind cleverly tries to circumvent that order by creating the Queen of Blades, with supposedly only slightly more free will than it. Why? Where does that slightly-more-free-will come from? Just because she’s Terran, and therefore not a Xel’Naga creation? Or was it something unique to Kerrigan?</li>
<li>Of course, she was only infested <em>after</em> Amon’s death. How was Narud/Duran planning to resurrect his master, then? It was only the <em>de</em>-infestation of Kerrigan that gave him enough power to resurrect Amon. So until that unlikely sequence of infestation-deinfestation events happened, had he just been spending a lot of time on his Pelaton and researching <a href="https://www.tesla.com/powerwall">cutting-edge battery technology</a>?</li>
</ul>
<p>Really, I just think <a href="https://www.youtube.com/watch?v=AX_FxBSEh1A">this game sucks</a>.</p>
<p>(not really tho)</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2019,
  author = {Shannon Quinn},
  title = {StarCraft {II} {Questions}},
  date = {2019-01-31},
  url = {https://magsol.github.io/2019-01-31-starcraft-ii-questions},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2019" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2019. <span>“StarCraft II Questions.”</span> January 31,
2019. <a href="https://magsol.github.io/2019-01-31-starcraft-ii-questions">https://magsol.github.io/2019-01-31-starcraft-ii-questions</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>gaming</category>
  <category>video games</category>
  <guid>https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/index.html</guid>
  <pubDate>Thu, 31 Jan 2019 15:26:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2019-01-31-starcraft-ii-questions/do_you_wanna_play_sc2.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Jedi Outcast: Echoes of a bygone gaming era</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/lolrob.jpg" class="preview-image img-fluid" alt="Looking downscope of a sniper rifle in Jedi Outcast 2 zoomed in hilariously right on a friend's avatar's face."></p>
<p>I should start by issuing fair warning: this is a post I’ve been meaning to write in some form or another for the better part of the last <em>15 years</em>.</p>
<p>Commence “old mang” jokes.</p>
<p>But there was a group of gamers I met many years ago who, to this day, remain some of my best friends. We don’t keep in near-daily contact like we used to, but it doesn’t take more than a couple friendly jabs to pick up right where we left off. Particularly at a time when I feel very alien and removed from the gaming community, both by virtue of stage of life as well as events of late, I want to hold up a sliver of the gamer’s experience that, at least for me, was phenomenally positive and formative.</p>
<section id="jedi-outcast" class="level3">
<h3 class="anchored" data-anchor-id="jedi-outcast"><em>Jedi Outcast</em></h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/jedi_outcast_gog.jpg" class="img-fluid figure-img" alt="The original Jedi Knight II: Jedi Outcast logo."></p>
<p></p><figcaption class="figure-caption">Source: https://www.gog.com/game/star_wars_jedi_knight_ii_jedi_outcast</figcaption><p></p>
</figure>
</div>
<p>The entire story essentially revolves around a video game: <a href="https://en.wikipedia.org/wiki/Star_Wars_Jedi_Knight_II:_Jedi_Outcast"><em>Jedi Knight II: Jedi Outcast</em></a>. But while this seemingly-innocuous run-of-the-mill Star Wars game was the central impetus, its unique properties–which I can honestly say haven’t been replicated in more recent games–gave rise to a community that still impacts me to this day.</p>
<p><em>Jedi Outcast</em>, colloquially referred to either as “JK2” or “JO”, is a first-person shooter that continued the adventures of Kyle Katarn started in the original <a href="https://en.wikipedia.org/wiki/Star_Wars:_Dark_Forces"><em>Dark Forces</em></a> and carried forward in <a href="https://en.wikipedia.org/wiki/Star_Wars_Jedi_Knight:_Dark_Forces_II"><em>Jedi Knight</em></a>. It was, far and away, the finest installment of the series.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/jk2_play.jpg" class="img-fluid" alt="A screenshot of mid-gameplay in Jedi Outcast."></p>
<p>JO came with a single-player campaign that involved an attempt by a fallen Jedi to harness Force energy in order to artificially infuse his warriors with the Force, essentially creating dark Jedi on-demand. It was quite engaging! But the real novelty, and probably the most unexpected success, was the multiplayer.</p>
<p>I mentioned before it had some unique properties that gave it its staying power. Among others, and in no particular order:</p>
<ul>
<li>It was the first game in the series to feature truly immersive lightsaber mechanics. <em>Dark Forces II</em> had introduced lightsabers, but to wield it was essentially like watching a monkey hit something with a stick. JO made it look like it came out of a movie.</li>
<li>The Force powers were also considerably better-integrated with gameplay. Again, <em>Dark Forces II</em> had pioneered Force powers, but they were clunky in their use; in fact, you could beat the single player without ever using a single one. JO seamlessly wove their use into the game.</li>
<li>The developers open-sourced the server-side JO code almost immediately after release, prompting the explosion of a modding community around the game, building everything from new in-game characters to new multiplayer maps to entire server mods.</li>
<li>The multiplayer enabled what we affectionately referred to as a “chat room with a GUI”: an environment where players could shoot and duel, but also literally stand around talking.</li>
</ul>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/chat_gui.jpg" class="img-fluid" alt="A screenshot like before, but this time showing lots of players standing around mid-game chatting with each other."></p>
<p>In the picture above, the dark text boxes you see above some players heads are the tell-tale indicators that the player is typing a message. Meanwhile, battle can literally rage around them.</p>
<p>All this gave rise to an environment conducive to the formation of “gaming clans”: communities of fellow gaming nerds who enjoyed the game and the people in it. Numerous clans popped in and out of existence, with as many varieties of names and purposes and values as individuals on the planet.</p>
<p>Here’s where I entered into things: my story begins in the fall of 2003, when I was just starting my first semester as a freshman at Georgia Tech.</p>
</section>
<section id="fall-2003" class="level3">
<h3 class="anchored" data-anchor-id="fall-2003">Fall 2003</h3>
<p>I’d been the proud owner of a JK2 CD-ROM for a year or so at that point, but hadn’t had a desktop powerful enough to play it. Now, armed with a brand-new Dell Optiplex with a 3GHz processor and 4GB RAM, I had enough horsepower to give the game a test drive.</p>
<p>Oh yeah, and also study Computer Science at one of the finest institutions for the field in the world. But I digress.</p>
<p>I devoured the single-player JO campaign, loving every minute of it. But when it came to the multiplayer, I was very hesitant. I remembered all too vividly the frantic competitiveness of multiplayer <em>StarCraft</em> from high school–I’d been ranked in the Top 1000 at one point, but pretty much to the detriment of my sanity–and really didn’t want to get similarly sucked into an anxiety-inducing hyper-competitive environment where, at the end of the day, all I had to show for my hours sunk into the game was a migraine.</p>
<p>Well, I could say one thing for sure: I was nowhere near as good at the multiplayer as I’d thought I was from the single-player. I got my ass handed to me. A <em>lot</em>. But another thing I quickly learned: the vast majority of the folks playing this game were <em>chill</em>. The whole “chat room with a GUI” thing.</p>
<p>Soon, I fell into an online clan, called “Imperial Forces”. But my courtship with the clan was extremely brief: evidently, any bad clan can have one decent person in it, and after a <em>very</em> short membership–maybe a week?–I departed its ranks.</p>
<p>And discovered the “Power of Thee.”</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/poticon.jpg" class="img-fluid" alt="The Power of Thee, or PoT, logo."></p>
<p>Yes, it was indeed “cleverly” titled to invoke a particular acronym. But beyond the name, it was the people: every single one of them was both super-chill and <em>super talented</em>. I could tell there was considerable variation in age, both younger and older than me, but they were wholly welcoming. And so freaking <em>good</em>.</p>
<p>Lucky for me, they recruited me. But like any good Jedi organization, new recruits–apprentices–are assigned a master. My master was a veteran of JO, <a href="https://www.ckaleb.com/jedi-outcast/">a Knight named Kaleb</a>. He helped me learn the intricacies of the game, as well as the “protocols” that had arisen around the GUI-ified chat room of JO, things like</p>
<ul>
<li>If someone has a chat window above their head, don’t attack them</li>
<li>With great [admin] power comes great responsibility</li>
<li>Don’t take things too seriously, otherwise you’ll get C4’d</li>
</ul>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/duel.jpg" class="img-fluid" alt="An in-game screenshot of two players in the middle of a lightsaber duel."></p>
<p>At some point, I was deemed ready for my “Trials”. Apprentices such as myself pass their Trials and become full members of the clan by winning at least 4 out of 6 lightsaber duels with Knight-level members or higher. I don’t remember my exact record–I don’t mean to toot my own horn, but it very well might have been 6-0 (Kaleb was a great teacher!)–but I passed my Trials and was duly Knight-ed into PoT.</p>
</section>
<section id="spring-2004" class="level3">
<h3 class="anchored" data-anchor-id="spring-2004">Spring 2004</h3>
<p>To provide a bit of context: JO was released in 2002. So right as I was hitting a stride with my new clan and actually <em>git good</em> at multiplayer, the game had already been out for over two years. And on the “clan” scene, two years is an eternity. There were senior members of PoT–the “Council” members, including the original founders–whom I’d never met because they’d already moved on, essentially having gone permanently inactive. The active membership–Knights who’d passed their Trials and made up the bulk of the active membership, and Jedi Masters who were promoted from Knight by virtue of some outstanding contribution to the clan–kept things fresh by recruiting new talent.</p>
<p>But the gears of time ground on. Spring 2004 was a particularly rough time for me personally, as I settled into my second semester of college and I was caught somewhere between who I’d been in high school and who I wanted to become as I moved into adulthood. My roommate, a dear friend from high school, was also going through some really hard times and ended up dropping out halfway through the semester, so I ended up being alone more often than not.</p>
<p>At the risk of sounding melodramatic, JO and PoT was an anchor; I was getting to know my fellow clanmates better, chatting with them directly over AOL Instant Messenger instead of exclusively through JO. Getting to know them as people, rather than avatars. Sharing experiences. It… helped. In more ways than I can recount, even now.</p>
<p>But that anchor was shifting in ways I hadn’t been around long enough to realize.</p>
</section>
<section id="summer-2004" class="level3">
<h3 class="anchored" data-anchor-id="summer-2004">Summer 2004</h3>
<p>In many ways, this was one of PoT’s strongest seasons. In others, it was almost its end.</p>
<p>I’d (somehow) secured an internship at an Atlanta-based supply-chain company, but because they had no idea what they wanted me to do, I found myself with a lot of free time.</p>
<p>So I exercised some of the new network connections I’d made through JO and organized an <em>inter-clan match</em>: a day-long competition between PoT and <em>They Might Be Jedi</em>, or TMBJ.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/pot_v_tmbj1.jpg" class="img-fluid" alt="Screenshot of an in-game scoreboard showing the points and results of the first round of a match."></p>
<p>TMBJ was <em>the</em> JO clan. Everyone wanted to join them, and failing that (which was often), wanted to <em>be</em> them. They were kind, they were competitive, and they were <em>good at everything</em>. Their most famous member went by the handle “ShroomDuck”, and he was a singularly talented individual who was equal parts charming in person, deadly with a lightsaber, and wicked talented with JO modding tools, Photoshop, and web design.</p>
<p>Basically, a bit of a personal hero at the time. So, I submitted a challenge to TMBJ through him and on behalf of PoT to engage in a bit of well-mannered duels to the death.</p>
<p>Guess what? We <em>won</em>!</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/pot_v_tmbj2.jpg" class="img-fluid" alt="Screenshot from the middle of the match, from the perspective of one of the TMBJ players."></p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/pot_v_tmbj3.jpg" class="img-fluid" alt="Screenshot from the middle of the match, from the perspective of one of the PoT players."></p>
<p>TMBJ was stacked with talent, but somehow our own cohesiveness and teamwork–led by the inordinately talented likes of IronSlayer, Bill the Pony, Rob, John, Vader, and my master Kaleb–bested the JO juggernaut that day.</p>
<p>Then, mere weeks later, it all came crashing down: pretty much every one of those individuals announced that, for various reasons, they were leaving. We all knew it wasn’t coincidence they were all leaving at the same time, but as I was still a Knight at the time and not privy to the discussions of the Council (to which Kaleb had been promoted since), I didn’t have any details.</p>
<p>Suddenly, we were a shell of ourselves: the 5-6 people who comprised a good 75% of the clan’s activity were gone.</p>
<p>I’ve been told before–by coaches, by therapists, by parents, and by my wife–that I don’t know how to quit. It’s not always meant as a compliment, either; there are times when you really should cut your losses and walk away. I’ve learned how to do that more as I’ve gotten older, but suffice to say, my 19-year old self knew little to nothing of that skill.</p>
<p>So I dug in. Over the next several months, I configured my own server to use for PoT (IronSlayer had run our local server until then), helped revamp the clan website, and advertised the clan whenever I was in-game. I sought out contacts I’d made in-game and brought them to our servers, increasing the baseline activity level that would attract more new blood. I relentlessly badgered the shattered Council with ideas, initiatives, and new recruits, insisting the new blood was there if I could just have permission to recruit them.</p>
</section>
<section id="fall-2004" class="level3">
<h3 class="anchored" data-anchor-id="fall-2004">Fall 2004</h3>
<p>To their credit, after the initial shock wore off (and with some prodding on my part), the Council got down to work. I was quickly promoted to Jedi Master, and in short order, instated on the Council to fill the open seats left by the departures of the previous season.</p>
<p>Kaleb had a made a 1-year anniversary graphic back when he’d still been in the clan, so I followed suit as both a tribute to someone who’d taught me everything and also as a nudge to everyone else that I wasn’t going anywhere, and neither should they.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/mag_year.jpg" class="img-fluid" alt="A stylized photoshop image of the variations of my in-game avatar to show their progression over the years, from beginner to expert."></p>
<p>Yes–I even learned from Kaleb how to make custom player skins. I wasn’t nearly as talented as he was, as I basically applied minor tweaks to a default built-in skin, but I was awfully proud of the “PoT” shoulder and thigh logos, the shamrocks on the calves, the lightning bolt across the chest, and the giant “69” emblazoned on the back.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/mag_skin.jpg" class="img-fluid" alt="An in-game screenshot showing the details of my avatar's modifications I'd made."></p>
<p>Our ranks started swelling again. Too fast on occasion, even; we had to shut down recruitment at times in order to fully process applications and keep some semblance of order on our servers. Some of the best friends I made through PoT either appeared during this time, or the circumstances were such that an acquaintance deepened into a friendship.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/rob_startup_screen.bmp" class="img-fluid" alt="A variation of the Jedi Outcast startup screen in Windows, this one absolutely ruined by Rob's awful MS Paint skills and with no backup to restore the original."></p>
<p><em>Rob</em> was this way: a total goofball who was one of the best “gunners” (term for a JO player who preferred the point-and-shoot weapons to lightsabers) I’d ever encountered. To the casual observer, he and I appeared almost as opposites: I was all about structure and regimen; he just wanted to shoot at something and crack jokes. But when we were both promoted to the Council in the wake of the summer departures, against all odds we worked extraordinarily well together, our differing styles complementing each other and resulting in a friendship that endures to this day.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/tahiri_snipe.jpg" class="img-fluid" alt="A screenshot of Tahiri through a sniper rifle."></p>
<p><em>Tahiri</em> was another. He always kept a veil of secrecy around him, in no small part because his in-game avatar was female (his name “Tahiri” follows an Extended Universe character by the same name, who is female as well). But over AIM I learned he was a mere year older than I was, and as we worked closely to keep PoT alive in that summer and fall of 2004, we forged a relationship similar to the one I had with Rob, with the roles reversed: I kept him from being too rigid, and he kept me from being too slapdash.</p>
</section>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section">2005</h3>
<p>We continued recruiting, and I even managed to snare my literal Best Man, The Danimal.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/recruiting.jpg" class="img-fluid" alt="A screenshot of the in-game scoreboard, showing the names of lots of new recruits into PoT."></p>
<p>Our renewed membership enabled us to engage in more inter-clan matches. We even managed to win a few of them!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/uj.jpg" class="img-fluid figure-img" alt="Screenshot of in-game scoreboard during the match with UJ, showing us kinda getting slaughtered."></p>
<p></p><figcaption class="figure-caption">Didn’t do so well here–if TMBJ was #1, UJ was #2. Especially in saber duels, they were unstoppable.</figcaption><p></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/njoc.jpg" class="img-fluid figure-img" alt="Screenshot of in-game scoreboard during the match against NJOC, showing PoT with a slim edge."></p>
<p></p><figcaption class="figure-caption">NJOC was a much smaller clan, and through a rigorous practice regimen in the weeks leading up to the match, we actually ended up winning!</figcaption><p></p>
</figure>
</div>
<p>I do want to mention something here, given <a href="https://www.ckaleb.com/jedi-outcast/">Kaleb brought it up in his blog post</a> some months ago: the Delta Order.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/do_logo.jpg" class="img-fluid" alt="Delta Order logo, basically a stylized capital greek Delta with a lens flare."></p>
<p>In the intervening months after the departures of mid-2004, it was clear–especially from the matches–that PoT was seriously lacking in gunning talent. Rob was still among the best I’d ever seen at any point in the game, but if he wasn’t around, we really had nobody who could even come close to matching his play level. I was getting better, but again we really didn’t have anyone else who was a pure gunner.</p>
<p>Delta Order was an attempt to remedy that: Rob and I would work together to groom younger members who demonstrated a knack for gunning to be the next Rob, essentially. It wasn’t meant as a super-secret infiltrate-clans-from-within, CIA-like operation. Admittedly, we could have just as easily had a regular low-key practice session for anyone who wanted practice shooting things, but we thought this might make it more “official” and interesting to the younger players if they got a cool logo to go with their training efforts.</p>
<p>It worked, somewhat: we trained Monkeh into one of the finest gunners in the clan (outside Rob, of course), and brought a lot of other players’ skills more into parity with the general audience of the game. It was partially thanks to the Delta Order that we ended up winning the aforementioned match against NJOC.</p>
</section>
<section id="section-1" class="level3">
<h3 class="anchored" data-anchor-id="section-1">2006</h3>
<p>At some point, we started organizing <em>intra-clan</em> matches in the form of summer tournaments. These were a <em>blast</em>!</p>
<p>We made entire brackets, and organized two separate double-elimination tournaments: one with best-of-three lightsaber duels, and the other with first-to-15-kills run-and-gun duels, appealing to the two flavors of JO player.</p>
<p>The response was overwhelming, and was a huge boost to the clan. Though to this day, I’m stll not sure how <em>Rob</em> of all people won the lightsaber competition. I think I just forgot to fill out the rest of the other bracket, but am pretty sure that was the year Rob won both competitions. WTF?</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/bracket_saber.jpg" class="img-fluid" alt="Photoshop built graphic of tournament brackets for the FFA competition."></p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/brackets_ffa.jpg" class="img-fluid" alt="Photoshop built graphic of tournament brackets for the saber duel competition."></p>
<p>Somewhere in here, I colluded with a couple of my friends in PoT to stage an April 1 trick where we would all announce our immediate retirements from PoT. Tahiri wasn’t pleased. Note the shift as he starts with sheer panic, then later after reading an “April Fool’s!” follow-up post, shifts to relief with some good-old-fashioned ribbing.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/demoted.jpg" class="img-fluid" alt="AOL IM logs showing Tahiri's reaction to our April Fool's Day posts, both before and after he realized it was a prank."></p>
<p>We were having a lot of fun. I’m glossing over a lot–there was intra-clan drama, clashing of personalities, and the Council (myself included) made a lot of noob mistakes in handling them–but for all intents and purposes, the clan was humming along.</p>
</section>
<section id="section-2" class="level3">
<h3 class="anchored" data-anchor-id="section-2">2007</h3>
<p>For all practical purposes, this is where my role in PoT–after a solid four years–started waning. I was entering into the last year of my undergraduate studies at Georgia Tech and eyeing graduate school, was in a serious relationship that I was trying to convert from long-distance to short-distance, and JO was really starting to show its age: fewer new players were appearing, and more experienced hands were leaving. While we still technically had a full complement on the Council, only three of us–Rob, Tahiri, and myself–were still active in any meaningful capacity. Our Jedi Master ranks were pretty thin, and while we had many active Knights, our apprentice prospects were drying up.</p>
<p>In short, it was time to start having difficult conversations: PoT, at least in its current form, wasn’t going to last forever. And that end was looking to come sooner and sooner.</p>
<p>In the months that followed, a lot of options were thrown out, from continuing as we were to converting into a less formal “gaming community” (TMBJ had followed this route, having given up its JO-specific branding over a year prior) to disbanding entirely. None were particularly appealing; we didn’t want PoT to simply disappear, but our leadership was aging; I knew I couldn’t invest the kind of time and effort in revamping PoT that I’d put in back in mid-2004.</p>
<p>In short: this was one of the first lessons I learned in walking away. But, in classic “me”, it wasn’t because I came to some incredibly-wise decision to that effect, but because I was slapped in the face with the right decision.</p>
<p>At some point, we made the decision to convert to a “gaming community” that had affiliations with multiple games, including JO, but also: Battlefront, StarCraft II, and even Left 4 Dead 2. We had a ranking system set up, and a representative “Senatorial” ambassadorship for each game. The clan seemed on board.</p>
<p>And then simmering egos exploded, and it became clear: we’d made the wrong decision. We quickly changed course, and decided it was time for the venerable PoT experiment to end. In our naive excitement to keep PoT alive, we ignored very real structural problems in the membership that had not been addressed.</p>
</section>
<section id="postscript" class="level3">
<h3 class="anchored" data-anchor-id="postscript">Postscript</h3>
<p>Even now, I struggle for words to encapsulate everything the Power of Thee taught me, from making my own character skins; configuring and administering dedicated servers; hacking the shit out of Photoshop to make halfway-decent signature graphics; glitching JO in precisely the right way to grab the Flechette launcher through the floor; bunny-hopping; @@@@@@@@@@@@@@@@@@@@-ing.</p>
<p>But even more important, and less amenable to precise wording, is the relationships I made and continue to learn from.</p>
<ul>
<li><strong>Kaleb</strong>, who I don’t speak to nearly often enough but really taught me everything I know, and even though we disagreed on some things in the end I still have the utmost respect for; he fights for who he loves, and that’s a kind of interpersonal honor that is rare these days</li>
<li><strong>Underwhelmed</strong>, who selflessly hosted our forums for <em>years</em>, and until I lost touch with him was a kind of unofficial mentor; I hope he’s still rescuing tacos and giving them safe haven in his stomach</li>
<li><strong>Mormi Ganry</strong>, a fellow tech guru whose commitment to always doing the right thing was above reproach; of course, this included that amazing instance when he managed to upload Linksys router firmware onto the open admin console for an unsecured D-Link router that belonged to a troll on our server…</li>
<li><strong>Rob</strong>, who despite (or because of?) his incessant in-game trash-talking, was one of the most honest and heartfelt individuals I’d ever met</li>
<li><strong>Tahiri</strong>, who was my conscience on more than one occasion, and my instructor on many others, and who helped me through relationship issues during my formative years</li>
<li><strong>Jelle</strong>, a fiercely loyal friend who I actually visited in Belgium during my 2007 study abroad, and who I also don’t speak to nearly often enough, but who also kept me honest when we disagreed on multiple different fronts</li>
<li><strong>Xixes</strong>, who was the quintessential “PoTnah”: always available to help anyone who might need it, always willing to lend a hand, always happy to jump into a clan match even if he knew he wasn’t the right person for the job; he’d give it everything he had</li>
<li><strong>SwordFish</strong>, a Canadian with a wicked hilarious sense of a humor and endless capacity for friendship who I have since sadly lost touch with</li>
<li><strong>Monkeh</strong>, an often-controversial individual who spoke almost exclusively in l33t-sp34k, who didn’t care if he rubbed you the wrong way, and who turned into an exceptional gunner, but whose dedication to PoT and its leadership was never in question</li>
<li><strong>Iain</strong>, a quiet and polite member whose unassuming disposition masked a clever wit and incredibly sharp intellect, and especially technical talent, that led us to grant an overdue post-PoT promotion to Jedi Master</li>
</ul>
<p>…and many, many others: Vader, John, Bill the Pony, IronSlayer, Pablo, Jason, Anakin, Chrury, Deadclown, Rica, Secca, Snarf, Ragnarok, SeparateWays, and plenty others whom I’m forgetting or never knew that well.</p>
<p>Suffice to say, the clan–really, the people in it–were instrumental in making me into who I am now. I use a lot of the same leadership strategies in my day job, mentoring and instructing new students and training them into researchers; working through personnel conflicts and managing competing egos; and somehow making sure I have time to keep my own skills up to par with the playing field at large. In retrospect, it’s amazing how such an otherwise run-of-the-mill FPS could have had such an outsized impact on me, but I’m eternally grateful for it, and hope only that I can continue to learn from it.</p>
<p>Once I find where Tahiri went.</p>
<p><img src="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/tahiri_haha.jpg" class="img-fluid" alt="Tahiri, the IRL Tahiri, hiding behind some bushes."></p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2018,
  author = {Shannon Quinn},
  title = {Jedi {Outcast:} {Echoes} of a Bygone Gaming Era},
  date = {2018-04-26},
  url = {https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2018" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2018. <span>“Jedi Outcast: Echoes of a Bygone Gaming
Era.”</span> April 26, 2018. <a href="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/">https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>gaming</category>
  <category>star wars</category>
  <category>fps</category>
  <category>communities</category>
  <guid>https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/index.html</guid>
  <pubDate>Thu, 26 Apr 2018 14:30:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/lolrob.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Resolutions for 2018</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2018-01-19-new-years-resolutions/index.html</link>
  <description><![CDATA[ 




<p>A solid three weeks late on the new year’s resolutions, but still a marked improvement over last year.</p>
<p>(…I didn’t post resolutions last year…)</p>
<p>I’ve been involved with a small faculty writing group since mid-December, with the expressed goal of helping its participants develop and sustain regular writing habits. Since any new resolution’s long-term success is pretty much exclusively contingent on whether or not a habit is formed, I’m also trying to eliminate some bad habits (since new habits are easier to form if they, in effect, <a href="https://jamesclear.com/three-steps-habit-change">take the place of the bad habits</a>).</p>
<p>So without further adieu (and with a bit of inspiration from <a href="https://punkrockor.com/2018/01/02/punk-rock-ors-new-years-resolutions/">Dr.&nbsp;Albert</a>), here are my 2018 resolutions:</p>
<ul>
<li>Write and/or edit every single day (operationally I’m aiming for at least 30 minutes/day, 5 days/week, and go from there).</li>
<li>Blog more frequently. Despite starting this cool pelican blog back in 2015 for the <em>expressed</em> purpose of basically doing what <a href="https://jakevdp.github.io/">Jake VanderPlas</a> does on his blog–but with <em>my</em> research–I have yet to really bring that idea to fruition. That changes this year.</li>
<li>Make some progress on a few fun side projects!</li>
</ul>
<p>There are quite a few side projects that have languished over the last several months (changing this blog’s layout was one). I’d love to actually finish one!</p>
<p><img src="https://magsol.github.io/posts/2018-01-19-new-years-resolutions/snow_bunny.png" class="preview-image img-fluid" alt="Our showshoe hare, aka our white rabbit, Clover, out exploring in the snow dusting we recently got."></p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2018,
  author = {Shannon Quinn},
  title = {Resolutions for 2018},
  date = {2018-01-21},
  url = {https://magsol.github.io/posts/2018-01-19-new-years-resolutions/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2018" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2018. <span>“Resolutions for 2018.”</span> January 21,
2018. <a href="https://magsol.github.io/posts/2018-01-19-new-years-resolutions/">https://magsol.github.io/posts/2018-01-19-new-years-resolutions/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>professional</category>
  <category>new year</category>
  <category>blog</category>
  <category>writing</category>
  <category>side projects</category>
  <category>research</category>
  <guid>https://magsol.github.io/posts/2018-01-19-new-years-resolutions/index.html</guid>
  <pubDate>Sun, 21 Jan 2018 14:28:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/images/logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>New year, new blog layout</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2018-01-06-new-year-new-blog/index.html</link>
  <description><![CDATA[ 




<p>Happy 2018!</p>
<p>I’ve been wanting to put a fresh coat of paint on things for awhile around here, especially since the old Flex template didn’t have a really good way of supporting embedded Jupyter notebooks without completely upending the CSS (love the theme otherwise!).</p>
<p>Taking a page (or really, an entire layout) from <a href="https://jakevdp.github.io/">Jake’s blog</a>, I can now embed Jupyter notebooks without trashing the whole layout of the site. There are some posts I’ve been wanting to make for awhile that will require a considerable amount of code, so I’m excited to be able to dig into them now!</p>
<p>I’ll be following up soon with a lengthier resolutions post, but for now I just wanted to say “I’m still alive” and roll out the new layout. Happy new year everyone!</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{quinn2018,
  author = {Shannon Quinn},
  title = {New Year, New Blog Layout},
  date = {2018-01-06},
  url = {https://magsol.github.io/posts/2018-01-06-new-year-new-blog/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-quinn2018" class="csl-entry quarto-appendix-citeas">
Shannon Quinn. 2018. <span>“New Year, New Blog Layout.”</span> January
6, 2018. <a href="https://magsol.github.io/posts/2018-01-06-new-year-new-blog/">https://magsol.github.io/posts/2018-01-06-new-year-new-blog/</a>.
</div></div></section></div> ]]></description>
  <category>personal</category>
  <category>new year</category>
  <category>blog</category>
  <guid>https://magsol.github.io/posts/2018-01-06-new-year-new-blog/index.html</guid>
  <pubDate>Sat, 06 Jan 2018 17:47:00 GMT</pubDate>
  <media:content url="https://magsol.github.io/images/logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Summer of Data Science 2017</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2017-05-31-summer-of-data-science/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2017-05-31-summer-of-data-science/carpelibrum.png" class="img-fluid"></p>
<p>A few days ago, while I was still in Portland, OR enjoying the last few days of <a href="https://us.pycon.org/2017/">PyCon 2017</a>, Renee (<a href="https://twitter.com/BecomingDataSci"><span class="citation" data-cites="BecomingDataSci">@BecomingDataSci</span></a>) mentioned on Twitter that she might bring back the “Summer of Data Science” she kicked off last year.</p>
<p>In short: use the summer as an opportunity to learn and/or accomplish something data science-related in a goal-oriented, data-driven way.</p>
<p>As a tenure-track professor still yet to endure the 3rd-year review, pretty much everything data science related revolves around furthering my eventual tenure dossier. But the summers are still considerably more flexible for me to accomplish some of these goals than the fall or spring (I love teaching, but it’s all-consuming). I also have more than just myself–networks of collaborators and research assistants who can help me with these goals.</p>
<p>So without further adieu, I’d like to put forth my own Summer of Data Science, 2017 Edition:</p>
<section id="teaching-1360e-improvements-and-43606360-preparation" class="level3">
<h3 class="anchored" data-anchor-id="teaching-1360e-improvements-and-43606360-preparation">Teaching: 1360E improvements and 4360/6360 preparation</h3>
<p>I’m teaching an online course this summer, starting June 5 and continuing through the end of July: <a href="https://eds-uga.github.io/csci1360e-su17/">CSCI 1360E Foundations of Informatics and Analytics</a>.</p>
<p>Or, more colloquially, I just call it “introduction to data science.”</p>
<p>It’s one of the five courses I proposed in my first year (a story for another time, believe me…) and taught for the first time last summer, and in-person last fall. I’m teaching it again this summer and hoping to make some of the standard improvements, such as sprucing up slides and fixing autograder bugs from previous incarnations.</p>
<p>More pressing is CSCI 4360/6360 Data Science II, which has yet to have its own website. This course has <em>never</em> been taught, but is slated for Fall 2017.</p>
<p>Did I mention there are already over 40 students registered, undergraduate and graduate combined?</p>
<p>This is supposed to be the “corner cases” of data science: lesser-used and/or more powerful analysis methods that aren’t necessarily the first tools or techniques you reach for in a given situation. This will include, but certainly not be limited to, concepts like randomized algorithms, semi-supervised learning, and backpropagation; techniques like out-of-core processing, distributed computing, and functional programming; tools like <a href="https://julialang.org/">Julia</a>, <a href="http://numba.pydata.org/">numba</a>, and <a href="http://dask.pydata.org/en/latest/">dask</a>.</p>
<p>Before you ask: No.&nbsp;I’m <em>not</em> covering Spark.</p>
<p>At any rate, the conceptual framework is in place, but practically none of the architectural logistics have been established. So this will take up virtually all of my time for the remainder of the summer, once the following item is completed…</p>
</section>
<section id="research-nsf-career-proposal" class="level3">
<h3 class="anchored" data-anchor-id="research-nsf-career-proposal">Research: NSF CAREER proposal</h3>
<p>The advantage of this goal is it has a hard end date: <strong>July 19</strong>.</p>
<p>The disadvantage is that the <a href="https://www.nsf.gov/pubs/2017/nsf17537/nsf17537.htm">NSF CAREER</a> is the pinnacle of NSF early-career investigator awards. Its importance cannot be overstated; its <em>je ne sais quoi</em> is on display in the faces of new investigators when you mention it around them.</p>
<p>I’ve connected with my university’s grant proposal officers, and am participating in a peer review process that involves two rounds of review: first with fellow CAREER submitees (as in, we exchange each other’s current drafts!), and second with the university grant officers.</p>
<p>An investigator can only make three submission attempts for the CAREER. The CAREER is only open for submissions once per year. If chosen, the investigator must still be un-tenured at time of award. These conditions place brutal limits on how long you can wait to start making submissions, and I already skipped submitting my first two years. Still, I have no illusions about the uphill battle I have, so my goal this first time around is simply to <strong>acquire feedback</strong>: from my peers, from my grants officers, and from the NSF reviewers.</p>
</section>
<section id="personal-courseras-optimization-course" class="level3">
<h3 class="anchored" data-anchor-id="personal-courseras-optimization-course">Personal: Coursera’s optimization course</h3>
<p>I signed up to take Coursera’s <a href="https://www.coursera.org/learn/discrete-optimization/home/welcome">Discrete Optimization course</a> out of the University of Melbourne, taught by none other than <a href="https://pascalvanhentenryck.engin.umich.edu/">Professor Pascal Van Hentenryck</a> at Michigan and <a href="http://www.coffr.in/">Dr.&nbsp;Carleton Coffrin</a>, currently at Los Alamos.</p>
<p>Optimization is pretty much the backbone of modern machine learning, and yet I have almost no formal training in it–beyond incidentally covering it in various machine learning and statistics courses as part of some broader topic in which it’s used. Oddly, the most rigorous instruction I received as a graduate student in optimization was a <a href="https://sites.google.com/site/cellandsystemsmodeling/">Cell &amp; Systems Modeling course</a> where we used various optimization techniques to find parameter values for population models.</p>
<p>Especially in conjunction with what I hope to teach in CSCI 4360 in the fall, this would be invaluable both professionally as well as personally.</p>


</section>

 ]]></description>
  <category>professional</category>
  <category>personal</category>
  <category>data science</category>
  <category>python</category>
  <category>computer vision</category>
  <category>imaging</category>
  <category>machine learning</category>
  <category>deep learning</category>
  <category>nvidia</category>
  <category>gpu</category>
  <category>teaching</category>
  <category>education</category>
  <category>bioimaging</category>
  <guid>https://magsol.github.io/posts/2017-05-31-summer-of-data-science/index.html</guid>
  <pubDate>Wed, 31 May 2017 23:03:42 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2017-05-31-summer-of-data-science/carpelibrum.png" medium="image" type="image/png" height="120" width="144"/>
</item>
<item>
  <title>So, you want to conduct research with me?</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2017-03-16-so-you-want-to-conduct-research-with-me/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2017-03-16-so-you-want-to-conduct-research-with-me/joker_play_a_game.jpg" class="img-fluid"></p>
<p><em>Deviation #1</em>: This is wholly separate from the <a href="http://shouldigetaphd.com/">“should I get a Ph.D.”</a> question. For that I would recommend one of numerous guides that ask all the right questions.</p>
<p><em>Deviation #2</em>: This is also wholly separate from how to <em>succeed</em> in a Ph.D.&nbsp;program, though there is some overlap. In general, there are some key items to consider and habits to build as you work your way through a Ph.D., and for those questions I highly recommend <a href="http://karpathy.github.io/2016/09/07/phd/">Andrej Karpathy’s excellent survival guide to a Ph.D.</a>, some of which may be mirrored here.</p>
<p>No, the specific question I’m addressing here is <strong>how to succeed in graduate research as one of my students.</strong> In order of somewhat-importance:</p>
<section id="familiarize-yourself-with-my-research-interests." class="level3">
<h3 class="anchored" data-anchor-id="familiarize-yourself-with-my-research-interests.">1: Familiarize yourself with my research interests.</h3>
<p>This may seem like a no-brainer, but you’d be surprised how many emails I get from individuals expressing profound interest in working with me, only to see they have <strong>i)</strong> no experience whatsoever in any of my interests (which isn’t necessarily a deal-breaker!), and <strong>ii)</strong> don’t appear to know what I work on (which <em>is</em> a deal-breaker). If you work with me, you’re going to do something at the intersection of bioimaging + distributed computing + biosurveillance; something that involves computer vision and machine learning in a public health setting.</p>
<p>Check out my <a href="http://scholar.google.com/citations?user=4EjRiycAAAAJ">Google Scholar</a> record, my group’s <a href="https://github.com/quinngroup">GitHub repositories</a>, and my <a href="https://quinngroup.github.io/">lab website</a> to get at least a basic idea of the sort of work I do, and to jog your thinking along the lines of what you might be able to contribute.</p>
</section>
<section id="take-into-consideration-the-following-expectations." class="level3">
<h3 class="anchored" data-anchor-id="take-into-consideration-the-following-expectations.">2: Take into consideration the following expectations.</h3>
<p>Work hard, play hard, and be able to talk about both:</p>
<ul>
<li>I expect my students to develop into excellent scientific communicators. In practice, this means I want you to be able to talk about your work to experts in the same field, experts in different fields, and even non-scientists. I want you to get comfortable giving talks and writing papers. If English isn’t your first language, that’s ok! Just be aware this expectation may take more time than you think.</li>
<li>I expect my students to participate in <a href="https://en.wikipedia.org/wiki/Open_science">Open Science</a>. In practice, this means I want you to publish all the code you write in <a href="https://github.com/quinngroup">public repositories</a>, mirror all your papers on <a href="https://arxiv.org/">arXiv</a>, participate in and contribute to open source projects, and maybe even contribute to a blog. Research is only interesting when you can pick through the code, explore the data, and regenerate the results. Know or learn how to use <a href="http://jupyter.org/">scientific notebooks</a>, <a href="https://git-scm.com/">version control</a>, wikis, and even <a href="https://www.docker.com/">containers</a>!</li>
<li>I expect my students to demonstrate a <a href="https://twitter.com/sama/status/792823320441786368">promising slope of accomplishment</a>. Put simply, <a href="https://josh.works/blog/2015/6/25/a-little-bit-of-slope-makes-up-for-a-lot-of-y-intercept">I recruit for potential (slope), not experience (y-intercept)</a>. You don’t have to know everything about machine learning, statistics, and linear algebra, <em>and</em> be an expert programming in Python just to be able to work with me. However, I do expect that you will be able to pick up these skills very quickly.</li>
<li>I expect my students to take ownership of their projects, pushing the envelope of what is known and beyond what even I would suggest.</li>
</ul>
<p>Speaking of which…</p>
</section>
<section id="prepare-yourself-to-be-a-self-sufficient-researcher." class="level3">
<h3 class="anchored" data-anchor-id="prepare-yourself-to-be-a-self-sufficient-researcher.">3: Prepare yourself to be a self-sufficient researcher.</h3>
<p>This <strong>does NOT mean</strong> I expect you to do everything! The whole point of being a student is that you have a mentor, a supervisor who is (in theory) more experienced than you, from whom you can learn. It is indeed my job to guide you and teach you what I know, and I will most certainly do that.</p>
<p>This <strong>DOES mean</strong> that, by the end of your time here, I want you to be the expert on your project! You should take the project and run with it, rather than wait for me to tell you what to do next. Build your intuition about the problem through “moving fast and breaking things,” to use the tech startup parlance. Ask forgiveness rather than permission. Insert witticism here that basically says KEEP TRYING THINGS.</p>
<p>Even as you start your project, you may come across roadblocks that I don’t have an answer for. That’s how research works: we’re pushing the limits of our collective knowledge! I may have some intuition from previous problems, and I’ll certainly share that, but asking me “What do I do next?” is going to frustrate both of us very, very quickly.</p>
<p>Here’s another example: <a href="http://simplystatistics.org/2017/03/16/evo-ds-class/">the levels of data science classes</a>. You don’t have to be anywhere above Level 2 when you arrive (maybe you’re still working your way through Level 1!), but I expect you to work <strong>through Level 7 by the time you leave.</strong></p>
</section>
<section id="if-youve-made-it-this-far-and-are-still-interested" class="level3">
<h3 class="anchored" data-anchor-id="if-youve-made-it-this-far-and-are-still-interested">If you’ve made it this far, and are still interested…</h3>
<p>…then I encourage you to reach out to me and express your interest! I have just a few final pieces of advice:</p>
<p>First, <a href="https://twitter.com/DavidBindel/status/1054859324143616000">read this brief Twitter thread</a> and <a href="https://twitter.com/mickeykats/status/1074874785795112960">this brief Twitter thread as well</a>.</p>
<p>Next, <strong>do NOT</strong> send me</p>
<ol type="1">
<li>a form email with a 10-page summary of your accomplishments (as I said, I don’t hire for y-intercept, I hire for slope)</li>
<li>an email with misspellings or grammatical errors (recall that I emphasize good scientific communication skills)</li>
<li>a message that starts with “Dear Ms Quinn” (first, I’m a doctor; second, I’m a guy)</li>
</ol>
<p>I won’t respond.</p>
<p>Finally, <a href="https://magsol.github.io/pages/contact.html">write an email</a> that’s 3-5 sentences at most, <strong>with a specific mention of the work you find interesting and want to pursue further</strong>. For extra credit, mention some kind of improvement or extension to the work that you came up with on your own. This tells me a lot of things all at once, most important of which is that you’re serious about wanting to work with me.</p>
<p>Because if you can handle graduate school…</p>
<p><img src="https://magsol.github.io/posts/2017-03-16-so-you-want-to-conduct-research-with-me/grad-school.jpg" class="img-fluid"></p>
<p>…I really do believe you can handle anything.</p>


</section>

 ]]></description>
  <category>professional</category>
  <category>phd</category>
  <category>graduate school</category>
  <category>research</category>
  <category>mentoring</category>
  <category>computer science</category>
  <category>graduate student</category>
  <guid>https://magsol.github.io/posts/2017-03-16-so-you-want-to-conduct-research-with-me/index.html</guid>
  <pubDate>Thu, 16 Mar 2017 15:59:21 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2017-03-16-so-you-want-to-conduct-research-with-me/joker_play_a_game.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Game-ify Your Raspberry Pi</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/raspberrypi3.jpg" class="img-fluid"></p>
<p>My project over the 2016 holiday season was to take the Raspberry Pi 3 I’ve had sitting around the house idling for the previous nine months and turn it into a <a href="https://retropie.org.uk/">RetroPie-ified gaming emulator</a>.</p>
<p>RetroPie is a phenomenal bit of software that combines the work of several projects into a single package that was primarily designed to be deployed on Raspberry Pis, but which can also be set up on a regular ol’ PC. If you’re using a Raspberry Pi, it’s built on top of the <a href="https://www.raspberrypi.org/downloads/raspbian/">Raspbian OS</a>, so all the commands familiar to you will still be available.</p>
<p>I have to say up front: the folks with RetroPie have done an <em>amazing</em> job. The documentation was excellent, and while I’ll walk through the installation and configuration here, with only one notable exception everything went exactly as prescribed.</p>
<section id="retropie" class="level3">
<h3 class="anchored" data-anchor-id="retropie">RetroPie</h3>
<p>Assuming you have all the <a href="https://retropie.org.uk/documentation/building-your-own-retropie-machine/">needed hardware</a>, installing the RetroPie OS on your Pi is <a href="https://github.com/RetroPie/RetroPie-Setup/wiki/First-Installation">pretty straightforward</a>.</p>
<ul>
<li>Use some sort of imaging software to write the RetroPie image to an SD card (I used <a href="http://www.tweaking4all.com/hardware/raspberry-pi/macosx-apple-pi-baker/">ApplePi Baker</a> without any problems, but you could also just use the <code>dd</code> command in the Terminal, which directly moves bytes from one place to another).</li>
<li>Insert the SD card into your Pi.</li>
<li>Boot! I had a few false-starts that were the result of the SD card not being fully inserted, so nothing came up.</li>
</ul>
<p>If all goes well, you should see the wonderful Raspbian logo.</p>
<p><img src="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/raspberry-pi-logo.png" class="img-fluid"></p>
</section>
<section id="configuring-retropie" class="level3">
<h3 class="anchored" data-anchor-id="configuring-retropie">Configuring RetroPie</h3>
<p>The first thing you’ll need to do when RetroPie boots is to configure whatever controller you’re going to use. I went out and purchased some standard-issue <a href="http://gaming.logitech.com/en-us/product/f310-gamepad">Logitech USB gamepads</a> and they seem to be functioning very well. You can also use your keyboard if you want for this, but it pretty much has to be something that can be connected via USB directly to the Pi.</p>
<p>A few pointers in this step:</p>
<ul>
<li>To skip a particular button configuration, just <strong>press and hold any button for a second</strong>.</li>
<li>If you make a mistake in configuring a button, you have to get all the way to the bottom before you can scroll back up and fix it.</li>
<li>It took me 5-6 tries to get this completely right. Just go back and do it again if you mess something up.</li>
</ul>
</section>
<section id="emulationstation" class="level3">
<h3 class="anchored" data-anchor-id="emulationstation">EmulationStation</h3>
<p>Once you successfully configure a gamepad, you’ll be taken to the main landing page: EmulationStation.</p>
<p><img src="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/emulationstation.png" class="img-fluid"></p>
<p><em>Where are teh gamez0rz?!1</em>, you might be saying. Well, since ROMs are a legal gray area, you’re kinda on your own there. BUT! We have something else we need to do first anyway: set up a network configuration.</p>
</section>
<section id="network-configuration" class="level3">
<h3 class="anchored" data-anchor-id="network-configuration">Network Configuration</h3>
<p>If you have a Raspberry Pi 2 or earlier, your network choices are limited to an ethernet connection. With the advent of Raspberry Pi 3s, suddenly wifi is an option! Turns out, I have a 3, and it is this wifi that caused me a couple hours’ grief until I figured out what was going on.</p>
<p>Go to the wifi configuration in EmulationStation. You’ll be taken to a network selection screen–protip, the Pi 3 <strong>cannot</strong> connect to 5GHz networks–where you can select your wifi network.</p>
<p>You’ll then need to type in the wifi password. Provided you get it right, that should be it! You’re all set to go!</p>
<p>If you find yourself entering your password again…and again…and again…and again…and can’t figure out why it’s failing, read on.</p>
</section>
<section id="keyboard-layout" class="level3">
<h3 class="anchored" data-anchor-id="keyboard-layout">Keyboard Layout</h3>
<p>For whatever reason, my keyboard was misconfigured–the layout was set to English (U.K.), resulting in some special characters being remapped. However, since the Raspbian password interface echoes stars <code>*</code> back, I had no idea I was typing a completely wrong password until I fired up a command prompt.</p>
<p>Luckily, once you diagnose this issue, it’s fairly easy to fix. Raspbian has a <a href="https://www.raspberrypi.org/forums/viewtopic.php?f=28&amp;t=80127">utility built-in for changing your keyboard layout</a>. You just have to navigate in EmulationStation to the option that gives you a command prompt.</p>
<p>In my case, once I had a working network connection, I just used SSH to perform any other operations on the Pi (e.g.&nbsp;uploading new games). The default username/password for RetroPie is <code>pi/raspberry</code>, which I suggest you change either from the EmulationStation main menu, or after your first SSH login.</p>
</section>
<section id="moonlight-on-raspberry-pi" class="level3">
<h3 class="anchored" data-anchor-id="moonlight-on-raspberry-pi">Moonlight on Raspberry Pi</h3>
<p>You should have a working RetroPie at this point, so that’s cool!</p>
<p>However, as awesome as the Pis are, they’re not exactly brimming with horsepower. As such, if you try running N64 or PS2 emulators, you may find as I did that anything requiring 3D shaders gets <em>very</em> jittery, to the point of unplayable. RetroPie has <a href="https://github.com/RetroPie/RetroPie-Setup/wiki">detailed configuration options for every emulator</a> to help you get the absolute most out of your Pi, but there are some things a tiny CPU with an embedded stock GPU just can’t do, and one of those is render 3D shaders the way they were meant to be.</p>
<p>So what? Give up? <em>Nay!</em></p>
<p><img src="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/moonlight.jpg" class="img-fluid"></p>
<p><a href="https://github.com/irtimmer/moonlight-embedded/wiki">Moonlight Embedded</a> is the open source version of NVIDIA’s GameStream as used by the NVIDIA Shield. Basically, it’s a way of streaming the output of an NVIDIA GPU to another input, like a TV.</p>
<p>In this case, we’re basically turning our Pi into a glorified Chromecast–it’ll take the output from a dedicated GPU and stream it directly to the TV it’s connected to. Yes, this means you’re not actually playing games <em>on</em> the Raspberry Pi–you’re playing them on whatever computer has the GPU in it (oh and it has to be an NVIDIA GPU, GTX 650 or higher)–but all Moonlight requires is Raspbian, which is what RetroPie is built on!</p>
<p>I found <a href="https://blog.jhot.me/guide-install-moonlight-on-raspbian-retropie-9d1318b8ddf8#.etf7g4bo6">this installation guide</a> perfect (make sure you download the latest versions of everything!), with the lone exception that, just before downloading and installing Moonlight itself, I also needed to install one more library:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1">    <span class="fu" style="color: #4758AB;">sudo</span> apt-get install libenet-dev</span></code></pre></div>
<p>Include that with the other libraries installed just before Moonlight, and everything else should just work. The rest of the instructions take you through configuring the gamepads so they correctly send their input back to the GPU (so, y’know, you don’t have to sit at your computer while staring at your TV).</p>
</section>
<section id="happy-fun-times" class="level3">
<h3 class="anchored" data-anchor-id="happy-fun-times">Happy Fun Times!</h3>
<p>Yes, lots of happy fun times. But also <a href="http://docs.happyfuntimes.net/docs/introduction.html">HappyFunTimes</a>!</p>
<p>If you’re really into the party games, installing this gaming server may be the best thing ever. It’s a brilliant setup: gamepads are HTML5 canvases that run on smartphones, essentially mimicking controllers so everyone with a smartphone can play. The games range from stupidly simple to shockingly sophisticated. I may post configuration for that later, but I figure: if you’re building the Ultimate Gaming Pi, why not include that, too?</p>
<p>And with that, I give you the results at our house:</p>
<p><img src="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/zelda.jpeg" class="img-fluid"></p>


</section>

 ]]></description>
  <category>personal</category>
  <category>raspberry pi</category>
  <category>gaming</category>
  <category>video games</category>
  <category>nvidia</category>
  <category>steam</category>
  <guid>https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/index.html</guid>
  <pubDate>Fri, 06 Jan 2017 18:47:37 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2017-01-06-gameify-your-raspberry-pi/raspberrypi3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Open Science in Big Data (OSBD) Workshop</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2016-09-26-osbd2016-workshop/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2016-09-26-osbd2016-workshop/washingtondc.png" class="img-fluid"></p>
<p>Back in May of this year, some of the other computer science professors and I put together a proposal for a workshop. The workshop would be in conjunction with the December 2016 <a href="http://cci.drexel.edu/bigdata/bigdata2016/">IEEE BigData Conference</a>, and would focus specifically on the intersection of big data and open science.</p>
<p>In June, we got the good news: it was accepted!</p>
<section id="what-is-open-science" class="level3">
<h3 class="anchored" data-anchor-id="what-is-open-science"><em>What is “Open Science”?</em></h3>
<p>I’ve been interested in <a href="https://en.wikipedia.org/wiki/Open_science">open science</a> since I started graduate school. I’d been using Apache projects since college, learning how to set up and configure my own LAMP stack (yes, I’ll admit I dabbled in PHP for a few years, but I’m clean now!), but had never really contributed to an open source project until the 2010 Google Summer of Code. During that time, I worked on adding spectral clustering the <a href="http://mahout.apache.org">Apache Mahout</a> library.</p>
<p>While open source is great and wonderful, this is just one component of Open Science. It’s another reason I’m incredibly excited about the “container revolution”: Docker and its ilk. This concept makes entire pipelines perfectly reproducible, to the point where it’s now possible for entire scientific projects to be replicated with a single command: from running the analysis, to building the figures, to assembling the final PDF file (which, by the way, can be uploaded to <a href="http://arxiv.org">arXiv</a> for everyone to read!)</p>
<p>These other aspects–open sourcing data, reproducibility scripts, and entire pipelines–are veritable educational and research gold mines, but are arguably much more difficult than simply dumping some code on GitHub. <strong>These difficulties are only exacerbated in the realm of “big data”.</strong></p>
</section>
<section id="what-are-the-goals-of-the-workshop" class="level3">
<h3 class="anchored" data-anchor-id="what-are-the-goals-of-the-workshop"><em>What are the goals of the workshop?</em></h3>
<p>The goals of the workshop are threefold.</p>
<p><strong>First</strong>: we aim to <em>identify some of the biggest challenges</em> in democratizing big data analytics. Open Science is a critical component of both educational pedagogy and scientific research. With the increasing relevance of big data analytics, making these tools and resources available to the next generation of scientists and big data practitioners is crucial. Unfortunately, this is also extremely challenging.</p>
<p><strong>Second</strong>: we aim to bring together big data practitioners from multiple backgrounds to <em>discuss and establish the current state of affairs</em> with respect to reproducibility in big data analytics and machine learning. Priorities change and constraints differ between researchers and developers in academia versus industry versus government; nonetheless, open science and big data are important to practitioners in each of these areas.</p>
<p><strong>Third</strong>: we aim to <em>examine and propose possible routes forward</em> to advance the continued integration of open science in big data analytics, putting tools, techniques, data, and documentation in the hands of researchers, students, and other big data practitioners. We will identify emerging trends in terms of open science best practices, and how these can be incorporated into current big data endeavors.</p>
</section>
<section id="what-kinds-of-proceedings-is-the-workshop-accepting" class="level3">
<h3 class="anchored" data-anchor-id="what-kinds-of-proceedings-is-the-workshop-accepting"><em>What kinds of proceedings is the workshop accepting?</em></h3>
<p>We hope to have two tracks: a full research paper session, and a student (short) paper session.</p>
<p>Papers submitted to the OSBD workshop should, at the very minimum, have a significant Open Science component. This can take several forms, including but not limited to any combination of the following:</p>
<ul>
<li>Uses free and open source packages</li>
<li>Openly available online, e.g.&nbsp;GitHub</li>
<li>Scripts are available to reproduce figures</li>
<li>Data are openly available e.g.&nbsp;dat, datahub.io</li>
<li>etc.</li>
</ul>
<p>We are welcoming of original research into big data analytics, so long as there is an open science component.</p>
<p>Furthermore, in the spirit of Open Science and reproducibility, we strongly encourage our presenters to incorporate live code demos, data walkthroughs, or some other hands-on activity into their talks.</p>
</section>
<section id="when-is-the-submission-deadline" class="level3">
<h3 class="anchored" data-anchor-id="when-is-the-submission-deadline"><em>When is the submission deadline?</em></h3>
<p>The deadline for workshop paper submissions is <strong>Sunday, October 25, 2016</strong>. This provides a 2-week buffer zone between the notification deadline of the main IEEE BigData conference, in case you want to repackage your conference submission for the workshop.</p>
</section>
<section id="where-can-one-find-more-information-about-osbd" class="level3">
<h3 class="anchored" data-anchor-id="where-can-one-find-more-information-about-osbd"><em>Where can one find more information about OSBD?</em></h3>
<p>We have a website: <strong><a href="https://osbd.github.io/" target="_blank">https://osbd.github.io/</a></strong></p>
<p>The website contains information about the topics around the workshop, the invited speakers who will be attending (keynote and panelists), the important dates around the workshop, and the instructions for formatting and submitting your paper to the workshop.</p>
<p>We are very excited about this workshop, and encourage you to submit! We look forward to seeing you in December!</p>
<p><img src="https://magsol.github.io/posts/2016-09-26-osbd2016-workshop/openscience.png" class="img-fluid"></p>
<ul>
<li><a href="http://cs.uga.edu/~squinn">Shannon Quinn</a>, Co-chair</li>
<li><a href="http://cs.uga.edu/~jam/">John Miller</a>, Co-chair</li>
<li><a href="http://cs.uga.edu/~suchi/">Suchi Bhandarkar</a>, Co-chair</li>
<li><a href="http://cs.uga.edu/~yihong/">Yi Hong</a>, Co-chair</li>
</ul>


</section>

 ]]></description>
  <category>professional</category>
  <category>workshop</category>
  <category>big data</category>
  <category>ieee</category>
  <category>open science</category>
  <guid>https://magsol.github.io/posts/2016-09-26-osbd2016-workshop/index.html</guid>
  <pubDate>Mon, 26 Sep 2016 09:10:19 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2016-09-26-osbd2016-workshop/washingtondc.png" medium="image" type="image/png" height="47" width="144"/>
</item>
<item>
  <title>A twitterbot for posting weekly running stats</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2016-05-16-autopost-running-twitter-summary-strava/index.html</link>
  <description><![CDATA[ 




<p><img src="https://magsol.github.io/posts/2016-05-16-autopost-running-twitter-summary-strava/stravatwitter.png" class="img-fluid"></p>
<p>We runners (we’re a crazy bunch), for the most part, like our stats. How many miles do you log each week? Each month? How are your average race paces trending? Are your long runs both feeling good and getting faster?</p>
<p>Yes, we’re a little obsessed with our numbers.</p>
<p>It’s no surprise, then, that web services have popped up to help us aggregate some of these numbers. One of the most obvious is <a href="https://connect.garmin.com/">Garmin Connect</a>, home for pretty much anyone who uses the Garmin GPS watches.</p>
<p>Another that I’ve used before is <a href="http://www.dailymile.com/">Daily Mile</a>. However in recent months I’ve become frustrated enough with the site to leave entirely. By all accounts, no part of the site has been updated in <em>years</em>, and <a href="https://wherearethepancakes.wordpress.com/2013/05/20/my-ideal-running-statistics-site/">other alternatives</a> are simply much more pleasant to use.</p>
<p>Unfortunately, there was one crucial feature of Daily Mile I really liked: connecting it to your Twitter account to post weekly summaries of your recorded workouts. I liked it so much, in fact, I created a small web service to do the same thing, <a href="https://wherearethepancakes.wordpress.com/2014/06/11/open-beta-for-twathletic/">but for monthly summaries</a>:</p>
<p><img src="https://magsol.github.io/posts/2016-05-16-autopost-running-twitter-summary-strava/https:/wherearethepancakes.files.wordpress.com/2014/06/example.png" class="img-fluid"></p>
<p>Obviously that service no longer exists, but ever since I’ve been wanting to get something similar up and running again. Especially now that I don’t even have weekly summaries anymore–just couldn’t stomach Daily Mile any longer–I wanted to take the opportunity (and the shiny new blog) to go through a step-by-step procedure of creating your own Twitter / Strava app for posting weekly summaries on Twitter of your running mileage!</p>
<section id="preliminaries" class="level3">
<h3 class="anchored" data-anchor-id="preliminaries"><strong>Preliminaries</strong></h3>
<p>A few things you’ll need before we get started:</p>
<ul>
<li>Python 3.5</li>
<li><a href="http://www.tweepy.org/">tweepy</a> (for interfacing with Twitter)</li>
<li><a href="http://pythonhosted.org/stravalib/">stravalib</a> (for interfacing with Strava)</li>
<li><a href="https://github.com/magsol/pybot">pybot</a> (shameless plug, but it will help)</li>
</ul>
<p>Both Twitter and Strava use OAuth as their method of app authentication. These libraries just make it easier to interact with the services; they abstract a lot of the details of authentication and communication.</p>
<p>But in case you’re interested: <a href="https://dev.twitter.com/overview/documentation">Twitter’s docs</a> and <a href="http://strava.github.io/api/">Strava’s docs</a>.</p>
<section id="step-1-create-a-strava-app" class="level4">
<h4 class="anchored" data-anchor-id="step-1-create-a-strava-app"><strong>Step 1: Create a Strava app</strong></h4>
<p>Go to your <a href="https://www.strava.com/settings/api">user settings</a> and create an app that can interface with your account. Important pieces of information you’ll need later: <strong>Client ID</strong>, <strong>Client Secret</strong>, and <strong>Your access token</strong>.</p>
<p>We can test if it works. Fire up an IPython terminal, get your <code>access_token</code>, and run the following code:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">    <span class="im" style="color: #00769E;">from</span> stravalib <span class="im" style="color: #00769E;">import</span> Client</span>
<span id="cb1-2">    client <span class="op" style="color: #5E5E5E;">=</span> Client(access_token <span class="op" style="color: #5E5E5E;">=</span> access_token)</span>
<span id="cb1-3">    client.get_athlete()</span></code></pre></div>
<p>You should see something along the lines of:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">    Out[]: <span class="op" style="color: #5E5E5E;">&lt;</span>Athlete <span class="bu" style="color: null;">id</span><span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1234567</span> firstname<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">b'Firstname'</span> lastname<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">b'Lastname'</span><span class="op" style="color: #5E5E5E;">&gt;</span></span></code></pre></div>
</section>
<section id="step-2-retrieve-last-weeks-data" class="level4">
<h4 class="anchored" data-anchor-id="step-2-retrieve-last-weeks-data"><strong>Step 2: Retrieve last week’s data</strong></h4>
<p>The whole point is to get weekly mileage reports. Thankfully, the <code>get_activities</code> method in stravalib has an <code>after</code> optional parameter we can use to precisely tune what time interval we want.</p>
<p>First, though, we need to create a timestamp that represents the 1-week time frame. If we assume this will only be executed on the day we want the summary–say, every Monday–then we need to tally up all the runs from the day before all the way back to the previous Monday, inclusive.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">    <span class="im" style="color: #00769E;">import</span> datetime</span>
<span id="cb3-2">    current <span class="op" style="color: #5E5E5E;">=</span> datetime.datetime.now()</span>
<span id="cb3-3">    last_week <span class="op" style="color: #5E5E5E;">=</span> current <span class="op" style="color: #5E5E5E;">+</span> datetime.timedelta(weeks <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb3-4">    after <span class="op" style="color: #5E5E5E;">=</span> datetime.datetime(last_week.year, last_week.month, last_week.day)</span>
<span id="cb3-5">    activities <span class="op" style="color: #5E5E5E;">=</span> client.get_activities(after <span class="op" style="color: #5E5E5E;">=</span> after)</span></code></pre></div>
<p>Assuming we run this chunk of code on a Monday, it should give us every Strava activity from the previous Monday up to the present.</p>
<p>However, we’re not done yet. This includes everything–not just our runs, but any other activities that we recorded; yoga, weights, elliptical, and so on. We need to filter these out. We also need to filter out the edge case of any activities that have been recorded <em>today</em>, since we don’t want to include these in a report of <em>last</em> week’s activities!</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">    l <span class="op" style="color: #5E5E5E;">=</span> [activity.<span class="bu" style="color: null;">id</span> <span class="cf" style="color: #003B4F;">for</span> activity <span class="kw" style="color: #003B4F;">in</span> activities <span class="cf" style="color: #003B4F;">if</span> activity.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'Run'</span> \</span>
<span id="cb4-2">        <span class="kw" style="color: #003B4F;">and</span> a.start_date_local.day <span class="op" style="color: #5E5E5E;">!=</span> current.day]</span></code></pre></div>
<p>Ok, let’s pause and discuss what’s happening here.</p>
<p>First, the most obvious: we’re looping through the <code>activities</code> generator we obtained in the last line of the previous step. Second, the <code>if</code> statement at the end filters out any activities that aren’t a run. Finally, the <code>activity.id</code> part out front says, we’re building a list of the unique IDs that identify each activity. The last part is our timeframe edge case: if we recorded an activity today, even a running activity, don’t include it.</p>
<p>Why are we only holding onto the IDs? It has to do with detail. Strava maintains a hierarchy of details available to users that vary with authentication, connection, etc. Simply put, when we request a list of activities, <a href="http://strava.github.io/api/v3/activities/#get-activities">the default detail level is 2, which is “summary” level</a>. However, some of the metrics we need–calories in particular!–require level 3, or “detailed”. To get this level of detail, we need to query for individual activities…one at a time.</p>
<p>Hence, a list of activity IDs! Now we can loop through the IDs, requesting details on each run and tabulating up the mileage and calories.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">    <span class="im" style="color: #00769E;">from</span> stravalib <span class="im" style="color: #00769E;">import</span> unithelper</span>
<span id="cb5-2"></span>
<span id="cb5-3">    mileage <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span>, calories <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;">for</span> activity_id <span class="kw" style="color: #003B4F;">in</span> l:</span>
<span id="cb5-5">        activity <span class="op" style="color: #5E5E5E;">=</span> client.get_activity(activity_id)</span>
<span id="cb5-6"></span>
<span id="cb5-7">        <span class="co" style="color: #5E5E5E;"># This is annoying; all the default distances are in meters! Luckily,</span></span>
<span id="cb5-8">        <span class="co" style="color: #5E5E5E;"># stravalib comes with a nice unit helper utility to do the conversion.</span></span>
<span id="cb5-9">        distance <span class="op" style="color: #5E5E5E;">=</span> unithelper.miles(activity.distance)</span>
<span id="cb5-10">        mileage <span class="op" style="color: #5E5E5E;">+=</span> <span class="bu" style="color: null;">round</span>(distance.num, <span class="dv" style="color: #AD0000;">2</span>)  <span class="co" style="color: #5E5E5E;"># Rounds to 2 sig figs.</span></span>
<span id="cb5-11">        calories <span class="op" style="color: #5E5E5E;">+=</span> activity.calories</span></code></pre></div>
<p>There you have it! In those two variables–<code>mileage</code> and <code>calories</code>–you have all the data you need to summarize your running workouts for the last week. Now we just need to post this information on Twitter!</p>
</section>
<section id="step-3-create-a-pybot" class="level4">
<h4 class="anchored" data-anchor-id="step-3-create-a-pybot"><strong>Step 3: Create a PyBot</strong></h4>
<p>Ok, time for a shameless plug: yes, I’m the <a href="https://github.com/magsol/pybot">pybot</a> author. It’s still highly experimental, and largely uncompleted, but for our purposes it will suffice nicely as a barebones framework to interact with Twitter.</p>
<p>Clone the repo and follow the setup script to create a Twitter app and connect it to your account.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1">    <span class="fu" style="color: #4758AB;">git</span> clone https://github.com/magsol/pybot.git</span>
<span id="cb6-2">    <span class="bu" style="color: null;">cd</span> pybot</span>
<span id="cb6-3">    <span class="ex" style="color: null;">sbin/create_pybot.py</span></span></code></pre></div>
<p>That will walk you through the instructions for creating an app, generating OAuth credentials, and stubbing out your first pybot. Feel free to give it whatever name you’d like; for the purposes of this tutorial, I’ll assume we’ve named it <code>artbot</code> (don’t ask). Congratulations! You’ve created a twitter bot!</p>
</section>
<section id="step-4-customize-the-bots-behavior" class="level4">
<h4 class="anchored" data-anchor-id="step-4-customize-the-bots-behavior"><strong>Step 4: Customize the bot’s behavior</strong></h4>
<p>Our bot is pretty simple: every Monday at some specified time, it will wake up, read all the prior week’s running activities, and post the summary before going back to sleep for another week.</p>
<p>It won’t be prompted by anything other than time. So the specific action override we’re looking for in PyBot parlance is <code>on_tweet</code>, and the interval we’ll use is <code>tweet_interval</code>. The latter is easy enough–a full week between tweets!</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">    <span class="va" style="color: #111111;">self</span>.config[<span class="st" style="color: #20794D;">'tweet_interval'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">60</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">24</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">7</span></span></code></pre></div>
<p>Before we go any further: does anyone see anything wrong with the above code snippet?</p>
<p>I’ll give you a hint: imagine you started this bot on a Tuesday, instead of a Monday.</p>
<p>Yep, there it is. This interval we’ve defined is exactly 1 week, but it <em>doesn’t account for when we actually START the bot</em>. We need this to be a little more intelligent. If you want the posting to happen weekly every Monday, it shouldn’t matter when you actually start running the bot, right? It should be smart enough to figure out when it needs to post for the first time, <em>then</em> post weekly thereafter.</p>
<p>A neat component of PyBot is that, in addition to giving hard time frames, you can also specify functions to compute the interval on-the-fly, subject to some other constraints that are dynamic (like on what day of the week you happen to fire up the bot).</p>
<p>To make things easy on us, we’ll use the <code>datetime</code> convention in the Python documentation for <a href="https://docs.python.org/3.5/library/datetime.html#datetime.datetime.weekday">identifying individual days of the week</a>. This tutorial assumes Mondays (which corresponds to <code>0</code>), but you can use whatever value you want.</p>
<p>We need to store this as a configuration parameter in the bot.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">    <span class="co" style="color: #5E5E5E;"># Put this somewhere in the bot_init() method</span></span>
<span id="cb8-2">    <span class="va" style="color: #111111;">self</span>.config[<span class="st" style="color: #20794D;">'update_day'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>  <span class="co" style="color: #5E5E5E;"># Corresponds to Monday.</span></span></code></pre></div>
<p>Now, we need a <em>function</em> to compute the interval between updates.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">    <span class="co" style="color: #5E5E5E;"># Put this somewhere in the bot_init() method</span></span>
<span id="cb9-2">    <span class="va" style="color: #111111;">self</span>.config[<span class="st" style="color: #20794D;">'tweet_interval'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._compute_interval</span></code></pre></div>
<p>We’ve referenced an internal method we’re calling <code>_compute_interval</code>, as of yet undefined. Let’s go ahead and define it!</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">    <span class="co" style="color: #5E5E5E;"># Put this somewhere in the bot class declaration</span></span>
<span id="cb10-2">    <span class="kw" style="color: #003B4F;">def</span> _compute_interval(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb10-3">        interval <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">60</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">24</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">7</span>  <span class="co" style="color: #5E5E5E;"># The default interval; we'll start here</span></span>
<span id="cb10-4"></span>
<span id="cb10-5">        <span class="co" style="color: #5E5E5E;"># Are we on the right day of the week?</span></span>
<span id="cb10-6">        now <span class="op" style="color: #5E5E5E;">=</span> datetime.datetime.now().weekday()</span>
<span id="cb10-7">        target <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.config[<span class="st" style="color: #20794D;">'update_day'</span>]</span>
<span id="cb10-8">        <span class="cf" style="color: #003B4F;">if</span> now <span class="op" style="color: #5E5E5E;">==</span> target:</span>
<span id="cb10-9">            <span class="cf" style="color: #003B4F;">return</span> interval  <span class="co" style="color: #5E5E5E;"># Nothing to do! Yay!</span></span>
<span id="cb10-10"></span>
<span id="cb10-11">        <span class="co" style="color: #5E5E5E;"># If we get to this point, it means the index of the current day--</span></span>
<span id="cb10-12">        <span class="co" style="color: #5E5E5E;"># as in, right when the code gets HERE--doesn't match the index of the</span></span>
<span id="cb10-13">        <span class="co" style="color: #5E5E5E;"># day we've said we want to perform this update. So we need to do a</span></span>
<span id="cb10-14">        <span class="co" style="color: #5E5E5E;"># little bit of work to compute that date.</span></span>
<span id="cb10-15"></span>
<span id="cb10-16">        <span class="cf" style="color: #003B4F;">if</span> now <span class="op" style="color: #5E5E5E;">&gt;</span> target:</span>
<span id="cb10-17">            <span class="co" style="color: #5E5E5E;"># This is a hack, so the index of the CURRENT day will always be</span></span>
<span id="cb10-18">            <span class="co" style="color: #5E5E5E;"># smaller than the index of the TARGET day.</span></span>
<span id="cb10-19">            now <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">        <span class="co" style="color: #5E5E5E;"># Essentially, all we've done is replace the 7 above with whatever</span></span>
<span id="cb10-22">        <span class="co" style="color: #5E5E5E;"># it needs to be in order to get us to our target day.</span></span>
<span id="cb10-23">        <span class="cf" style="color: #003B4F;">return</span> (target <span class="op" style="color: #5E5E5E;">-</span> now) <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">24</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">60</span> <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">60</span></span></code></pre></div>
<p>Now that our interval is in place, we’ll need to override the <code>on_tweet</code> action to do what we want whenever it’s called (which will be once each week on the day we’ve specified!). Remember, this method is called once we’ve hit our interval. So this is where it all comes together!</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">    <span class="kw" style="color: #003B4F;">def</span> on_tweet(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb11-2"></span>
<span id="cb11-3">        <span class="co" style="color: #5E5E5E;"># First, pull in the stats from Strava.</span></span>
<span id="cb11-4">        current <span class="op" style="color: #5E5E5E;">=</span> datetime.datetime.now()</span>
<span id="cb11-5">        last_week <span class="op" style="color: #5E5E5E;">=</span> current <span class="op" style="color: #5E5E5E;">+</span> datetime.timedelta(weeks <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb11-6">        after <span class="op" style="color: #5E5E5E;">=</span> datetime.datetime(last_week.year, last_week.month, last_week.day)</span>
<span id="cb11-7">        activities <span class="op" style="color: #5E5E5E;">=</span> client.get_activities(after <span class="op" style="color: #5E5E5E;">=</span> after)</span>
<span id="cb11-8"></span>
<span id="cb11-9">        <span class="co" style="color: #5E5E5E;"># Second, filter by activity type and time frame.</span></span>
<span id="cb11-10">        l <span class="op" style="color: #5E5E5E;">=</span> [activity.<span class="bu" style="color: null;">id</span> <span class="cf" style="color: #003B4F;">for</span> activity <span class="kw" style="color: #003B4F;">in</span> activities <span class="cf" style="color: #003B4F;">if</span> activity.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'Run'</span> <span class="kw" style="color: #003B4F;">and</span></span>
<span id="cb11-11">            a.start_date_local.day <span class="op" style="color: #5E5E5E;">!=</span> current.day]</span>
<span id="cb11-12"></span>
<span id="cb11-13">        <span class="co" style="color: #5E5E5E;"># Third, tabulate up the stats for mileage and calories.</span></span>
<span id="cb11-14">        mileage <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span>, calories <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.0</span></span>
<span id="cb11-15">        <span class="cf" style="color: #003B4F;">for</span> activity_id <span class="kw" style="color: #003B4F;">in</span> l:</span>
<span id="cb11-16">            activity <span class="op" style="color: #5E5E5E;">=</span> client.get_activity(activity_id)</span>
<span id="cb11-17">            distance <span class="op" style="color: #5E5E5E;">=</span> unithelper.miles(activity.distance)</span>
<span id="cb11-18">            mileage <span class="op" style="color: #5E5E5E;">+=</span> <span class="bu" style="color: null;">round</span>(distance.num, <span class="dv" style="color: #AD0000;">2</span>)  <span class="co" style="color: #5E5E5E;"># Rounds to 2 sig figs.</span></span>
<span id="cb11-19">            calories <span class="op" style="color: #5E5E5E;">+=</span> activity.calories</span>
<span id="cb11-20"></span>
<span id="cb11-21">        <span class="co" style="color: #5E5E5E;"># Finally, use the stats to craft a tweet. This can be any format</span></span>
<span id="cb11-22">        <span class="co" style="color: #5E5E5E;"># you want, but I'll use the example one from the start of the post.</span></span>
<span id="cb11-23">        tweet <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"My training last week: </span><span class="sc" style="color: #5E5E5E;">{:d}</span><span class="st" style="color: #20794D;"> workouts for </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="st" style="color: #20794D;"> miles and </span><span class="sc" style="color: #5E5E5E;">{:d}</span><span class="st" style="color: #20794D;"> calories burned."</span>.<span class="bu" style="color: null;">format</span>(<span class="bu" style="color: null;">len</span>(l), mileage, calories)</span>
<span id="cb11-24">        <span class="va" style="color: #111111;">self</span>.update_status(tweet)</span></code></pre></div>
<p>That’s it! You have everything you need; now, just set the bot to run <em>ad nauseum</em>:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1">    <span class="ex" style="color: null;">python</span> artbot.py</span></code></pre></div>
<p>It should run forever, sleeping for most of it but waking every week to post your summary. If you notice something isn’t working right, check the logs; they should specify if there are problems e.g.&nbsp;with permissions posting to Twitter, or connections hanging and disconnecting.</p>
</section>
</section>
<section id="conclusion" class="level3">
<h3 class="anchored" data-anchor-id="conclusion"><strong>Conclusion</strong></h3>
<p>That’s all there is to it! There are obviously a lot of technical hurdles I largely glossed over–creating the apps for both Strava and Twitter can be a little more involved than the average person would like, and Python versions (especially 2.x vs 3.x) can wreak havoc on your code. I tried to be as reproducible as I could, though until Jupyter notebooks decide to play nice with Pelican (or maybe the other way around?) these code embeddings will have to suffice. Sigh.</p>
<p>Please feel free to leave a comment if you have any questions! I’ve also posted the bot in the <code>examples</code> folder in the <a href="https://github.com/magsol/pybot">pybot GitHub repository</a> as <code>artbot.py</code>. Happy tweeting!</p>


</section>

 ]]></description>
  <category>personal</category>
  <category>python</category>
  <category>strava</category>
  <category>running</category>
  <category>oauth</category>
  <category>tweepy</category>
  <category>twitter</category>
  <category>pybot</category>
  <guid>https://magsol.github.io/posts/2016-05-16-autopost-running-twitter-summary-strava/index.html</guid>
  <pubDate>Mon, 16 May 2016 15:09:59 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2016-05-16-autopost-running-twitter-summary-strava/stravatwitter.png" medium="image" type="image/png" height="66" width="144"/>
</item>
<item>
  <title>Reviewing a reviewed grant’s reviews</title>
  <dc:creator>Shannon Quinn</dc:creator>
  <link>https://magsol.github.io/posts/2016-02-02-nsf-crii-reviewer-feedback/index.html</link>
  <description><![CDATA[ 




<p>Rejection in any context sucks. As a new faculty trying to prove himself (to himself, but most importantly, to his tenure committee), I particularly hate rejections in the context of grant proposals and paper submissions. The “nice” thing about the latter rejection is that it’s marginally easier to resubmit a manuscript elsewhere; there are more journals and conferences than ever, especially in computer science.</p>
<p><img src="https://magsol.github.io/posts/2016-02-02-nsf-crii-reviewer-feedback/write_grants.jpg" class="img-fluid"></p>
<p>Last September, I submitted a proposal in line with <a href="http://www.nsf.gov/pubs/2015/nsf15569/nsf15569.htm">NSF’s 15-569 program solicitation</a>: the Research Initiation Initiative in Computer and Information Science and Engineering.</p>
<p>Insert jokes involving “initiation initiative” imagery here (sorry, I don’t have an avalanche of Advil).</p>
<p>Somewhat unsurprisingly but nonetheless disappointingly, I received notification today that the proposal was rejected. I say unsurprising because the proposal itself was incredibly rushed; we hit “submit” about two minutes before deadline. It was my first major grant proposal, so there were bound to be some mishaps.</p>
<p>So: let’s get into the reviewer feedback!</p>
<section id="reviewer-1" class="level3">
<h3 class="anchored" data-anchor-id="reviewer-1">Reviewer 1</h3>
<p>This was the longest review (aside from the Panel Summary). The reviewer listed the Strengths and Weaknesses of the proposal (which I appreciate). For instance, one of the given strengths:</p>
<blockquote class="blockquote">
<p>The proposed work seeks to address these limitations: the innovation of this work is the combination of traditional and nontraditional data sets in a tool for disease forecasting.</p>
</blockquote>
<p>And weaknesses:</p>
<blockquote class="blockquote">
<p>The research plan is lacking detail, which significantly call into question the intellectual merit of the proposal. For example, very little detail is given regarding how the models in Task 1 and 2 will be tested. Eg, how will the team determine that the models are operating at a sufficient level of accuracy?</p>
</blockquote>
<p>This point is particularly brutal:</p>
<blockquote class="blockquote">
<p>It’s unclear how the proposed work will help him differentiate his work from work done previously with graduate advisors.</p>
</blockquote>
<p>That, more than anything else, is dangerous territory. The first weakness can be described as a consequence of rushed writing. The second is systemic and not trivial to assuage.</p>
<p>Overall, this reviewer gave the proposal a rating of “Fair.”</p>
</section>
<section id="reviewer-2" class="level3">
<h3 class="anchored" data-anchor-id="reviewer-2">Reviewer 2</h3>
<p>The feedback here wasn’t quite as structured as Reviewer 1, but still provided a reasonable level of detail.</p>
<blockquote class="blockquote">
<p>Strengths are the concept of developing a […] based on […], and […], both in terms of […] and […]. Another strength is the PI’s experience with […], and in using […].</p>
</blockquote>
<p>Put another way: the reviewer liked the general idea, and the fact that I’ve had a little experience with it in the past.</p>
<blockquote class="blockquote">
<p>However, several major concerns are: 1) as far as I can see, the PI doesn’t have a great deal of experience working with […].</p>
</blockquote>
<p>This was an excellent point. I mentioned a particular strategy but formally don’t have any training with it. I neglected my own rule of “justify everything” here.</p>
<blockquote class="blockquote">
<ol start="2" type="1">
<li>No clear description of the data mining and statistical methods for error evaluation and estimation of signals from the inevitable noise from […]</li>
</ol>
</blockquote>
<p>Rookie mistake on my part.</p>
<blockquote class="blockquote">
<ol start="3" type="1">
<li>validation of system predictions underdeveloped, when this would be of major importance</li>
</ol>
</blockquote>
<p>Also a rookie mistake.</p>
<blockquote class="blockquote">
<ol start="4" type="1">
<li>finally, the choice of […] seems idiosyncratic. The budget is for […]. No involvement of […], which again casts some uncertainty as to successfully developing and implementing the […].</li>
</ol>
</blockquote>
<p>This ties back with the reviewer’s first criticism: since I don’t have much experience with this certain strategy, the next best thing would be to provide funding for someone who does, which I did not do.</p>
<p>Part of the reviewer’s summary included this line:</p>
<blockquote class="blockquote">
<p>It will also be remarkable if all the activities proposed can be achieved within 2 years, especially given that most of the work will presumably be carried out by graduate and undergraduate students.</p>
</blockquote>
<p>In a way, this is something of a relief: my original plan had been to submit a <a href="http://www.nsf.gov/pubs/2015/nsf15555/nsf15555.htm">CAREER proposal</a> on this topic; if a reviewer thinks the topic is too large-scale to be done in two years, it may be the right scale for a 5-year CAREER award.</p>
<p>Overall, the reviewer gave the proposal a rating of “Fair.”</p>
</section>
<section id="reviewer-3" class="level3">
<h3 class="anchored" data-anchor-id="reviewer-3">Reviewer 3</h3>
<p>The third reviewer is something of an outlier, though <a href="https://www.youtube.com/watch?v=-VRBWLpYCPY">not in the usual way</a>.</p>
<p>The feedback was extremely succinct, and universally positive (knee-jerk aside: was this a student?). It was also at a very high level; it never addressed the details of the proposal, only the big-picture ideas. Here’s the summary:</p>
<blockquote class="blockquote">
<p>Overall, the proposed research activities have significant potential to be transformative. The two core objectives and corresponding tasks ([…]) seem ambitious to the reviewer. Integration of research and educational activities are relevant and intersect various disciplines (computer sciences, cellular biology, genetics).</p>
</blockquote>
<p>Well-written, but nonetheless out of sync with the other two reviewers. Don’t get me wrong–I <strong>greatly</strong> appreciate some positive feedback on my first NSF proposal as PI! This reviewer gave the proposal a “Very Good” rating, which is also a nice shot to the ego. But it’s clear there were some glaring weaknesses that, for whatever reason, this reviewer chose not to elucidate.</p>
</section>
<section id="panel-summary" class="level3">
<h3 class="anchored" data-anchor-id="panel-summary">Panel Summary</h3>
<p>Nothing surprising here. The strengths from the previous reviewers were identified, along with the numerous accompanying weaknesses. The panel did address the issue of broader impacts:</p>
<blockquote class="blockquote">
<p>Although the proposal has merits, the PI may need to clarify clearly as to the major justification for developing the proposed tool in relation to other initiatives in this area, eg […]. The panel also highlighted several problems and questions with regards to […]. Until these problems are addressed, it was felt that the broader impact of this project, particularly the probability of […], is likely to be moderate to low</p>
</blockquote>
<p>That, along with a “Low Competitive” panel recommendation, pretty much sums things up.</p>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>For the vast majority of weaknesses, their immediate impetus can be summed up thusly: <em>I started writing the grant the day before deadline.</em> That’s a no-no, and contributed directly to the panicked flurry at the end and lack of detail in the proposal itself. Starting earlier will solve these problems.</p>
<p>The last point that genuinely concerns me, though, is the first reviewer’s comment on differentiating myself from my graduate advisors. It’s true that this proposal took work I started as a graduate student, and I agree that it’s important to build an independent research group such that I don’t have to rely on my graduate advisors for funding.</p>
<p>But I suppose I could boil this down to time constraints as well: given more elbow room, I could have provided a more detailed development plan that clearly differentiated itself from work done before. Rather than relying on the “we propose to <em>extend</em>…” mantra, I could have delved into much greater detail on the methods I’d wanted to use and why their application would be novel.</p>
<p>So there you have it: a review of grant reviews. Nothing left to do here but incorporate the feedback and push out more effective proposals in the months to come!</p>


</section>

 ]]></description>
  <category>professional</category>
  <category>academia</category>
  <category>grants</category>
  <category>feedback</category>
  <category>rejection</category>
  <guid>https://magsol.github.io/posts/2016-02-02-nsf-crii-reviewer-feedback/index.html</guid>
  <pubDate>Tue, 02 Feb 2016 10:18:34 GMT</pubDate>
  <media:content url="https://magsol.github.io/posts/2016-02-02-nsf-crii-reviewer-feedback/write_grants.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
