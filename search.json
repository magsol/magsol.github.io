[
  {
    "objectID": "posts/2019-01-31-starcraft-ii-questions/index.html",
    "href": "posts/2019-01-31-starcraft-ii-questions/index.html",
    "title": "StarCraft II Questions",
    "section": "",
    "text": "I’ve been sick the past couple of days. In between drinking way too much tea, passing out cold, and actually getting the occasional bit of work done, I’ve been (re-)playing a decent amount of StarCraft II, specifically the Legacy of the Void (LotV) campaign. It’s the final installment of SC2, and honestly it’s the one I find most frustrating.\nNo, it’s not the dialogue, which is super cliche and overwrought, but it’s endemic across the entire SC2 series. Also, the LotV gameplay honestly makes up for it (as is true for most of the SC2 series).\nRather, my problem is with the actual storytelling. There are lots of sprawling story elements but a lot of them just don’t make any sense. Heart of the Swarm (HotS) had a few chin-scratching moments, but overall the storyline was a pretty clear and well-motivated revenge tale. Even before that, Wings of Liberty (WoL) was a clear and compact story of regret and redemption. So while the LotV gameplay was outstanding, it was extremely jarring for the story to be so jumbled and reliant on retconning a large amount of StarCraft lore.\nSo may I present, inspired by RedLetterMedia’s treatment of Prometheus several years back, a list of questions that came to mind. Presented in no particular order:\n\n\nSo apparently Emil Narud / Samir Duran was also a fallen Xel’Naga, as he said as much in the LotV epilogue missions. Why was he alive all this time, but not Amon? How did he escape Amon’s fate?\nWhy did he take the form of a human instead of some all-powerful hybrid like the ones he was cultivating in those years? What was stopping Amon from taking the form of a human as well?\nWhat were the purposes of Duran’s machinations in Brood War? As stated at the time, it was in the service of returning Amon and breeding the hybrid, but if he was a full Xel’Naga, why would Amon’s resurrection even be necessary? Couldn’t Narud just remake all life in the universe, then resurrect Amon at his leisure for their post-universe-destruction celebration party?\n\n\n\nOh man, the Khala. Supposedly the thing that both saved the Protoss race back in the day, but also nearly led to their destruction when Amon infiltrated it in LotV. A nice symmetry, sure, but… ok. So. The Khala was linked through khaydarin crystals, which are rife throughout Protoss technology. The Protoss themselves interface with it through their nerve cords, which [SPOILER ALERT] they all sever at the end of LotV to drive Amon back into the Void. But couldn’t he just live on in their technology?\nWould the Protoss have to derive entirely new, non-khaydarin crystal technology to completely drive out Amon?\nHow on Kerrigan’s red Char did they manage to sever the nerve cords of literally all the Protoss of the Golden Armada–including those who had not yet arrived at Aiur–in the two minutes that the keystone was able to contain Amon?! Rohana proved that physical distance was not an issue for Amon, only connection to the Khala via nerve cords did. How could they have possibly gotten the order out to all those Protoss in such a short period?\nAmon is shown leaving Artanis’ body when Zeratul severs his nerve cords. But couldn’t Amon just possess Artanis? Why was Amon able to inhabit the Khala, but not individuals?\nI mean, where is the Khala even centralized? If it’s just the psychic connection between Protoss–and therefore completely decentralized–wouldn’t Amon act more like a virus? Why would severing everyone’s nerve cords suddenly leave Amon homeless? Is severing your nerve cords like a vaccination?\nWhy would Amon even need a “host body” if he’s able to take over literally all the Khalai Protoss?\n\n\n\nHow did Amon control the Zerg? Through an Overmind? Where was it located? If not, did he exert control over every individual Zerg? How? Why couldn’t he do the same thing through the Protoss? Or hell, even the Terrans?\nDid he possess the Zerg? Why couldn’t he control Kerrigan’s Zerg? Or again, the Protoss?\nWhere was Amon in the intervening period of Heart of the Swarm when he was (presumably) already revived following the conclusion of Wings of Liberty, but not yet the main villain at beginning of LotV? Drinking at a bar somewhere?\nThe original StarCraft lore seems to be retconned to suggest (in no uncertain terms) that any and all tampering in the development of the Zerg and Protoss was the fault of Amon and his followers and not part of the original plan put in motion by the Xel’Naga. Does that mean the Khala was Amon’s creation, as well as the Overmind? What was even supposed to happen absent the Khala or the Overmind?\nWhy was Amon so much more powerful than Ouros? They’re both Xel’Naga; wouldn’t they be evenly matched?\nKerrigan was Xel’Naga for all of an hour before she flat-out blasted Amon out of existence. How? Why was she better equipped to deal with Amon in such short order, compared to a friendly Xel’Naga trapped in the Void for eons?\nSure, maybe the combined might of both Narud and Amon kept Ouros trapped in the Void, but Narud was only with his master for all of a campaign and a half; plus, it was only after Stukov dealt Narud the killing blow in the epilogue that Ouros began the process of giving Kerrigan his essence. Wouldn’t the combined might of Kerrigan and Ouros be infinitely more powerful than just Amon?\nIf Amon killed all those slumbering Xel’Naga in Ulnar, why wouldn’t they also just return to the Void, as Amon did at the end of LotV?\n\n\n\nThe Tal’darim are introduced in WoL as a “fanatical” group of Protoss who generally do their own thing. In LotV, it’s revealed that they’re actually in league with Amon. But in WoL, they are actively fighting against the retrieval of the artifact pieces–an essential step to assembling the artifact, using it to de-infest Kerrigan, and capturing all that power to resurrect Amon. This connection becomes even more confusing when considering that it was Moebius Corps who literally hired Jim Raynor and his Raiders to assemble the artifact pieces.\ni.e., Moebius Corps was led by Emil Narud, aka Samir Duran, aka the one dude who’s been trying for millennia to resurrect Amon. Why would the Tal’darim fight directly against him? Did it take them the countless ages between the Aeon of Strife and HotS to realize they were working for the same guy?\nDo the Tal’darim still have their nerve cords? Are they connected to the Khala?\nIt would seem not, since after Alarak becomes their highlord and turns them against Amon, I would think Amon’s first course of action would be to take control of them, but he doesn’t, or can’t. But it seems like they do have nerve cords, given Alarak’s huge jagged ponytail thing. So are they somehow not connected to the Khala, despite having nerve cords? If that’s the case, why can’t the Daelaam do the same? Is it a choice to connect to the Khala? Is it like the Force–something you can train yourself to use, but which you can also consciously separate yourself from?\nAlarak is, like, wicked powerful. Crazy powerful. He breaks through a stasis field on the Spear of Adun like it was tissue paper, and blasts open an armored door and destroys a warp crystal on Aiur with a single shot. Where was that ability when he was fighting Malash for highlord?\n\n\n\nThe Nerazim are said to draw their power “from the Void”. What even is the Void? Some kind of parallel evil dimension?\nBut the Void clearly has toxic and destabilizing effects on the “current” dimension, since anytime a rift opens it pretty much wipes everything it touches apart. But then, in the epilogue, everyone gears up and heads into the Void! How?!\nSo, the Dark Templar get their power from the same place as the Xel’Naga? And Amon? Wouldn’t that mean only a Dark Templar can defeat Amon? Or that Amon could pierce Nerazim cloaks?\nOr, wouldn’t that mean Amon would have total control over their abilities, making them just as vulnerable to his influence as the Khalai Protoss?\nSeriously, how are missiles going to be an effective weapon in the Void?\nAgainst Narud and Amon?\nAMON.\n\n\n\nLet’s talk a bit about Amon’s “plan”. He wanted to break the Infinite Cycle and remake all life in his image. But the end credits of LotV literally said, that with Kerrigan’s ascension and the alliance’s victory over Amon, the Infinite Cycles came to an end. So… mission accomplished?\nSo, from the Void, he uses his pawn / follower / fellow Xel’Naga (???) Narud to work on a way to resurrect him, creating “false” hybrid armies in the meantime. Were these hybrid basically accelerated versions of what the Infinite Cycles were supposed to “naturally” result in? I mean, weren’t the Zerg and Protoss ultimately meant to merge?\nAmon corrupted the Zerg, creating an overriding imperative to destroy or assimilate the Protoss. Since the Protoss can’t be infested, I would assume that basically amounts to a “kill” order?\nAnyway, the Overmind cleverly tries to circumvent that order by creating the Queen of Blades, with supposedly only slightly more free will than it. Why? Where does that slightly-more-free-will come from? Just because she’s Terran, and therefore not a Xel’Naga creation? Or was it something unique to Kerrigan?\nOf course, she was only infested after Amon’s death. How was Narud/Duran planning to resurrect his master, then? It was only the de-infestation of Kerrigan that gave him enough power to resurrect Amon. So until that unlikely sequence of infestation-deinfestation events happened, had he just been spending a lot of time on his Pelaton and researching cutting-edge battery technology?\n\nReally, I just think this game sucks.\n(not really tho)\n\n\n\nCitationBibTeX citation:@online{quinn2019,\n  author = {Quinn, Shannon},\n  title = {StarCraft {II} {Questions}},\n  date = {2019-01-31},\n  url = {https://magsol.github.io/2019-01-31-starcraft-ii-questions},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2019. “StarCraft II Questions.” January 31,\n2019. https://magsol.github.io/2019-01-31-starcraft-ii-questions."
  },
  {
    "objectID": "posts/2023-11-09-rebuilding/index.html",
    "href": "posts/2023-11-09-rebuilding/index.html",
    "title": "Rebuilding",
    "section": "",
    "text": "Warning\n\n\n\nContent warning: discussions of body image, eating habits, diet culture, and long COVID. Also, language.\n\n\nIt has been a very long road back from long COVID.\nI can vividly remember where I was a year ago: in the depths of burnout, taking naps almost every day just to get by; weekly migraines; running in place yet accomplishing nothing; maybe getting in a few miles of running per week, and years since I could string together more than about 10 push-ups at once.\nAnd then COVID hit, and even though the active infection was relatively mild, some symptoms stuck around for months after: exercise-induced asthma and sleep apnea being the two most disruptive and frustrating. When I started running again in late January, every single outing was, frankly, infuriating: the first couple miles were agonizing. My lungs wouldn’t open; it felt like drowning. My heart would race. And by the time my lungs finally opened up, I was usually exhausted by then anyway. The Savannah Women’s Half in April rolled around, and even though I finished, it was a 1-minute improvement over the previous October’s Ath Half.\nSix months, 1-minute improvement, for my second-slowest half marathon time ever.\nThis was also when I started seeing a specialist for my breathing. I experienced a brief reprieve in January from the migraines that had been plaguing me for the past several months—burnout recovery!—but they started back up again in late January and through all of February before I realized they were due to my other new long COVID symptom, sleep apnea; an at-home sleep study later confirmed it.\nAdditionally, I started seeing a dietician. Not an influencer or “lifestyle coach”, someone with an actual fucking degree in nutrition—and someone who came recommended for athletes. I figured if I really wanted to manage these symptoms, I was going to need to hit them from every angle: medical interventions, dietary changes, and a regular workout regimen.\n\nThe medical interventions front has been, by far, the most disappointing. Despite seeing highly recommended pulomnary and sleep specialists, their treatment options have been severely limited by insurance companies refusing to reimburse them. I’ve also been disappointed by their unwillingness to “work the system”, forcing me to advocate for myself despite seeking these people out specifically because I lack specialist knowledge. I’ve had to rely on data from a pulse oximeter I purchased myself to monitor and adjust my nighttime sleep habits, and have incorporated my own series of stretches and pre-run exercises to open up my lungs. It’s all helped, but it’s been in spite of seeing a specialist rather than because of it. tl;dr welcome to healthcare in America.\nThe dietician, conversely, has been an incredible success. We instantly found an amazing rapport and have had monthly check-ups since to evaluate how things have been going to make tweaks as needed. She helped identify how lacking my protein intake was and gave me lots of options for increasing it, many of which my wife and I have seamlessly integrated. She’s also helped improve my fueling before runs and workouts, and best of all she soundly rejects diet culture which I deeply appreciate. Restriction simply doesn’t work; instead, we found a menu rotation that is working for me, and for everything else I try to approach it with mindfulness and intention (that helps a lot with the “oops I just ate an entire bag of chips while standing over my sink” incidents).\nThe physical exercise has also been incredibly successful, though it took a long time and was probably the most consistently frustrating. Exercise takes time and extended commitment, neither of which I had much of in April when work ate up a lot of my energy and every run was guaranteed to start with 15-20 minutes of simulated drowning. But around this time my wife and I started regularly incorporating 2x/week weightlifting sessions, the first time either of us had even entered a weightroom in years, to say nothing of multiple sessions each week. By August I’d added a third weekly session for my own areas of focus, and by September I was experimenting with a fourth (though that was very, very difficult to maintain consistently and so would tend to be “schedule permitting”). It took a LOT of intentional planning—and commitment to saying “no!”—to guard and protect my 3x/week weightlifting sessions AND 4x/week runs.\n\nStrava was able to see the consistency, starting in April.\n\n\n\nStrava’s fitness proxy. Note the sustained levels for the past 6 months.\n\n\nIt’s taken a long time, but:\n\nI stopped wearing my pulse oximeter back in August and haven’t had sleep apnea episodes since July.\nThe migraines also disappeared entirely around July.\nBy July, I’d started clocking longer runs than any in the previous 3 years.\nIn August, I could run 9 miles without walking.\nIn September, I could run 12 miles without walking, and at a faster pace than I ran 9 back in August.\nAlso in September, I could bench press multiple reps of over 200lbs in the middle of a larger superset.\nIn October, I ran Ath Half. While technically it is now my third-slowest half marathon time, I beat my April Savannah Women’s Half time by 18 minutes.\n\nI was deep in the middle of one of my longest weight sessions in years when I took this picture.\n\n\n\nMid lift session photo.\n\n\nNormally, I hate photos like this. Further, I don’t particularly like how I look. But I wanted to take this picture because, in the moment, I felt strong and powerful, sentiments I hadn’t felt toward myself in quite some time. It was one of the first times in years where I felt like I actually belonged in the weight room. I’ve only just started feeling like I belong with the other local runners, too.\nI still have bad days. My breath still occasionally catches and, for a moment, my lungs feel like they’re closing back up; maybe it’s some last vestiges of long COVID, maybe I inhaled some pollutant in the air (plenty to choose from), or maybe it’s in my head. I still get headaches that knock out entire swathes of a given day, though now they’re almost exclusively because of burnout recovery (a very “two steps forward, one step back” process), rather than apnea. Some days I just… push myself too hard, too fast, and I need to back off. My recovery periods are still longer than they used to be—whether this is long COVID related, burnout related, age related, or some combination of all of the above, I don’t know. I still get frustrated with how much slower I still am running than I used to be, in spite of the incredible progress I’ve made over the past 6 months. I still eat tortilla chips straight out of the bag while standing over the sink. I still look at my body in the mirror and critique it.\nBut even if I don’t get back to running 1:40 half marathons, I’m already back to sub-10 minute/mile half marathons. I’m already back to benching 220lbs. I’m consistently running 20+ miles/week. I’ve run almost 700 miles this year (on track for 800+!), complete with my first 100-mile month in years, after running 308 and 377 miles in each of the last two years. I’m stronger and healthier and happier than I’ve been in such a long time, and I’m so, so grateful for it.\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Rebuilding},\n  date = {2023-11-09},\n  url = {https://magsol.github.io/2023-11-09-rebuilding},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Rebuilding.” November 9, 2023. https://magsol.github.io/2023-11-09-rebuilding."
  },
  {
    "objectID": "posts/2017-01-06-gameify-your-raspberry-pi/index.html",
    "href": "posts/2017-01-06-gameify-your-raspberry-pi/index.html",
    "title": "Game-ify Your Raspberry Pi",
    "section": "",
    "text": "My project over the 2016 holiday season was to take the Raspberry Pi 3 I’ve had sitting around the house idling for the previous nine months and turn it into a RetroPie-ified gaming emulator.\nRetroPie is a phenomenal bit of software that combines the work of several projects into a single package that was primarily designed to be deployed on Raspberry Pis, but which can also be set up on a regular ol’ PC. If you’re using a Raspberry Pi, it’s built on top of the Raspbian OS, so all the commands familiar to you will still be available.\nI have to say up front: the folks with RetroPie have done an amazing job. The documentation was excellent, and while I’ll walk through the installation and configuration here, with only one notable exception everything went exactly as prescribed.\n\nRetroPie\nAssuming you have all the needed hardware, installing the RetroPie OS on your Pi is pretty straightforward.\n\nUse some sort of imaging software to write the RetroPie image to an SD card (I used ApplePi Baker without any problems, but you could also just use the dd command in the Terminal, which directly moves bytes from one place to another).\nInsert the SD card into your Pi.\nBoot! I had a few false-starts that were the result of the SD card not being fully inserted, so nothing came up.\n\nIf all goes well, you should see the wonderful Raspbian logo.\n\n\n\nConfiguring RetroPie\nThe first thing you’ll need to do when RetroPie boots is to configure whatever controller you’re going to use. I went out and purchased some standard-issue Logitech USB gamepads and they seem to be functioning very well. You can also use your keyboard if you want for this, but it pretty much has to be something that can be connected via USB directly to the Pi.\nA few pointers in this step:\n\nTo skip a particular button configuration, just press and hold any button for a second.\nIf you make a mistake in configuring a button, you have to get all the way to the bottom before you can scroll back up and fix it.\nIt took me 5-6 tries to get this completely right. Just go back and do it again if you mess something up.\n\n\n\nEmulationStation\nOnce you successfully configure a gamepad, you’ll be taken to the main landing page: EmulationStation.\n\nWhere are teh gamez0rz?!1, you might be saying. Well, since ROMs are a legal gray area, you’re kinda on your own there. BUT! We have something else we need to do first anyway: set up a network configuration.\n\n\nNetwork Configuration\nIf you have a Raspberry Pi 2 or earlier, your network choices are limited to an ethernet connection. With the advent of Raspberry Pi 3s, suddenly wifi is an option! Turns out, I have a 3, and it is this wifi that caused me a couple hours’ grief until I figured out what was going on.\nGo to the wifi configuration in EmulationStation. You’ll be taken to a network selection screen–protip, the Pi 3 cannot connect to 5GHz networks–where you can select your wifi network.\nYou’ll then need to type in the wifi password. Provided you get it right, that should be it! You’re all set to go!\nIf you find yourself entering your password again…and again…and again…and again…and can’t figure out why it’s failing, read on.\n\n\nKeyboard Layout\nFor whatever reason, my keyboard was misconfigured–the layout was set to English (U.K.), resulting in some special characters being remapped. However, since the Raspbian password interface echoes stars * back, I had no idea I was typing a completely wrong password until I fired up a command prompt.\nLuckily, once you diagnose this issue, it’s fairly easy to fix. Raspbian has a utility built-in for changing your keyboard layout. You just have to navigate in EmulationStation to the option that gives you a command prompt.\nIn my case, once I had a working network connection, I just used SSH to perform any other operations on the Pi (e.g. uploading new games). The default username/password for RetroPie is pi/raspberry, which I suggest you change either from the EmulationStation main menu, or after your first SSH login.\n\n\nMoonlight on Raspberry Pi\nYou should have a working RetroPie at this point, so that’s cool!\nHowever, as awesome as the Pis are, they’re not exactly brimming with horsepower. As such, if you try running N64 or PS2 emulators, you may find as I did that anything requiring 3D shaders gets very jittery, to the point of unplayable. RetroPie has detailed configuration options for every emulator to help you get the absolute most out of your Pi, but there are some things a tiny CPU with an embedded stock GPU just can’t do, and one of those is render 3D shaders the way they were meant to be.\nSo what? Give up? Nay!\n\nMoonlight Embedded is the open source version of NVIDIA’s GameStream as used by the NVIDIA Shield. Basically, it’s a way of streaming the output of an NVIDIA GPU to another input, like a TV.\nIn this case, we’re basically turning our Pi into a glorified Chromecast–it’ll take the output from a dedicated GPU and stream it directly to the TV it’s connected to. Yes, this means you’re not actually playing games on the Raspberry Pi–you’re playing them on whatever computer has the GPU in it (oh and it has to be an NVIDIA GPU, GTX 650 or higher)–but all Moonlight requires is Raspbian, which is what RetroPie is built on!\nI found this installation guide perfect (make sure you download the latest versions of everything!), with the lone exception that, just before downloading and installing Moonlight itself, I also needed to install one more library:\n    sudo apt-get install libenet-dev\nInclude that with the other libraries installed just before Moonlight, and everything else should just work. The rest of the instructions take you through configuring the gamepads so they correctly send their input back to the GPU (so, y’know, you don’t have to sit at your computer while staring at your TV).\n\n\nHappy Fun Times!\nYes, lots of happy fun times. But also HappyFunTimes!\nIf you’re really into the party games, installing this gaming server may be the best thing ever. It’s a brilliant setup: gamepads are HTML5 canvases that run on smartphones, essentially mimicking controllers so everyone with a smartphone can play. The games range from stupidly simple to shockingly sophisticated. I may post configuration for that later, but I figure: if you’re building the Ultimate Gaming Pi, why not include that, too?\nAnd with that, I give you the results at our house:"
  },
  {
    "objectID": "posts/2022-12-13-pardon-the-dust/index.html",
    "href": "posts/2022-12-13-pardon-the-dust/index.html",
    "title": "Pardon de dust (2)",
    "section": "",
    "text": "Why hello there. You may have noticed that things look a little bit different around here.\nI’m in the process of migrating my blog off Pelican and on to Quarto.\nWhy, you ask? Honestly, I got tired of having to fix a broken plugin or failed git push every. single. time. that I finished writing out a blog post. It gave an already-infrequent task an even higher activation threshold, and during a stretch where spare bandwidth was an incredible luxury.\nIn short: I’d really like to blog more often, and from what I’ve seen, Quarto will help me do just that. It definitely requires some extra bandwidth to get things migrated over, but fortunately: I have some of that at the moment :)\nStay tuned! In the meantime, please enjoy the above recent photo of Clover helping us put up our tree.\n\n\n\nCitationBibTeX citation:@online{quinn2022,\n  author = {Quinn, Shannon},\n  title = {Pardon de Dust (2)},\n  date = {2022-12-13},\n  url = {https://magsol.github.io/posts/2022-12-13-pardon-the-dust/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2022. “Pardon de Dust (2).” December 13,\n2022. https://magsol.github.io/posts/2022-12-13-pardon-the-dust/."
  },
  {
    "objectID": "posts/2024-05-13-weblogpomo2024-day-13-return-to-hiigara/index.html",
    "href": "posts/2024-05-13-weblogpomo2024-day-13-return-to-hiigara/index.html",
    "title": "#WeblogPoMo2024, Day 13: Return to Hiigara",
    "section": "",
    "text": "Today, Homeworld 3 went live. I’ve actually been playing the game since Friday, May 10, when backers of its original kickstarter got early access.\nI’ve been a fan of Homeworld ever since the first game came out in 1999 to little fanfare, despite garnering a much-coveted “Game of the Year” award for being among the first (or the actual first?) truly 3D real-time strategy games. Of course, that wasn’t its only credit: its beautiful and devastating story of an entire people who suddenly found themselves without a home, its haunting soundtrack (“Adagio for Strings” has always hit me differently, thanks to that game), and graphics that were remarkable for its time.\nWhile I may be among the few who enjoyed the maligned expansion Cataclysm (2000), I very very VERY much loved its sequel, Homeworld 2 (2003). Fast forward to the early stages of the pandemic lockdown in 2020 to the release of Homeworld: Remastered, which was among the best “remasters” of classic games (Homeworlds 1 and 2!) I have ever played. This came out around the same time as the Homeworld 3 kickstarter announcement, which I eagerly backed.\nOf course, at the time, the projected release date was Q4 2022. El oh el. Still, it’s clear from both official reviews and my own experience playing the finished game that the developers used the extra time to really lock down the polish.\nAs with every previous Homeworld game, it’s gorgeous. Jaw-droppingly beautiful. The soundtrack is, yet again, haunting, complete with modern “Adagio” renditions you can hear if you listen closely. And the story is gripping, always somehow managing to harness the vastness of space and imbue it with malign intent, and the only people you can rely on are your comrades-in-mothership.\nI won’t spoil anything, but I will post a few screenshots. These aren’t mine—I took a few from a screenshots channel in the Homeworld Discord—as I haven’t finished the game and know for a fact that some depict missions I have not yet encountered.\nIt’s a wonderful game. Highly recommend.\n\n\n\nDevs made good on promises to include actual megaliths.\n\n\n\n\n\nIt’s beautiful. Also, this mission is brutal.\n\n\n\n\n\nResource collectors harvesting materials inside a giant megalith.\n\n\n\n\n\nI have not reached this mission yet, but WOW does it look beautiful.\n\n\nAnd what gaming session would be complete without a little Tears of the Kingdom?\n\n\n\nSidon, my best friend.\n\n\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 13: {Return} to {Hiigara}},\n  date = {2024-05-13},\n  url = {https://magsol.github.io/2024-05-13-weblogpomo2024-day-13-return-to-hiigara},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 13: Return to\nHiigara.” May 13, 2024. https://magsol.github.io/2024-05-13-weblogpomo2024-day-13-return-to-hiigara."
  },
  {
    "objectID": "posts/2024-05-03-weblogpomo2024-day-3-mutter/index.html",
    "href": "posts/2024-05-03-weblogpomo2024-day-3-mutter/index.html",
    "title": "#WeblogPoMo2024, Day 3: mutter",
    "section": "",
    "text": "Today, as I was getting back up to speed on work (just in time for the weekend, lol) following travel in the first half of the week, I noticed…something.\nOccasionally, my command line would—for lack of a better term—“hitch”.\nIt became more noticeable as I would type faster; eventually I took to typing gibberish, and it became clear that there definitely was a hitch.\nA few minutes of searching (read: tweaking the search parameters, and filtering out “AI”-generated fluff), I found exactly what I was looking for: what is apparently a known issue with Ubuntu 22.04.4. The fix, aside from upgrading wholesale to 24.04 (not quite ready yet), was a new mutter install.\nI installed it and rebooted, and the hitch is gone. Thank you, internet!\n\nYeah, I missed #WeblogPoMo2024 yesterday, so I’m already behind. I’ll continue to do the best I can!\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 3: Mutter},\n  date = {2024-05-03},\n  url = {https://magsol.github.io/2024-05-03-weblogpomo2024-day-3-mutter},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 3: Mutter.” May\n3, 2024. https://magsol.github.io/2024-05-03-weblogpomo2024-day-3-mutter."
  },
  {
    "objectID": "posts/2023-01-23-mastodon-home-network-topology/index.html",
    "href": "posts/2023-01-23-mastodon-home-network-topology/index.html",
    "title": "Mastodon, Part I: My home network topology",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\n\nIntroduction\nPart I: My home network topology (this post)\nPart II: The Mastodon Helm chart\nPart III: Configuring and installing prerequisites\nPart IV: The waking nightmare that is Let’s Encrypt\nPart V: Actually installing Mastodon\nConclusions\n\nAdmittedly, this post in the series will be less “here’s how to spin up your own instance” than “here’s why I had so many problems that are specific just to me”, so if you have a solid handle on your own home network topology and/or are a DNS savant, feel free to skip this post.\nFor the rest of us mere networking mortals, let me walk you through a network hiccup that has been stymieing my attempt at an honest-to-goodness homelab kubernetes cluster for the better part of the last couple years.\n\nThanks a lot, Bezos\nDuring the height of the pandemic in summer 2020–and somewhat in preparation for the birth of our daughter–I performed some long-overdue home network upgrades. This included 1) switching over to fiber internet, and 2) upgrading to a mesh network, rather than the janky router-plus-extender setup that honestly never really worked all that well. The router itself was already 5+ years old (purchased when we first moved into the house), so it needed an upgrade anyway.\nAt the recommendation of some friends, I went with eero. Honestly, I’d still recommend it: it’s been rock-solid, with no problems between my Apple devices (MBP, iPad Pro, and iPhone), my wife’s Android+Windows devices (Surface, Pixels), and our myriad internet-of-sh!t devices strewn throughout the house. Literally zero problems, which I honestly can’t even say for our old router.\n…with, I suppose, one exception: putting the eeros into bridge mode.\n\n\nBridge mode is not what you think it is\nAs far as I’m aware, across all devices–from ISP modems to VirtualBox to Docker to home routers–the term “bridge mode” has a common intuition: it means the device that has been placed into bridge mode relinquishes any intelligent packet organizing methods it may have been using before and simply acts as a simple “bridge” between whatever entities it is connected to. As such, it doesn’t really care what those entities are, it just passes traffic between them.\nNot so with eeros.\nTo illustrate, here is what my home network looked like before starting any of this craziness.\n\n\n\nWhy yes, I did configure MoCA for my home mesh, thanks for asking.\n\n\nThis setup worked, except… see that Raspberry Pi cluster in the bottom left? That’s where I installed k3s for tinkering, but “tinkering” is pretty much all anything amounted to, because eeros have an odd limitation when it comes to port forwarding: they don’t allow IP-based service forwarding, or at least, service forwarding that is based solely on IP addresses; they also require MAC addresses. When dealing with ephemeral services created by kubernetes clusters on floating IP ranges, there aren’t associated MAC addresses with these services, which makes it impossible to use software-based load balancers like metallb, and therefore impossible to deploy multiple services that use similar configurations–like, say, multiple websites: Mastodon and something else.\nSo the first thing I had to do, were I to run my own instance, was to figure out a network configuration that would allow me to do IP-based port forwarding. I recalled that my old router had this ability, so I figured: let’s just pull that out of retirement and use it purely for port forwarding!\nFollowing was my first attempt. Note the major changes: the router has taken the place of the “main” eero as connecting directly to the ISP modem, and what was formerly the “main” eero is now just a wireless access point, connected to nothing except the router.\n\n\n\nMy first attempt at putting the eeros in bridge mode and un-retiring my old router.\n\n\nSuffice to say, this didn’t work. I mean, it kind of worked: the Raspberry Pi cluster was getting the right traffic forwarded to it. But seemingly random devices on the network would, suddenly and for no reason I could discern, disconnect and refuse to reconnect unless the entire network was rebooted.\nNot exactly a tenable situation. So I reverted to the previous configuration where the eeros were in charge while I tried to figure out what was going on.\nFast forward about 8 months. I finally, finally found this post on Reddit (because why would eero have it in their technical support documents?) from a couple years ago, with this critical element:\n\nApparently, even in bridge mode, there has to be at least one eero that can “see” the entirety of your home network (i.e., all incoming traffic should pass through it).\nThis… made absolutely no sense to me, as it directly contravened my understanding of “bridge mode”. But I went with it, and retooled my network to follow this new bit of information.\nHere was my next attempt. Like my previous attempt, the router is connected directly to the ISP model. However, unlike my previous attempt, what was the “main” eero in the original configuration–while still connected to the router–now sits between the router and the entire rest of the home network, rather than just the router and… whatever devices deign to connect wirelessly to it.\n\n\n\nMy final attempt at a network reconfiguration, this time putting one eero ahead of the rest of the home network.\n\n\nThis configuration, while still strange to me, officially works–or at least, it’s worked for the past few months with no issues.\n\n\nLoad balancers: green\nWith the issue of the k3s Raspberry Pi cluster being able to receive incoming traffic from the wider internet effectively resolved, I could now undertake the process of installing a Mastodon instance on the cluster with gusto.\nIn the next post, we’ll look at the Mastodon Helm chart in all its glory. Stay tuned!\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Mastodon, {Part} {I:} {My} Home Network Topology},\n  date = {2023-01-23},\n  url = {https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Mastodon, Part I: My Home Network\nTopology.” January 23, 2023. https://magsol.github.io/posts/2023-01-23-mastodon-home-network-topology/."
  },
  {
    "objectID": "posts/2023-07-10-upgrading-the-pi-cluster/index.html",
    "href": "posts/2023-07-10-upgrading-the-pi-cluster/index.html",
    "title": "Upgrading the Raspberry Pi Cluster",
    "section": "",
    "text": "An ode to time zones\n\n\n\nAs I write this up, I’m sitting in my SciPy hotel room. It’s a nice way to relax and unwind after a long day of travel and tutorials, but I also apologize for any timezone weirdness or general grammar or syntax errors.\n\n\nIn the seven months since standing up my own Mastodon instance, the Mastodon team has made quite a few releases. Up until last week, I was running 4.0.2, which had originally been released back in November 2022 when I started this crazy journey.\nI’d also been wanting to perform a hardware upgrade of the Pi cluster. The server rack I built back in mid-2022, while effective at protecting the cluster from toddlers, was a mess of cables on the inside: turns out, five stacked Raspberry Pi boards have a lot of associated cabling!\nMy plan for hardware updates included:\n\ninstalling power-over-ethernet (PoE) hardware-attached-on-top (HAT)s on each Raspberry Pi, so I could supply both power and networking through the ethernet cable\nrewiring the 3x Raspberry Pi case fans to be USB-powered, rather than depending on connections to the GPIO boards of each Pi\ndownsizing the power brick inside the server case\n\nThis all took quite a bit of work. And, oddly enough, the software was the easy part.\n\nUpgrading Mastodon\nThis was “merely” a matter of running an upgrade using the latest Helm chart from Mastodon’s repository. There was a minor wrinkle: the chart had been substantially updated from the one I used to install Mastodon back in December 2022. It has its own repository now!\nI had to carefully go through the chart I used to originally install Mastodon, and the new chart, to make sure I was correctly transferring old configuration values to the new chart. I really only made two mistakes in this process:\n\nI forgot to fill in the mailer configuration\nWhen specifying the tag, I first put “4.1.3”, instead of “v4.1.3” 🤦‍♂️\n\nFortunately, both were easy fixes. What was a bit trickier was the re-emergence of a well-known race condition in the database migration process. It took three separate re-starts of the upgrade process, but it eventually ran to successful completion, and my instance is now running 4.1.3!\n\n\n\n\n\n\nNote\n\n\n\nOf course, 4.1.4 was just released 3 days ago as of this writing. Of course.\n\n\n\n\nHardware Upgrades\nIf the software upgrades took a day, the hardware upgrades took a week.\nI mentioned I wanted to install PoE HATs on each Raspberry Pi so they could draw both their power and network connectivity from a single ethernet connection.\n\n\n\nHow many HATs does one person need?\n\n\nWhat I didn’t mention is: there’s more to it than that. To power devices using PoE, you also need networking hardware that is PoE-compatible. This meant replacing my standard 6-port unmanaged switch with a PoE-compatible switch.\nIt also meant upgrading from 6 ports to 8, since I also wanted to add a 6th Pi to the cluster—which, when you include the necessary port for connecting the switch to the rest of the network, means a minimum of 7 ports.\n\nTo start, I had to shut down and disassemble the Raspberry Pi cluster (which you can see in this post back in January). Here was the result, along with the 6th Pi I wanted to add:\n\n\n\nSo much pi(e).\n\n\nWith the Pi cluster itself out of the homemade rack, you can see the interior with all the rest of the cabling:\n\n\n\nCables cables everywhere but not an ounce of space.\n\n\nYeah. It was pretty crowded, even without the little stack of 5 Raspberry Pi boards. Clearing some of that out via PoE sounded really, really good.\nThe first step was to install the PoE HAT on each Raspberry Pi. Here’s a before shot:\n\n\n\nA standard Raspberry Pi 4B.\n\n\nAnd here’s what it looks like when I’ve installed a PoE HAT on it:\n\n\n\nA standard Raspberry Pi 4B, now with a PoE HAT on it.\n\n\nAs an aside: this adds a surprising amount of weight to the Pi! By itself it wasn’t all that noticeable, but once I’d re-stacked the Pi cluster, I was more than a little shocked by how much heavier it was! Something to keep in mind.\nThe server rack I built has three Pi case fans as intake, and previously these were powered by literally hooking them into the 5V GPIO pins of three of the Pi boards. Now that all the Pi boards had HATs on, their GPIO pins were entirely inaccessible. Which was fine, because I’d wanted to convert the intake fans to USB power anyway—I’d done this already for the two exhaust fans, which I had cannibalized from an old desktop RAM cooler.\nFun fact: these old RAM cooler fans were the same size as the Pi case fans, but for some reason were 12V fans (and USB is, by default, 5V), so I needed to leverage Ohm’s Law and buy a converter that upped the resistence in order to increase the voltage.\nFortunately, this was not the case for the Pi case fans: they needed 5V, and 5V is what any standard USB plug provides. All that was needed was some minor rewiring so the fan leads connected to the corresponding wires inside a USB cable. The end result looked something like this:\n\n\n\nSome minor surgery later and we have a USB powered fan!\n\n\nI could now plug all five rack fans (three intake, two exhaust) directly into a new and smaller power brick, courtesy of some USB-to-outlet adapters to help further compress the size.\n\n\n\nThere are two more USB outlets in the back of the brick.\n\n\nAll that was left at this point was to reassemble the Pi cluster. As I said, I was surprised by the sturdiness of six Pi boards with PoE HATs:\n\n\n\nBehold this fully armed and operational Pi cluster.\n\n\nIt took several days’ worth of spare time to get everything together, but I’m proud to say that when I plugged the power brick into the wall, every single light and fan turned on all at once.\nIt was beautiful.\nAnd mere minutes after, our Mastodon instance was back up and running, too! No commands or instructions needed on my part. Which is, frankly, impressive: as complex as kubernetes is, and as difficult as it can be to stand up applications in it, it’s remarkably robust once you’ve got it up and running.\n\n\nNext Steps\nI’ll probably just enjoy this for a bit 😀\nBut later, I’ll upgrade Mastodon again. On the hardware end, I don’t really have any additional ideas for the moment! Longer term, though, I have plans to move the Pi cluster into an actual homelab server rack (along with our home NAS, a full-sized home server, and all the networking equipment we have currently lying on the floor).\nBut that’s for another time 👋\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Upgrading the {Raspberry} {Pi} {Cluster}},\n  date = {2023-07-10},\n  url = {https://magsol.github.io/2023-07-10-upgrading-the-pi-cluster},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Upgrading the Raspberry Pi Cluster.”\nJuly 10, 2023. https://magsol.github.io/2023-07-10-upgrading-the-pi-cluster."
  },
  {
    "objectID": "posts/2023-05-09-thoughts-ahead-of-totk/index.html",
    "href": "posts/2023-05-09-thoughts-ahead-of-totk/index.html",
    "title": "My thoughts ahead of Tears of the Kingdom",
    "section": "",
    "text": "For those who aren’t following the increasingly unhinged ravings of my countdown bot on Mastodon, The Legend of Zelda: Tears of the Kingdom is coming out on Friday, May 12.\nAnd for those who’ve only heard in passing–or who have perhaps never heard–of the Zelda video game franchise: its latest installment is coming out this Friday, May 12, and the Zelda community is absolutely giddy with anticipation.\nI could wax historical over its 35 years and 20 different games spanning nearly a dozen (more than a dozen?!) different Nintendo consoles; I could swoon over its cultural impact, influencing other genres and changing, perhaps even unknowingly to many people, how game and puzzle creators approach their design; I could go on about the record-shattering success of its predecessor from 2017, Breath of the Wild, and how this is only the second time in the history of the franchise that Nintendo has made a direct sequel to a previous game; and I could blather on for.ev.er. on the established Zelda lore and all the branching theories that its rich storytelling has spawned.\nBut instead of doing any of that, I just want to put forward one small hope for the game: I really hope that the game opens with a playable Link getting the absolute snot beat out of him by Ganondorf.\n\nPersonally guide Link to his near-demise\nFrom the trailers, we know the game starts with our eponymous heroes stumbling upon Ganondorf, and something happens where they get separated, Link is grievously injured, and the Master Sword is damaged; here’s the part of the latest trailer where it happens.\nHere’s the relevant screenshot of it happening:\n\n\n\nThis should literally not be possible.\n\n\nIt’s horrifying on multiple fronts. We know it happens sometime near the very beginning of the game (setting the stage for the whole thing), and we also know—one small tidbit of Zelda lore—that it should not be in any way possible for the Master Sword to be damaged by evil. It just shouldn’t. So the fact that it is, is truly terrifying on its own.\nBut here’s where I’m hoping the game takes it up one more notch: I’m hoping that part at the beginning, where the questing heroes find Ganondorf and get their asses kicked, is fully playable.\nThere’s precedent for this, in fact it’s happened in at least a few games I’ve played, going back almost 20 years!\n\nQuake 4 (2005)\nYou play the part of a space marine from Earth tasked with helping push back an alien invasion. For most of the first part of the game, you’re working with your unit to sabotage one of the main “conduits” of the alien military that allows them to communicate and coordinate with each other. You’re eventually successful, but right after, a big bad thought killed in Quake 2 suddenly appears—very clearly alive—and you have to fight him.\nYou lose. You’re guaranteed to lose. But you still have to fight him. Not only that, but you have to stay alive just long enough to see how every strategy you’ve deployed up until this point fails in spectacular fashion. You can’t even dent the guy’s armor.\nOf course, what follows is a long cutscene involving a partial assimilation… it’s a neat sequence, but it requires a bit of a, uh, “constitution” for gore.\n\n\n\nThe Makron, from the player’s perspective.\n\n\n\n\nJedi Outcast (2003)\nYou play the role of Kyle Katarn, a mercenary-turned-jedi-turned-mercenary-again. In the pre-sequel-trilogy world, he’s actually the guy who stole the Death Star plans and got them to the Rebellion (Dark Forces). In the next game (Dark Forces II: Jedi Knight), Kyle discovers he’s force-sensitive and trains to become a Jedi. In doing so, he brushes so close to the dark side that he instead chooses to cut himself off from the Force entirely.\nThat’s where 2003’s Jedi Outcast picks up: he’s back to being a mercenary. One of his missions puts him in an Imperial research lab that appears to be trying to infuse objects with Force energy (think Force batteries). At the end of the mission, he runs headfirst into the Dark Jedi masterminding the whole thing, Desann.\nDesann promptly takes his partner hostage, and when Kyle threatens him with a blaster, Desann fires up his lightsaber and dares Kyle to take his partner back. That cues up a fully-playable fight.\nI mean, Kyle is a tried-and-true mercenary and at this point in the game has a pretty decent arsenal, too. But the fight is an absolute joke. Energy weapons? Desann just deflects with his lightsaber. Projectile weapons? He Force Pushes backwards and away from him. And explosives? He levitates back towards you. I don’t think it’s actually possible to land a single hit, but you still have to try, just so you can see how woefully inadequate you are when you bring a blaster to a fight with a fully-trained Dark Jedi.\n\n\n\nAn artist’s depiction of the fight at the end of the game, where you actually stand a chance of winning.\n\n\n\n\n\nAll I ask\nThat’s what I’m hoping for from Tears of the Kingdom: a chance to bring everything we stocked up from Breath of the Wild to the opening fight against Ganondorf, and to lose badly in spite of it all, driving home just how much badder this baddie is than the one we faced at the end of the previous game.\nIt’s hard to oversell just how overpowered Link was by the very end of Breath of the Wild (assuming your play style leans more toward Completionist than Speedrunner, of course); bringing all that might to bear as Tears of the Kingdom kicks off and seeing it just break like waves on the surf would be one hell of an opener.\nIt’d also be a cool bonus if our last completed Breath of the Wild game slotted into a new Tears of the Kingdom game so we started with exactly the same equipment, but I’m not married to that one.\n\n\nOh, and\nSpeaking just for myself: Breath of the Wild was a singularly amazing game, reminding me how much I love to explore and create just for the sake of exploring and creating (not just in video games, either). At the end of the day, I truly don’t care if the opening fight is playable or not. If the Nintendo team can bring that same wonder, that same reward for simple curiosity—kicking over that last rock just for the sake of seeing what’s underneath—then I’ll happily sink another [REDACTED] hours into it.\nTHREE. MORE. DAYS.\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {My Thoughts Ahead of {\\_Tears} of the {Kingdom\\_}},\n  date = {2023-05-09},\n  url = {https://magsol.github.io/2023-05-09-thoughts-ahead-of-totk},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “My Thoughts Ahead of _Tears of the\nKingdom_.” May 9, 2023. https://magsol.github.io/2023-05-09-thoughts-ahead-of-totk."
  },
  {
    "objectID": "posts/2017-03-16-so-you-want-to-conduct-research-with-me/index.html",
    "href": "posts/2017-03-16-so-you-want-to-conduct-research-with-me/index.html",
    "title": "So, you want to conduct research with me?",
    "section": "",
    "text": "Deviation #1: This is wholly separate from the “should I get a Ph.D.” question. For that I would recommend one of numerous guides that ask all the right questions.\nDeviation #2: This is also wholly separate from how to succeed in a Ph.D. program, though there is some overlap. In general, there are some key items to consider and habits to build as you work your way through a Ph.D., and for those questions I highly recommend Andrej Karpathy’s excellent survival guide to a Ph.D., some of which may be mirrored here.\nNo, the specific question I’m addressing here is how to succeed in graduate research as one of my students. In order of somewhat-importance:\n\n1: Familiarize yourself with my research interests.\nThis may seem like a no-brainer, but you’d be surprised how many emails I get from individuals expressing profound interest in working with me, only to see they have i) no experience whatsoever in any of my interests (which isn’t necessarily a deal-breaker!), and ii) don’t appear to know what I work on (which is a deal-breaker). If you work with me, you’re going to do something at the intersection of bioimaging + distributed computing + biosurveillance; something that involves computer vision and machine learning in a public health setting.\nCheck out my Google Scholar record, my group’s GitHub repositories, and my lab website to get at least a basic idea of the sort of work I do, and to jog your thinking along the lines of what you might be able to contribute.\n\n\n2: Take into consideration the following expectations.\nWork hard, play hard, and be able to talk about both:\n\nI expect my students to develop into excellent scientific communicators. In practice, this means I want you to be able to talk about your work to experts in the same field, experts in different fields, and even non-scientists. I want you to get comfortable giving talks and writing papers. If English isn’t your first language, that’s ok! Just be aware this expectation may take more time than you think.\nI expect my students to participate in Open Science. In practice, this means I want you to publish all the code you write in public repositories, mirror all your papers on arXiv, participate in and contribute to open source projects, and maybe even contribute to a blog. Research is only interesting when you can pick through the code, explore the data, and regenerate the results. Know or learn how to use scientific notebooks, version control, wikis, and even containers!\nI expect my students to demonstrate a promising slope of accomplishment. Put simply, I recruit for potential (slope), not experience (y-intercept). You don’t have to know everything about machine learning, statistics, and linear algebra, and be an expert programming in Python just to be able to work with me. However, I do expect that you will be able to pick up these skills very quickly.\nI expect my students to take ownership of their projects, pushing the envelope of what is known and beyond what even I would suggest.\n\nSpeaking of which…\n\n\n3: Prepare yourself to be a self-sufficient researcher.\nThis does NOT mean I expect you to do everything! The whole point of being a student is that you have a mentor, a supervisor who is (in theory) more experienced than you, from whom you can learn. It is indeed my job to guide you and teach you what I know, and I will most certainly do that.\nThis DOES mean that, by the end of your time here, I want you to be the expert on your project! You should take the project and run with it, rather than wait for me to tell you what to do next. Build your intuition about the problem through “moving fast and breaking things,” to use the tech startup parlance. Ask forgiveness rather than permission. Insert witticism here that basically says KEEP TRYING THINGS.\nEven as you start your project, you may come across roadblocks that I don’t have an answer for. That’s how research works: we’re pushing the limits of our collective knowledge! I may have some intuition from previous problems, and I’ll certainly share that, but asking me “What do I do next?” is going to frustrate both of us very, very quickly.\nHere’s another example: the levels of data science classes. You don’t have to be anywhere above Level 2 when you arrive (maybe you’re still working your way through Level 1!), but I expect you to work through Level 7 by the time you leave.\n\n\nIf you’ve made it this far, and are still interested…\n…then I encourage you to reach out to me and express your interest! I have just a few final pieces of advice:\nFirst, read this brief Twitter thread and this brief Twitter thread as well.\nNext, do NOT send me\n\na form email with a 10-page summary of your accomplishments (as I said, I don’t hire for y-intercept, I hire for slope)\nan email with misspellings or grammatical errors (recall that I emphasize good scientific communication skills)\na message that starts with “Dear Ms Quinn” (first, I’m a doctor; second, I’m a guy)\n\nI won’t respond.\nFinally, write an email that’s 3-5 sentences at most, with a specific mention of the work you find interesting and want to pursue further. For extra credit, mention some kind of improvement or extension to the work that you came up with on your own. This tells me a lot of things all at once, most important of which is that you’re serious about wanting to work with me.\nBecause if you can handle graduate school…\n\n…I really do believe you can handle anything."
  },
  {
    "objectID": "posts/2020-12-30-festivus-for-the-restivus/index.html",
    "href": "posts/2020-12-30-festivus-for-the-restivus/index.html",
    "title": "Festivus for the Restivus",
    "section": "",
    "text": "Warning\n\n\n\nContent warning: rough language ahead. You’ve been warned.\n\n\nJerry Seinfeld isn’t on board with Festivus this year.\n\nI get it, I do. And I respect it. But I’m gonna air me some grievances. My therapist has continued to insist that I do what I need and not to feel guilty about it, and right now I need to air some fucking grievances. So strap in folks; here we go.\nRunning has been a sick joke for most of this year. I’ve been logging miles with some kind of GPS watch since mid-2011, and 2020 has been the lowest-mileage year by a massive margin. For comparison, long-time readers may remember the boondoggles of 2015-2016 when I had metatarsalgia in my feet. Both those years, I still managed to tip the 1,000-mile scale. This year? 711 miles. Fuck that shit. Running wasn’t an escape; it was a fucking trap of preferring the evil I knew over the evil I didn’t.\nOf course, halting my running didn’t help much, either. I was still exhausted beyond all measures, and not just physically: mentally, emotionally, and grammatically burned. out. I managed a couple of walks most days, largely amounting to 10,000 steps or thereabouts, so I guess I met the minimum recommended daily physical activity threshold for the most part. But boy did running leave me stuck with the bill this year.\nOn the note of bills, let’s talk about how much help we’ve gotten in that area, shall we? As in, fucking none? We’d have gotten more tangible pandemic assistance if we’d wholesale replaced our Georgia state and US federal governments with fucking nail salons, as opposed to the leadership vacuums from Kemp, Congress, and the White House. Jesus goddamn tap-dancing Christ. Frank Underwood in House of Cards killed people, but he got things done in the process. These Republicans just… kill people; whether it’s because of willful incompetence or callous indifference I can’t say, but holy shit: literal poop-flinging monkeys could have accomplished more in their steads. You have to put forth actual effort to be this fucking ineffective. You wanted individualistic self-sufficiency? Well, this is what it looks like, fuckers: if you’ve already got money, you’re fine. If not, welp.\nI’ve felt a real kinship these past several months with Jeff Daniels’ Will McAvoy, particularly as he picks apart this fantasy of America being the “greatest country in the world.” What the fuck does that even mean? That we lead the world in COVID cases and deaths? That we’re so star-spangled awesome that anyone with an internet connection can be an armchair epidemiologist? That some so-called moderates are so concerned with curating their centrist appearance that they completely lose sight of the fact that not all (or even most) issues have two sides? That an entire political spectrum in this country has managed to openly flirt with becoming the very thing we fought a war against barely a century ago? That we’re so worried about giving anyone slightly more than they “deserve” that we’ll decimate public institutions, neglect infrastructure, and reinforce existing inequities, so that only the people who already had money will succeed? Are we really this collectively fucking stupid?\nTwitter is a fucking nazi cesspool. Facebook is even worse, and Amazon takes the cake for most unethical CEO. Google isn’t innocent, either: I’ve lost any respect I had for my former employer after they fired Timnit Gebru. Then I lost respect for luminaries like Jeff Dean after he doubled-down on some shady post-hoc justification that simultaneously made no sense and also revealed that Google has no collective interest in addressing its structural issues. Then, I lost respect for a number of current Googlers whose work I’ve admired over the years of following them since graduate school when they kept quiet over this whole thing. Meanwhile, Google is being hammered in EU antitrust courts and I frankly couldn’t be happier about it. I hope Facebook gets splintered into dozens of tiny pieces.\nCan I just say again–people who selectively listen to experts or “experts” because they confirm what said people already believed can go jump in this fire.\n\nSex work is work, and The West Wing really got this one wrong. Donna, in fact, had it right.\nSex and the City, for as much as it may have been ahead of its time in general, is super problematic around trans and nonbinary folks.\nI have to divorce J.K. Rowling the person from the author of the Harry Potter books, because she is doing literally everything possible to shit all over what is left of her legacy. I don’t know what her problem with trans people is, or why she’s so threatened by them, but she can likewise join the aforementioned people who listen only to the “experts” they already agree with.\nBrandon Sanderson doesn’t write books nearly fast enough.\nJames S.A. Corey doesn’t write books nearly fast enough.\nPatrick Rothfuss doesn’t write books nearly fast enough.\nOh yeah, a massive FUCK YOU to the folks I’ve been seeing on Instagram who don’t seem to realize COVID is a thing? Who keep gathering with more people than could possibly be in their pods? Who post pictures of themselves at gyms, bars, restaurants, group runs, and family gatherings for the holidays? They truly are the fuckwads from high school and college who would go off and party instead of working on the team project, difference being that when they invariably came back for the presentation, they’ll end up spontaneously combusting and killing both themselves, their teammates, and half their classmates. I’ve been aggressively un-following these dipshits because if they can’t think about anyone other than themselves in the midst of a global pandemic, why would I want to associate with them when the stakes are eventually more mundane? There are a lot of folks who’ve shown me exactly who they are during this pandemic and they’re not anyone I care to know once COVID is done.\nSERIOUSLY. A MODICUM OF LEADERSHIP WOULD HAVE PREVENTED THOUSANDS OF NEEDLESS DEATHS, YOU STAR SPANGLED CESSPOOLS.\nTelecommunications in the United States is a fucking travesty. In any other [western] country there are dozens of companies in close competition with one another. Here, we have what amounts to local monopolies on broadband, and an effective duopoly on cell providers. And this gets passed off as “innovation”? Our telecom industry is 20 years behind the rest of the world!\nThe Georgia Board of Regents: Governor Kemp’s cronies, or just that fucking incompetent? They couldn’t be bothered to implement a mask mandate back at the start of the first COVID surge until the entire university system was practically in a state of open rebellion. Rumor has it there’s really only a couple bad apples among them, but–in much the same vein as the United States Senate–the fact that a single moronic board member can bring everything to a screeching halt is a bug, not a feature. Ted Cruz can bring the Senate to its knees simply by virtue of his vapid tripe; he doesn’t also need a legal basis for his subversion of democracy.\nWear. A. Goddamn. Mask. Fuck.\nWhen did it become a feature of a functioning democracy to allow a decaying Confederate monument from Kentucky to singlehandedly decide the fate of any and all legislation that made its way to the US Senate?\nPerhaps the single biggest driver of my growing cynicism has been not the pathetic ineptitudes of our government leaders or even the disinformation being sown by talking heads making untold millions of dollars, but instead the seemingly smart, incisive, and compassionate individuals I knew before the pandemic (or even before the election of Trump) who have since turned into people I no longer recognize. Of course I realize the “change” was, in fact, there all along–it is only my perception that has changed. But it has been truly disheartening and enraging to see acquaintances, friends, and even family here in Athens and elsewhere in the United States who forward along conspiracy theories, repeat hate-filled talking points, and play the role of armchair epidemiologists in magnifying misleading or outright false information around COVID-19. From claiming that supplements can reduce severity of COVID symptoms, to somehow dismissing US oubreak numbers by equating them with China, and since “China’s numbers are fudged” therefore the US is doing just fine, to demonizing and even threatening the livelihood of health care workers for the crime of doing their jobs, to giving Trump credit for the rollout of the Pfizer and Moderna vaccines, to continuing to push back against and ignoring the advice of actual medical and public health experts.\n\nSeems reasonable, right? Until you include the surrounding context: this person initially claimed Trump should take credit for “Operation Warp Speed,” followed by a hand-waving rationalization of the slow vaccine rollout by blaming supply chain hiccups that come with large-scale product manufacturing. Ignoring, of course, that a vaccine has literally been the single goal of the entire US public health sector since January 2020; how the infrastructure for such a rollout wasn’t in place by the summer is a sin worthy of excommunication. But rather than admit as much, we get the above response.\nIt’s infuriating that we can’t just let the experts do their fucking jobs; instead, we have to stake out some pointless fucking pseudo-centrist landscape that doesn’t exist, for the purpose of… what? Appealing to the better demons of both sides? That would be reasonable, except for the small problem of one side being a highly imperfect conglomerate of diverse and often conflicting viewpoints, and the other side being a militaristic theocrat’s wet dream. But sure, states’ rights and framers’ intent and all that.\nOh, that reminds me: I am fucking DONE with originalism (yes, that goes for the Bible too). There is no 21st-century world in which the intentions of 18th century slaveholders would be remotely interesting, worth considering, or at all relevant. Much like how an argument of free speech is effectively a concession, an argument of framers’ intent is likewise an indication that your argument stands on the rhetorical equivalent of a sinkhole; continuing to scream “bUt ThE fRaMeRs!” only reveals your partisan / intellectual / insert motivated reasoning hackery here.\n\nOh, one final grievance. With all due respect to Bill Watterson: excessively positive people. In fact, we’ve even come up with a name for this: toxic positivity. Emphasizing the positive in a given situation, with the unstated assumption that said positives entirely cancel out all negatives. It’s been coming up a lot in the context of the pandemic: “well the pandemic has been bad but at least I haven’t had to see my boss as much!”, as if the two things were even remotely on the same playing field. Granted, it’s a specific incarnation of the more general ALWAYS LOOK ON THE BRIGHT SIDE mantra, but it’s important to understand that, as complex human beings, we are capable of holding more than one truth in our heads simultaneously.\n2020 is both the year Z entered our lives, and it can also die in a fucking fire. Both are true.\n\n\n\nCitationBibTeX citation:@online{quinn2020,\n  author = {Quinn, Shannon},\n  title = {Festivus for the {Restivus}},\n  date = {2020-12-30},\n  url = {https://magsol.github.io/2020-12-30-festivus-for-the-restivus},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2020. “Festivus for the Restivus.” December\n30, 2020. https://magsol.github.io/2020-12-30-festivus-for-the-restivus."
  },
  {
    "objectID": "posts/2023-02-15-calibrating-a-wildlife-camera/index.html",
    "href": "posts/2023-02-15-calibrating-a-wildlife-camera/index.html",
    "title": "Setting up a wildlife camera",
    "section": "",
    "text": "For years, I’ve been wanting to set up an outdoor wildlife camera. Somewhere in the PyImageSearch forums1 there’s a post from 2017-me remarking on how excited I am to have finally gotten my hands on an Nvidia 1080 Ti and, therefore, sufficient horsepower to chew up streaming video from outdoors.\nIn case some readers are unaware: Athens is a quintessential college town where, even if starting from the middle of downtown, you’re only ever at most 15 minutes from literal cow pastures. As such, encounters with wildlife are frequent and to be expected if you’re spending any decent amount of time here."
  },
  {
    "objectID": "posts/2023-02-15-calibrating-a-wildlife-camera/index.html#footnotes",
    "href": "posts/2023-02-15-calibrating-a-wildlife-camera/index.html#footnotes",
    "title": "Setting up a wildlife camera",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRIP.↩︎\nEvery few months, so not very often. The impressive bit here is that a 4.5lb rabbit could wake up two snoring humans through multiple walls and a closed door.↩︎\nWe assume. We didn’t have the camera in place to confirm, but we did hear numerous anecdotes from folks also suggesting the deer were weirdly ravenous and less fearful of humans that year.↩︎\nHopefully obvious understatement.↩︎"
  },
  {
    "objectID": "posts/2015-11-07-introductions/index.html",
    "href": "posts/2015-11-07-introductions/index.html",
    "title": "Introductions",
    "section": "",
    "text": "Well, this seems to be working. Kinda.\nI took some inspiration from Jake VanderPlas’ Pythonic Perambulations and opted for a similar route: Pelican as the backend blogging machine, github as the host, and (eventually) embedded Jupyter notebooks. Unfortunately, Jake’s addition to the Pelican plugins to allow Jupyter notebooks uses CSS that is, shall we say, unfriendly to Pelican themes outside of the Octopress default.\nSo that part is still incomplete. As are many of the links and some of the plugins. But ultimately, I’m hoping to use this to supplant my current pair of blogs that jointly detail what my plan for this space is: academia, general data science, and other musings.\nStay tuned!"
  },
  {
    "objectID": "posts/2023-02-24-installing-and-configuring-mastodon/index.html",
    "href": "posts/2023-02-24-installing-and-configuring-mastodon/index.html",
    "title": "Mastodon, Part V: Installing and configuring Mastodon",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\n\nIntroduction\nPart I: My home network topology\nPart II: The Mastodon Helm chart\nPart III: Configuring and installing prerequisites\nPart IV: The waking nightmare that is Let’s Encrypt\nPart V: Actually installing Mastodon (this post)\nConclusions\n\nHeyyy, we’ve finally arrived! Months and multiple blog posts later, here’s how to actually install a Mastodon instance on your k3s cluster of Raspberry Pi computers!\nhelm dep update\nhelm install mastodon ./ \\\n    --create-namespace \\\n    --namespace mastodon \\\n    -f path/to/custom/values.yaml\nThe dep update will pull down any new versions of the Bitnami charts needed to install the prerequisites we went over in Part III.\nThe install command creates an application called mastodon, using the templates in the current directory (hence ./), creates a new k3s namespace named mastodon for all the pods to occupy, and then the -f flag provides a path to the values.yaml file we customized back in Part II.\n\nIs that it?\nA lot of things are going to happen at this point.\nFirst, there a couple of pods that will appear as one-time “jobs”, the most notable (to me) of which is the precompile pod. This one in particular can take awhile… or maybe it was just because it was running on little Raspberry Pi SBCs; the 4Bs are certainly fast, but they’re still pretty resource-constrained by workstation or server standards, so be patient here. Just because it’s taking awhile for anything to show up doesn’t mean something is wrong.\nSecond, there is a db-migrate job that kicks off. Despite the name, this actually happens both if you’re migrating and if you’re installing Mastodon for the first time. For some reason, there’s a race condition among these initial one-time pods, and if the db-migrate job doesn’t kick off right when it’s supposed to, it may never happen; there’s an open ticket looking at this problem and a PR with a proposed fix that hasn’t yet been merged. It’s something to keep an eye on; there are manual fixes specified in the open issue (basically the pod equivalent of turn-off-and-back-on) that I had to employ at least a couple of times.\nFinally, there was an issue with sidekiq not properly registering the ingress task–kind of important for an application that relies heavily on ingress activity! But it required a very simple one-line addition to the values.yaml file, and it’s not even an issue anymore since this PR was merged back in early December 2022.\n\n\nYep, that’s it\nAnd that’s pretty much it! You should have a shiny new Mastodon instance up and running at this point (hit the ingress endpoint to check it out)! Your work as instance administrator is only just beginning, though–you need to check out all the options you have available in terms of setting up and configuring your instance (creating its welcome message and purpose, setting up how new accounts register, and importing any new emojis you might want), but in terms of command line kubernetes, with the exception of continued maintenance and occasional updates, that’s it!\nI’ll have a wrap-up post coming soon with more of my own thoughts on the whole process.\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Mastodon, {Part} {V:} {Installing} and Configuring\n    {Mastodon}},\n  date = {2023-02-24},\n  url = {https://magsol.github.io/2023-02-24-installing-and-configuring-mastodon},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Mastodon, Part V: Installing and\nConfiguring Mastodon.” February 24, 2023. https://magsol.github.io/2023-02-24-installing-and-configuring-mastodon."
  },
  {
    "objectID": "posts/2023-04-04-three-years-later/index.html",
    "href": "posts/2023-04-04-three-years-later/index.html",
    "title": "Three years later",
    "section": "",
    "text": "Oh by the way, I have a second blog.\nLike this one, it fell into disuse over the past few years. And like this one, I’ve been trying to revive it recently. I’d always intended for that blog and this one to be completely non-overlapping in their respective content, but life, as they say, finds a way.\n(Me. I’m talking about me, here. Of course the blog isn’t alive, jeez.)\nAt any rate, you most likely won’t see me advertise that blog here ever again, but just this once, I wanted to point to a post I made detailing my half marathon this past weekend in Savannah, GA, and the three-year history that particular event has.\nHere’s the link. Enjoy.\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Three Years Later},\n  date = {2023-04-04},\n  url = {https://magsol.github.io/2023-04-04-three-years-later},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Three Years Later.” April 4, 2023.\nhttps://magsol.github.io/2023-04-04-three-years-later."
  },
  {
    "objectID": "posts/2024-06-13-desolation/index.html",
    "href": "posts/2024-06-13-desolation/index.html",
    "title": "Desolation",
    "section": "",
    "text": "Warning\n\n\n\nContent warning: discussion of mental health struggles, burglary, and profanity.\n\n\nWhile in a fugue this afternoon, I dug through the day’s mail and came across the latest biweekly edition of the National Catholic Reporter, to which I have been a faithful subscriber for years; my wife affectionately calls it my “Jesuit rag.” I paged through it, not really paying much attention to the articles, but I stopped when I hit this one: “What ‘Bluey’ teaches us about times of spiritual desolation.”\nI momentarily shook off my fuzziness and read it. It hit like a punch to the gut (no shortage of those today, for some reason). This paragraph rammed it home:\n\nDesolation, as Ignatian spiritual director and writer Margaret Silf notes, is a spiritual state in which we turn in on ourselves, wallow in negative feelings and find ourselves cut off from community. We lose energy (Bandit spends the whole “TV Shop” episode looking for vitamins to give him an energy boost) and we lose sight of, and interest in, what’s important to us.\n\nI’ve always struggled with living in the present and it’s gotten a lot harder in the past decade. Having a kid has made it a mixed bag, though the guilt for realizing I was mentally elsewhere has dramatically increased.\nThe description for what I’ve been feeling is dead-on: desolation.\nI’ve been teetering between professional realities to some extent for almost 3 years now, at times unwilling to commit to a decision, at other times physically incapable. But this year will likely prove definitive, and it’s fucking terrifying. I’ve identified pros and cons, benefits and pitfalls; but there’s so much uncertainty that it becomes this all-encompassing buzz of anxiety that doesn’t quite rise to the level of drowning out everything else, but it’s close. It’s a dull roar with a strong muting effect, exhausting to the point of being very easy to give in until the dull roar is everywhere: a “lights are on but no one’s home” feeling. In a way, committing fully and finally would probably help! And if I’m really honest, I’ve already made a decision—I made it awhile ago—I just haven’t executed on it, not yet.\nSomehow, this professional waffling is only one dimension of the desolation that’s been buzzing in my ears.\nYesterday, I heard that while my mom was at home by herself recovering from foot surgery, someone broke into her home. Very fortunately, the intent didn’t seem to be violent; in fact, the person seemed like they were in the middle of a mental health crisis. In some twisted cosmic way, it was almost fortunate that my mom was home, as she is a trained social worker and trauma therapist; the police even commented on how well she’d handled herself. Meanwhile, I can’t help but think about how badly it could have gone; hearing my mom give me the blow-by-blow over the phone when I called her that evening filled me with an awful sense of violation, and a much bigger part of me than I’d like to admit would have preferred that she’d pressed charges.\nI received that news via text message while sitting in our vet’s office, listening to the vet tech tell us about the myriad medications we would need to start giving our 9+ year-old senior bunny, Clover (shown in the header photo of this post), to help her stay comfortable as arthritis and other age-related issues takes hold. My wife and I found Clover about half a mile down our street around Memorial Day 2015 during a run together. At the time, we were barely 6 months into our new jobs and location, and we still felt very lost and lonely—finding Clover, getting her taken care of, and welcoming this sweet and sassy bun into our family was one of the few signs that we were where we were meant to be. Finding ourselves nearing the other end is crushing.\nAfter getting home from the vet, I heard that UGA, through some mistake in its software or its processes (they’re always vague about things like this), overpaid me this past month and will be asking for some of the money back. This is the third time in three years that an administrative mistake has resulted in me either having to repay UGA out of my own pocket or never seeing promised money in the first place, and I am… well, I’m fucking furious. I have no recourse, because each of these failures happened somewhere in seventeen layers of bureaucracy, so no individual or group could ever take responsibility. Except for me, of course: since it was my budget mistakenly entered, or my grant mistakenly paid out, or my salary mistakenly given, it’s on me to make the university whole again.\nI’m seeing COVID rates start to increase again. Raging antisemitism has a stranglehold with people I once thought were allies and friends. Polls ahead of the November election in the US paint a dire picture of the potential outcome. A longtime and deeply meaningful friendship seems to have changed sometime over the past three years and I don’t know why.\nThere’s so much noise, so much desolation; all I want to do is turn inward. I know it’s self-defeating—the indecision is paralyzing, which makes any decision completely overwhelming, perpetuating the cycle—but I don’t know how to find that radical acceptance: being completely rooted in the present, for all its faults and uncertainties.\n\nI feel an overriding desire to wrap this post up on a positive note but right now I can’t find one, and doing so would be disingenuous. It’d be giving into the desolation by painting a sunnier picture than what actually exists, and in doing so, conveying the subtle but critical message that I don’t need anyone’s help.\nWhich isn’t true at any level, but holy shit is it difficult to admit: I can’t do this on my own. Even the decision of where my professional life goes from here is not one I can make unilaterally. Maybe some people can; I’m just not one of them. Even if I didn’t have an amazing partner and equal to bounce ideas off of who can see through my every rationalization and weak-ass defense, I’d still seek out the advice of my family, friends, and mentors.\nSo if there’s any positive ending to this post, I suppose it’s this: I know what I need to do, but I absolutely need help doing it. I can’t beat back the desolation on my own. “We’re all in this together” is something I readily say to everyone—and I mean it!—but I carve out an exception for myself. I’m trying to end that, to reach out when I can tell I’m not only in over my head but am actively digging myself deeper.\nOk, speaking of digging a hole, I lied. This is the positive ending.\n\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {Desolation},\n  date = {2024-06-13},\n  url = {https://magsol.github.io/2024-06-13-desolation},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “Desolation.” June 13, 2024. https://magsol.github.io/2024-06-13-desolation."
  },
  {
    "objectID": "posts/2021-12-30-back-in-action/index.html",
    "href": "posts/2021-12-30-back-in-action/index.html",
    "title": "Back in Action",
    "section": "",
    "text": "It’s been a day/week/month/year/decade, this 2021.\nI apologize for my long silence. Turns out, there are a couple of Pelican plugins that neither play nice with each other, nor with the steady march of upgraded Jupyter components.\nTurns out, two plugins I rely on–liquid-tags and pelican-jupyter–tend to nuke one another when used in parallel. Not surprising, given they both use the exact same underlying registration protocol for adding new liquid tags, so I guess the real mystery is how these two ever worked at all!\nNevertheless, I found that I either have Jupyter notebooks render in all their code-by-text-by-figures beauty, or embed images and videos. Couldn’t have both. After doing some searching and getting the distinct feeling that no one else really cared about the situation, I briefly considered switching static blog devices before regaining a shred of sanity and taking a second look: after all, since both plugins were using the same backend, surely I could jury-rig a solution where I smashed the two together and forced them to play nice?\nTurns out, that’s pretty much what I did, but with a crucial assist from the maintainer of the pelican-jupyter plugin. There’s an extra config I needed to suppress some of the more problematic CSS from the Jupyter notebooks (this fixed a very strange template error I was getting when compiling the blog), but I still needed a kludge to get the two plugins to even cooperate.\nI figured out that by copying two files from the pelican-jupyter plugin over to the liquid-tags plugin–specifically, core.py and liquid.py (though liquid.py had to be renamed to notebook.py after the move)–I could essentially merge the two plugins into one. I did have to make some changes to the liquid.py/notebook.py imports at the top, so they looked like this:\nfrom .core import get_html_from_filepath, parse_css\nfrom .liquid_tags import register  # noqa\nfrom .mdx_liquid_tags import LiquidTags\nso that they referenced the local versions of liquid_tags.py and mdx_liquid_tags.py (as they were essentially identical to the ones provided by the pelican-jupyter plugin).\nBeyond that, the relevant portions of my pelicanconf.py now looked like this:\nfrom pelican.plugins import liquid_tags\nPLUGINS = [\n        liquid_tags,                # regular ol' liquid tags\n]\n\nLIQUID_TAGS = [\"img\", \"include_code\", \"gram\", \"video\", \"youtube\", \"notebook\"]\n\nLIQUID_CONFIGS = ((\"IPYNB_FIX_CSS\", \"False\", \"\"), \n                  (\"IPYNB_SKIP_CSS\", \"False\", \"\"), \n                  (\"IPYNB_EXPORT_TEMPLATE\", \"base\", \"\"),)\nIt’s a bit odd, since I technically do have the pelican-jupyter plugin installed, but I haven’t imported it. Instead, I basically smashed it into the liquid-tags plugin, overwriting the “notebook” tag that was already there (it’s old, it sucks) and running with it.\nSo yeah! I’m back up and running. Have LOADS to talk about, so stick around!\n\n\n\nCitationBibTeX citation:@online{quinn2021,\n  author = {Quinn, Shannon},\n  title = {Back in {Action}},\n  date = {2021-12-30},\n  url = {https://magsol.github.io/2021-12-30-back-in-action},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2021. “Back in Action.” December 30, 2021.\nhttps://magsol.github.io/2021-12-30-back-in-action."
  },
  {
    "objectID": "posts/2024-05-10-weblogpomo2024-day-10-homelab-extravaganza/index.html",
    "href": "posts/2024-05-10-weblogpomo2024-day-10-homelab-extravaganza/index.html",
    "title": "#WeblogPoMo2024, Day 10: Homelab extravaganza",
    "section": "",
    "text": "For today’s #WeblogPomo2024, I wanted to delve a little more into my current Homelab setup, which I’ve only alluded to previously. The series of blog posts I wrote over a year ago detailing my journey setting up a home Mastodon instance was kind of the spark that started this whole homelab kick. I’ve since retrofitted an old desktop (after replacing it) as an Unraid server, and have a whole collection of applications already humming along.\nMy latest efforts have involved getting self-hosted Nextcloud] up and running… which is highly non-trivial. I’ve wanted off Dropbox for quite awhile now (I don’t use anywhere near the 2TB allocated in the base paid plan, but I definitely use a lot more than the 2GB allowed in the free tier… oh yeah and numerous privacy issues), but getting Nextcloud running has been a whole thing unto itself. It highlighted an entire hierarchy of reconfigurations and upgrades I needed to undertake across the broader homelab to make Nextcloud possible.\nIt’s also brought to the forefront the biggest philosophical question I’ve had: do I allow external access to Nextcloud, or restrict it to local requests only? Nextcloud is arguably designed for the former, but allows for the latter with some non-standard configuration changes. Obviously I’d like to keep external access to any homelab resources to an absolute minimum—if Mastodon is the only thing that’s externally accessible, I’m fine with that. But a filesharing service with an entire ecosystem of applications is not exactly meant to be confined to a small home network. Hence, my waffling.\nFor now, I’m going down the path of: keep it internal, but look at ways of allowing selective external access, along the lines of the Tailscales and Twingates of the world, both of which are compatible with Unraid. We’ll see.\nStay tuned!\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 10: {Homelab} Extravaganza},\n  date = {2024-05-10},\n  url = {https://magsol.github.io/2024-05-10-weblogpomo2024-day-10-homelab-extravaganza},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 10: Homelab\nExtravaganza.” May 10, 2024. https://magsol.github.io/2024-05-10-weblogpomo2024-day-10-homelab-extravaganza."
  },
  {
    "objectID": "posts/2024-05-01-weblogpomo2024-begin/index.html",
    "href": "posts/2024-05-01-weblogpomo2024-begin/index.html",
    "title": "#WeblogPoMo2024: BEGIN!",
    "section": "",
    "text": "It’s been two months (to the day!) since I last posted here. Not a long stretch, relatively speaking, but a respectable one. It’s been a busy couple of months to be sure, but if I’m honest I just haven’t been making time to write anything down. Not for lack of things to write—I feel like I’m always composing blog posts in my head—but working+parenting+running+sleeping typically seems to be a potent enough combination to push out all but the highest priority items that don’t fall in any of those buckets.\nEnter #WeblogPoMo2024, something I’d never heard of before seeing Henry post about it on Mastodon.\nSeems challenging while also reasonable: no 2000+ daily word count goal, no minimum running mileage to hit. Just a blog post. I may not finish it (I’d really like to finish an Advent of Code one of these years), but it’d be a nice goal to shoot for. I know from the multitude of early faculty writing workshops I’ve attended that, at least for me, the single most consistent motivator to write is to write with other people. The group accountability just works for me. So maybe it’ll work here, too!\nJoin me, won’t you? Or just bug me until I hit “post”.\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024: {BEGIN!}},\n  date = {2024-05-01},\n  url = {https://magsol.github.io/2024-05-01-weblogpomo2024-begin},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024: BEGIN!” May 1,\n2024. https://magsol.github.io/2024-05-01-weblogpomo2024-begin."
  },
  {
    "objectID": "posts/2018-01-19-new-years-resolutions/index.html",
    "href": "posts/2018-01-19-new-years-resolutions/index.html",
    "title": "Resolutions for 2018",
    "section": "",
    "text": "A solid three weeks late on the new year’s resolutions, but still a marked improvement over last year.\n(…I didn’t post resolutions last year…)\nI’ve been involved with a small faculty writing group since mid-December, with the expressed goal of helping its participants develop and sustain regular writing habits. Since any new resolution’s long-term success is pretty much exclusively contingent on whether or not a habit is formed, I’m also trying to eliminate some bad habits (since new habits are easier to form if they, in effect, take the place of the bad habits).\nSo without further adieu (and with a bit of inspiration from Dr. Albert), here are my 2018 resolutions:\n\nWrite and/or edit every single day (operationally I’m aiming for at least 30 minutes/day, 5 days/week, and go from there).\nBlog more frequently. Despite starting this cool pelican blog back in 2015 for the expressed purpose of basically doing what Jake VanderPlas does on his blog–but with my research–I have yet to really bring that idea to fruition. That changes this year.\nMake some progress on a few fun side projects!\n\nThere are quite a few side projects that have languished over the last several months (changing this blog’s layout was one). I’d love to actually finish one!\n\n\n\n\nCitationBibTeX citation:@online{quinn2018,\n  author = {Quinn, Shannon},\n  title = {Resolutions for 2018},\n  date = {2018-01-21},\n  url = {https://magsol.github.io/posts/2018-01-19-new-years-resolutions/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2018. “Resolutions for 2018.” January 21,\n2018. https://magsol.github.io/posts/2018-01-19-new-years-resolutions/."
  },
  {
    "objectID": "posts/2016-02-02-nsf-crii-reviewer-feedback/index.html",
    "href": "posts/2016-02-02-nsf-crii-reviewer-feedback/index.html",
    "title": "Reviewing a reviewed grant’s reviews",
    "section": "",
    "text": "Rejection in any context sucks. As a new faculty trying to prove himself (to himself, but most importantly, to his tenure committee), I particularly hate rejections in the context of grant proposals and paper submissions. The “nice” thing about the latter rejection is that it’s marginally easier to resubmit a manuscript elsewhere; there are more journals and conferences than ever, especially in computer science.\nLast September, I submitted a proposal in line with NSF’s 15-569 program solicitation: the Research Initiation Initiative in Computer and Information Science and Engineering.\nInsert jokes involving “initiation initiative” imagery here (sorry, I don’t have an avalanche of Advil).\nSomewhat unsurprisingly but nonetheless disappointingly, I received notification today that the proposal was rejected. I say unsurprising because the proposal itself was incredibly rushed; we hit “submit” about two minutes before deadline. It was my first major grant proposal, so there were bound to be some mishaps.\nSo: let’s get into the reviewer feedback!"
  },
  {
    "objectID": "posts/2016-02-02-nsf-crii-reviewer-feedback/index.html#conclusions",
    "href": "posts/2016-02-02-nsf-crii-reviewer-feedback/index.html#conclusions",
    "title": "Reviewing a reviewed grant’s reviews",
    "section": "Conclusions",
    "text": "Conclusions\nFor the vast majority of weaknesses, their immediate impetus can be summed up thusly: I started writing the grant the day before deadline. That’s a no-no, and contributed directly to the panicked flurry at the end and lack of detail in the proposal itself. Starting earlier will solve these problems.\nThe last point that genuinely concerns me, though, is the first reviewer’s comment on differentiating myself from my graduate advisors. It’s true that this proposal took work I started as a graduate student, and I agree that it’s important to build an independent research group such that I don’t have to rely on my graduate advisors for funding.\nBut I suppose I could boil this down to time constraints as well: given more elbow room, I could have provided a more detailed development plan that clearly differentiated itself from work done before. Rather than relying on the “we propose to extend…” mantra, I could have delved into much greater detail on the methods I’d wanted to use and why their application would be novel.\nSo there you have it: a review of grant reviews. Nothing left to do here but incorporate the feedback and push out more effective proposals in the months to come!"
  },
  {
    "objectID": "posts/2019-06-03-quinnwitz-in-ireland/index.html",
    "href": "posts/2019-06-03-quinnwitz-in-ireland/index.html",
    "title": "Quinnwitz in Ireland",
    "section": "",
    "text": "The Lady and I just returned from a 12-day trip to Ireland (with a stop at the very start in Kent, England, to visit some dear friends and their 6-month old twins!).\nI can’t begin to describe how incredible the trip was. It was one of those dreams you realize at some point you’ve been discussing with your significant other for years–quips here and there about “wouldn’t it be awesome to visit x” or “when we visit y someday…”. Ireland had been at the top of our list of international locations to see since years before we even got married, but it was always 5-10 years in the future, and never got any closer to reality.\nUntil that dear friend’s wedding in Bedford, England, in late summer 2017. At some point during some downtime in that long weekend, Ireland came up again in the same way it always did, but whether it was the international setting we were already in or some other twist of fate, The Lady suddenly said: “Let’s set a date.”\nThat day in August 2017, we set a tentative, but actual, date of May 2019. And we nailed it.\n\nOverview\nThe logistics of the trip were pretty complicated. First, we wanted to fly into London and spend a day visiting those friends of ours out in Kent. Next, we wanted to start our journey in Ireland by spending a few days in Dublin.\nFrom there, we wanted to hike in Wicklow National Park before spending a few days in Killarney, exploring the Ring of Kerry (important note: not a “ring” as in a piece of jewelry).\nFinally, we wanted to drive to Galway and spend a few days there, before returning to Dublin and flying back home.\ntl;dr A travel agent will make your life a lot easier when your international travels have a lot of moving parts.\n\n\nThe Emerald Isle\nThe country was seriously amazing. Ireland is the most incredible combination of different landscapes and ecosystems all coexisting side by side; driving from Dublin to Killarney to Galway and back will show multiple distinct countrysides that change seamlessly yet suddenly.\nWithout further adieu, I’ll post some of my favorite pictures here from the trip.\n\nIn front of the Oscar Wilde statue in Dublin.\n\nThe Guinness Storehouse in Dublin.\n\nIn the Book of Kells exhibit at Trinity College in Dublin.\n\nAt Wicklow park, before a 9-mile hike.\n\nAlso Wicklow park, about halfway through the hike.\n\nRunning the Gap of Dunloe in Killarney.\n \nThe Lady and myself running in the Gap.\n\nThe Lady meets an adorable Irish wolfhound during our Ring of Kerry tour.\n\nCoastline stop along the Ring of Kerry tour.\n\nWe met a very friendly regular at the Secret Garden in Galway.\n\nSitting in the main square at Galway.\n\n\n\n\nCitationBibTeX citation:@online{quinn2019,\n  author = {Quinn, Shannon},\n  title = {Quinnwitz in {Ireland}},\n  date = {2019-06-03},\n  url = {https://magsol.github.io/2019-06-03-quinnwitz-in-ireland},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2019. “Quinnwitz in Ireland.” June 3, 2019.\nhttps://magsol.github.io/2019-06-03-quinnwitz-in-ireland."
  },
  {
    "objectID": "posts/2016-05-16-autopost-running-twitter-summary-strava/index.html",
    "href": "posts/2016-05-16-autopost-running-twitter-summary-strava/index.html",
    "title": "A twitterbot for posting weekly running stats",
    "section": "",
    "text": "We runners (we’re a crazy bunch), for the most part, like our stats. How many miles do you log each week? Each month? How are your average race paces trending? Are your long runs both feeling good and getting faster?\nYes, we’re a little obsessed with our numbers.\nIt’s no surprise, then, that web services have popped up to help us aggregate some of these numbers. One of the most obvious is Garmin Connect, home for pretty much anyone who uses the Garmin GPS watches.\nAnother that I’ve used before is Daily Mile. However in recent months I’ve become frustrated enough with the site to leave entirely. By all accounts, no part of the site has been updated in years, and other alternatives are simply much more pleasant to use.\nUnfortunately, there was one crucial feature of Daily Mile I really liked: connecting it to your Twitter account to post weekly summaries of your recorded workouts. I liked it so much, in fact, I created a small web service to do the same thing, but for monthly summaries:\n\nObviously that service no longer exists, but ever since I’ve been wanting to get something similar up and running again. Especially now that I don’t even have weekly summaries anymore–just couldn’t stomach Daily Mile any longer–I wanted to take the opportunity (and the shiny new blog) to go through a step-by-step procedure of creating your own Twitter / Strava app for posting weekly summaries on Twitter of your running mileage!\n\nPreliminaries\nA few things you’ll need before we get started:\n\nPython 3.5\ntweepy (for interfacing with Twitter)\nstravalib (for interfacing with Strava)\npybot (shameless plug, but it will help)\n\nBoth Twitter and Strava use OAuth as their method of app authentication. These libraries just make it easier to interact with the services; they abstract a lot of the details of authentication and communication.\nBut in case you’re interested: Twitter’s docs and Strava’s docs.\n\nStep 1: Create a Strava app\nGo to your user settings and create an app that can interface with your account. Important pieces of information you’ll need later: Client ID, Client Secret, and Your access token.\nWe can test if it works. Fire up an IPython terminal, get your access_token, and run the following code:\n    from stravalib import Client\n    client = Client(access_token = access_token)\n    client.get_athlete()\nYou should see something along the lines of:\n    Out[]: &lt;Athlete id=1234567 firstname=b'Firstname' lastname=b'Lastname'&gt;\n\n\nStep 2: Retrieve last week’s data\nThe whole point is to get weekly mileage reports. Thankfully, the get_activities method in stravalib has an after optional parameter we can use to precisely tune what time interval we want.\nFirst, though, we need to create a timestamp that represents the 1-week time frame. If we assume this will only be executed on the day we want the summary–say, every Monday–then we need to tally up all the runs from the day before all the way back to the previous Monday, inclusive.\n    import datetime\n    current = datetime.datetime.now()\n    last_week = current + datetime.timedelta(weeks = -1)\n    after = datetime.datetime(last_week.year, last_week.month, last_week.day)\n    activities = client.get_activities(after = after)\nAssuming we run this chunk of code on a Monday, it should give us every Strava activity from the previous Monday up to the present.\nHowever, we’re not done yet. This includes everything–not just our runs, but any other activities that we recorded; yoga, weights, elliptical, and so on. We need to filter these out. We also need to filter out the edge case of any activities that have been recorded today, since we don’t want to include these in a report of last week’s activities!\n    l = [activity.id for activity in activities if activity.type == 'Run' \\\n        and a.start_date_local.day != current.day]\nOk, let’s pause and discuss what’s happening here.\nFirst, the most obvious: we’re looping through the activities generator we obtained in the last line of the previous step. Second, the if statement at the end filters out any activities that aren’t a run. Finally, the activity.id part out front says, we’re building a list of the unique IDs that identify each activity. The last part is our timeframe edge case: if we recorded an activity today, even a running activity, don’t include it.\nWhy are we only holding onto the IDs? It has to do with detail. Strava maintains a hierarchy of details available to users that vary with authentication, connection, etc. Simply put, when we request a list of activities, the default detail level is 2, which is “summary” level. However, some of the metrics we need–calories in particular!–require level 3, or “detailed”. To get this level of detail, we need to query for individual activities…one at a time.\nHence, a list of activity IDs! Now we can loop through the IDs, requesting details on each run and tabulating up the mileage and calories.\n    from stravalib import unithelper\n\n    mileage = 0.0, calories = 0.0\n    for activity_id in l:\n        activity = client.get_activity(activity_id)\n\n        # This is annoying; all the default distances are in meters! Luckily,\n        # stravalib comes with a nice unit helper utility to do the conversion.\n        distance = unithelper.miles(activity.distance)\n        mileage += round(distance.num, 2)  # Rounds to 2 sig figs.\n        calories += activity.calories\nThere you have it! In those two variables–mileage and calories–you have all the data you need to summarize your running workouts for the last week. Now we just need to post this information on Twitter!\n\n\nStep 3: Create a PyBot\nOk, time for a shameless plug: yes, I’m the pybot author. It’s still highly experimental, and largely uncompleted, but for our purposes it will suffice nicely as a barebones framework to interact with Twitter.\nClone the repo and follow the setup script to create a Twitter app and connect it to your account.\n    git clone https://github.com/magsol/pybot.git\n    cd pybot\n    sbin/create_pybot.py\nThat will walk you through the instructions for creating an app, generating OAuth credentials, and stubbing out your first pybot. Feel free to give it whatever name you’d like; for the purposes of this tutorial, I’ll assume we’ve named it artbot (don’t ask). Congratulations! You’ve created a twitter bot!\n\n\nStep 4: Customize the bot’s behavior\nOur bot is pretty simple: every Monday at some specified time, it will wake up, read all the prior week’s running activities, and post the summary before going back to sleep for another week.\nIt won’t be prompted by anything other than time. So the specific action override we’re looking for in PyBot parlance is on_tweet, and the interval we’ll use is tweet_interval. The latter is easy enough–a full week between tweets!\n    self.config['tweet_interval'] = 60 * 60 * 24 * 7\nBefore we go any further: does anyone see anything wrong with the above code snippet?\nI’ll give you a hint: imagine you started this bot on a Tuesday, instead of a Monday.\nYep, there it is. This interval we’ve defined is exactly 1 week, but it doesn’t account for when we actually START the bot. We need this to be a little more intelligent. If you want the posting to happen weekly every Monday, it shouldn’t matter when you actually start running the bot, right? It should be smart enough to figure out when it needs to post for the first time, then post weekly thereafter.\nA neat component of PyBot is that, in addition to giving hard time frames, you can also specify functions to compute the interval on-the-fly, subject to some other constraints that are dynamic (like on what day of the week you happen to fire up the bot).\nTo make things easy on us, we’ll use the datetime convention in the Python documentation for identifying individual days of the week. This tutorial assumes Mondays (which corresponds to 0), but you can use whatever value you want.\nWe need to store this as a configuration parameter in the bot.\n    # Put this somewhere in the bot_init() method\n    self.config['update_day'] = 0  # Corresponds to Monday.\nNow, we need a function to compute the interval between updates.\n    # Put this somewhere in the bot_init() method\n    self.config['tweet_interval'] = self._compute_interval\nWe’ve referenced an internal method we’re calling _compute_interval, as of yet undefined. Let’s go ahead and define it!\n    # Put this somewhere in the bot class declaration\n    def _compute_interval(self):\n        interval = 60 * 60 * 24 * 7  # The default interval; we'll start here\n\n        # Are we on the right day of the week?\n        now = datetime.datetime.now().weekday()\n        target = self.config['update_day']\n        if now == target:\n            return interval  # Nothing to do! Yay!\n\n        # If we get to this point, it means the index of the current day--\n        # as in, right when the code gets HERE--doesn't match the index of the\n        # day we've said we want to perform this update. So we need to do a\n        # little bit of work to compute that date.\n\n        if now &gt; target:\n            # This is a hack, so the index of the CURRENT day will always be\n            # smaller than the index of the TARGET day.\n            now -= 7\n\n        # Essentially, all we've done is replace the 7 above with whatever\n        # it needs to be in order to get us to our target day.\n        return (target - now) * 24 * 60 * 60\nNow that our interval is in place, we’ll need to override the on_tweet action to do what we want whenever it’s called (which will be once each week on the day we’ve specified!). Remember, this method is called once we’ve hit our interval. So this is where it all comes together!\n    def on_tweet(self):\n\n        # First, pull in the stats from Strava.\n        current = datetime.datetime.now()\n        last_week = current + datetime.timedelta(weeks = -1)\n        after = datetime.datetime(last_week.year, last_week.month, last_week.day)\n        activities = client.get_activities(after = after)\n\n        # Second, filter by activity type and time frame.\n        l = [activity.id for activity in activities if activity.type == 'Run' and\n            a.start_date_local.day != current.day]\n\n        # Third, tabulate up the stats for mileage and calories.\n        mileage = 0.0, calories = 0.0\n        for activity_id in l:\n            activity = client.get_activity(activity_id)\n            distance = unithelper.miles(activity.distance)\n            mileage += round(distance.num, 2)  # Rounds to 2 sig figs.\n            calories += activity.calories\n\n        # Finally, use the stats to craft a tweet. This can be any format\n        # you want, but I'll use the example one from the start of the post.\n        tweet = \"My training last week: {:d} workouts for {:.2f} miles and {:d} calories burned.\".format(len(l), mileage, calories)\n        self.update_status(tweet)\nThat’s it! You have everything you need; now, just set the bot to run ad nauseum:\n    python artbot.py\nIt should run forever, sleeping for most of it but waking every week to post your summary. If you notice something isn’t working right, check the logs; they should specify if there are problems e.g. with permissions posting to Twitter, or connections hanging and disconnecting.\n\n\n\nConclusion\nThat’s all there is to it! There are obviously a lot of technical hurdles I largely glossed over–creating the apps for both Strava and Twitter can be a little more involved than the average person would like, and Python versions (especially 2.x vs 3.x) can wreak havoc on your code. I tried to be as reproducible as I could, though until Jupyter notebooks decide to play nice with Pelican (or maybe the other way around?) these code embeddings will have to suffice. Sigh.\nPlease feel free to leave a comment if you have any questions! I’ve also posted the bot in the examples folder in the pybot GitHub repository as artbot.py. Happy tweeting!"
  },
  {
    "objectID": "posts/2024-12-04-december-adventure-2024-edition/index.html",
    "href": "posts/2024-12-04-december-adventure-2024-edition/index.html",
    "title": "December Adventure, 2024 edition",
    "section": "",
    "text": "Geez but I have a backlog of posts to write. Yeah, I’m back. Been a bit! I’m sorry for the radio silence over here these past nearly-six months; it’s been anything but dull, that’s for sure. While there is plenty of catching-up to do, for now that’ll have to wait: instead, I want to discuss this year’s December Adventure!\nFor those who don’t know, December Adventure is something cooked up as a more DIY alternative to Advent of Code. The spirit is the same—basically, work a little bit each day of December—except instead of following a coding and problem solving script, the goal is entirely up to you. I took a stab at this last year and was marginally successful, so I figured I’d take another stab at it this year.\nClearly, I’m off to a mediocre start, given that it’s December 3 and I’m only just posting about it now. But I’m hoping by kicking this snowball down the hill, it gives me some momentum. Or maybe I’m just off in fantasy land.\nFortunately, I have a project in mind: creating a LAN-wide reverse proxy for my homelab!\n\nMotivation\nIn the past couple years, I’ve really taken to the DIY homelab mentality. In addition to setting up and running my own Mastodon instance for the past two years, I also set up an Unraid box after converting my old home desktop I built in 2015 (which was still perfectly functional!) to a decently powerful server. With endless news cycles about the death of privacy online, I wanted some corner of the internet to be fully under my own control.\nHowever, between the external-facing Mastodon and a growing number of internal services (JellyFin, wildlife cameras, photo albums, and an eventual NextCloud instance), it’d be really nice—if not outright essential, in the case of NextCloud—to not have to remember IP addresses and ports, and instead just type something like https://jellyfin.local.our-home.domain.\nI already have a Traefik reverse proxy running on my 6-node Raspberry Pi k3s cluster, but all it does at the moment is serve up requests for the Mastodon instance (which it is also running). My goal this December Adventure is to reconfigure this reverse proxy to serve all my internal services.\nI even created a thread about this over at the Traefik forums, but it has yet to receive any kind of response. So if you know anything about reverse proxies, feel free to drop a line there!\nI’d also started collaborating with a fellow Mastodon user in the Discord over the summer, but he’s since dropped off and I haven’t been able to follow up. I posted a few issues on his config so we could compare notes, but I’ve yet to hear anything from him, so it seems like I’m on my own.\nEverything I’ve heard and seen so far seems to fall into one of two camps: 1. Here’s how to create a reverse proxy on Docker Compose! 2. Here’s how to create a reverse proxy for services that all run on your kubernetes cluster!\nWhat I’m trying to do differs in that I want the reverse proxy to run on my kubernetes (k3s) cluster, but to have it connect to services that may or may not run on the same cluster, and may in fact be running on physically separate machines (the traefik community post has these details).\nThis would not only make my life easier as the number of internal LAN services grows, but would allow me to get NextCloud up and running (as it requires its own DNS entry).\n\n\nSub-goals\nIn addition to the main objective of reconfiguring my Traefik instance as a reverse proxy for multiple internal services, there are a few other things I’d like to do.\n\nSet up a wildcard DNS certificate for internal services. This will let me add SSL to everything! I already have Cloudflare as my DNS and certificate provider, so this shouldn’t be too much of a hassle.\nInstall internal NextCloud. I’ll probably run this on my Unraid server since NextCloud seems to be a pretty beefy application (i.e., beyond what little Raspberry Pis might be able to handle). I don’t want it to be externally accessible, but it still needs a domain name, hence the dependency on the reverse proxy.\nMove kubernetes cluster configuration to a repo. This is a bit of a meta-goal, as it involves some additional subtasks. But the gist is that my kubernetes configuration is currently a glorified shell script, and that absolutely needs to change. I’ve toyed in the past with putting everything into Ansible, but I think to start I just need to separate out the helm charts for each application and put them under version control so they can be more easily updated and maintained. I already have an internal forgejo repository running so I could even just use that, though once again the reverse proxy will dramatically simplify its use.\n\n\n\nOther\nOh, and I’d also really like to try and build a Magic: The Gathering deck around this card.\n\n\n\nA really neat unofficial Magic card created by the folks at GamersNexus after their “CEO”, Snowflake: a beautiful orange tabby. And yes, that is nail polish on my thumb; hashtag dad life.\n\n\nIf you’re interested in computer hardware you should absolutely follow GamersNexus on YouTube. But they’re also just good, decent people. They’re based in North Carolina and recently did a big fundraiser following Hurricane Helene for three of the local charities (including an animal rescue). One of their newest products is a box of gaming dice, and this particular model came with a custom-made Magic (-like) card (because Steve loves D&D and Magic) of his cat Snowflake (the art was done by his mom! so cool!), and now I’m obsessed with building a Cat deck around this card.\nI found this promising white-green Cat deck that I might use to start out, but if anyone knows of any other TappedOut / MtgGoldfish builds along these lines, please send them my way!\nHappy December Adventuring!\n\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {December {Adventure,} 2024 Edition},\n  date = {2024-12-04},\n  url = {https://magsol.github.io/2024-12-04-december-adventure-2024-edition},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “December Adventure, 2024 Edition.”\nDecember 4, 2024. https://magsol.github.io/2024-12-04-december-adventure-2024-edition."
  },
  {
    "objectID": "posts/2018-06-19-einsum/index.html",
    "href": "posts/2018-06-19-einsum/index.html",
    "title": "An einsum use-case",
    "section": "",
    "text": "Recently I’ve been working with some of my students on a paper for the SciPy Conference related to our OrNet project. Part of this involved designing our own Gaussian Mixture Model (GMM). In doing so, I somewhat accidentally-on-purpose stumbled upon the beauty of einsum. So I wanted to briefly motivate its use (expanding upon the short use-case I wrote on my research group’s blog) and show the performance results of re-implementing iterative computations using einsum.\n\nGaussian Madness\nOne of the critical steps of this algorithm is to evaluate the probability of any given point \\(\\vec{x}\\) under the model that we’ve learned so far (the current values of \\(\\vec{\\mu}\\) and \\(\\Sigma\\). In higher dimensions (as in, higher than 1), this has a pretty tricky formula:\n\\[\nP(\\vec{x} | \\vec{\\mu}, \\Sigma) = \\frac{\\exp{(-\\frac{1}{2}(\\vec{x} - \\vec{\\mu})^T \\Sigma^{-1} (\\vec{x} - \\vec{\\mu}) )}} {\\sqrt{(2 \\pi)^2 \\det{(\\Sigma)} }}\n\\]\nIt’s…messy. The things that make it particularly tough to efficiently evaluate include:\n\nthe matrix multiplication in the numerator\nthe inversion of \\(\\Sigma\\) in the numerator\nthe determinant of \\(\\Sigma\\) in the denominator\nthe fact that this has to be computed for every \\(\\vec{x}\\) (thousands), under every combination of \\(\\mu\\) and \\(\\Sigma\\) (often a few dozen), at every iteration of the algorithm (often a few dozen)\n\nBut wait! That’s not all!\nAlso critical to the GMM are the update steps: re-estimating the current values of the parameters so they (hopefully) better fit your data. This happens a lot!\nIn multidimensional wonderlands, the updates of the parameters look something like this:\n\\[\n\\vec{\\mu}_{ki} = \\frac{1}{N_k} \\sum_{n = 1}^N r_{kn} \\vec{x}_n\n\\]\n\\[\n\\Sigma_{ki} = \\frac{1}{N_k} \\sum_{n = 1}^N r_{kn} (\\vec{x}_n - \\vec{\\mu}_{ki})(\\vec{x}_n - \\vec{\\mu}_{ki})^T\n\\]\nThe first equation for \\(\\vec{\\mu}_{ki}\\)–the \\(k^{th}\\) component (one of the 50-100) at the \\(i^{th}\\) iteration (often at least a few dozen)–is a “fairly” easy multiplication of each data point \\(\\vec{x}_n\\) by some number \\(r_{kn}\\), all summed up and scaled by \\(\\frac{1}{N_k}\\).\nThe second equation is a lot harder.\nFor every \\(\\vec{\\mu}_{ki}\\) we have a corresponding \\(\\Sigma_{ki}\\). Which, remember, is a full matrix. This involves taking the \\(\\vec{\\mu}_{ki}\\) we computed in the first equation, and computing outer products with every data point \\(\\vec{x}_n\\).\n“Outer product” is a fancy name for “matrix multiplication”!\n\n\nBring on the Code\n\n\nCode\nimport numpy as np\nimport scipy.linalg as sla\n\n\nSo of course, I initially implemented these two core operations in the way that made the most sense: using numpy functions and Python comprehensions.\nFor computing \\(P(\\vec{x})\\):\n\n\nCode\ndef px1(X, mu, sigma):\n    det = sla.det(sigma)\n    inv = sla.inv(sigma)\n    p = np.array([(x - mu).dot(inv).dot(x - mu) for x in X])\n    n = 1 / ((((2 * np.pi) ** 2) * det) ** 0.5)\n    px = np.exp(-0.5 * p) * n\n    return px\n\n\nAnd for re-computing \\(\\mu\\) and \\(\\Sigma\\):\n\n\nCode\ndef musig1(X, r):\n    N = r.sum()\n    mu_next = (r[:, np.newaxis] * X).sum(axis = 0) / N\n    \n    s = np.zeros(shape = (X.shape[1], X.shape[1]))\n    for x, ri in zip(X - mu_next, r):\n        s += (np.outer(x, x) * ri)\n    sigma_next = s / N\n\n    return mu_next, sigma_next\n\n\nThese were computational bears. In px1, the line starting p = ... is a huge computational cost: doing two dot products inside a loop over all the data points \\(\\vec{x}_n\\) is really, really expensive.\nAnd in musig1, the operation to compute the next value of \\(\\Sigma\\) involves computing the outer product of every \\(\\vec{x}_n\\) subtracted by the current value of \\(\\vec{\\mu}\\).\nSuffice to say, when it came time to actually run the algorithm, it shouldn’t come as a surprise that, with a dataset of roughly 130,000 points in 2 dimensions, each iteration of our algorithm took about 52 seconds.\n…the vast majority of which was spent computing dot products!\n\nMore than half of a single iteration was devoted to dot products in the px1 function above. That’s bad.\nJust for grins, let’s time everything:\n\n\nCode\nX = np.random.random(size = (130000, 2))  # To simulate the data I was working with.\nmu = X.mean(axis = 0)  # Compute an actual mean.\nsigma = np.array([[5, 0], [0, 5]])\nr = np.random.random(130000)\n\n\n\n\nCode\n%timeit px1(X, mu, sigma)\n\n\n267 ms ± 3.88 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\n\n\nCode\n%timeit musig1(X, r)\n\n\n563 ms ± 9.38 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n\nThat’s a full second of computation just for 1 of the Gaussian components (i.e., one pair of \\(\\mu\\) and \\(\\Sigma\\)). Crank that number of components up to 50 and, well, there’s your ~50-second runtime.\nI was admittedly at a bit of a loss here, considering I was already using NumPy constructs. But at the same time, these were highly structured linear algebra operations; there had to be something more efficient?\n\n\neinsum to the Rescue\nDISCLAIMER: I should highlight that I didn’t immediately land on this. It took some Googling around and some sitting and thinking before I figured out how this could be used. Then it took some more trial-and-error to actually get it to work.\nBut work, it did. Holy crap.\nnp.einsum is an implementation of the Einstein Summation, which is a super-fancy term for a cool (but admittedly tricky-to-grasp) shorthand notation for dealing with multiplications and summations of vectors, matrices, and tensors.\nI won’t rehash the basic examples I’ve found across the web that helped me understand how this works, but I will give special emphasis to two articles:\n\nEinstein Summation in NumPy, and\nA basic introduction to NumPy’s einsum\n\nI found #2 particularly accessible, but I’d recommend both.\nIt took some doing, but I managed to rewrite both equations using einsums:\n\n\nCode\ndef px2(X, mu, sigma):\n    det = sla.det(sigma)\n    inv = sla.inv(sigma)\n\n    ###\n    p = np.einsum('ni,ji,ni-&gt;n', X - mu, inv, X - mu)\n    ###\n\n    n = 1 / ((((2 * np.pi) ** 2) * det) ** 0.5)\n    px = np.exp(-0.5 * p) * n\n    return px\n\n\n\n\nCode\ndef musig2(X, r):\n    N = r.sum()\n    mu_next = (r[:, np.newaxis] * X).sum(axis = 0) / N\n\n    ###\n    sigma_next = np.einsum(\"ni,nj-&gt;ij\", (X - mu_next) * r[:, np.newaxis], X - mu_next) / N\n    ###\n\n    return mu_next, sigma_next\n\n\nThe musig2 use actually ended up being a straightforward application of the “each row of \\(A\\) multiplied by \\(B\\)” rule at the end of the #2 link above, with the slight wrinkle of making the first axis, n, the one that is summed over in the result.\nThe one in px2 was a lot harder, and for a time I wasn’t convinced it could be done. At one point I was able to basically split the operation in two einsums that were more or less identical to the one in musig2; it basically involved a repeated application of “multiply each row of \\(A\\) by \\(B\\)”. But I kept hunting around the web, particularly for examples of multiplying many matrices together, and eventually managed to figure this one out.\nIt boiled down to basics of how einsum works: I knew the output had to be a list of numbers n long, and that the first and third inputs were identical (ni). The key was: if everything had 2 axes going in, but only 1 axis was coming out, then all three inputs needed to share one axis that could be summed over.\n\n\nWith great power blah blah blah\nJust for fun, let’s run our examples again:\n\n\nCode\n%timeit px2(X, mu, sigma)\n\n\n6.4 ms ± 93.1 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\n\n\nCode\n%timeit musig2(X, r)\n\n\n6.15 ms ± 49.7 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\nTo sum up:\n\nGoing from a list comprehension of calls to numpy.dot to a single einsum decreased runtime of a single iteration from 300ms to 7ms, a speed-up of over 40x.\nGoing from a loop of numpy.outer products to a single einsum decreased runtime of a single iteration from 847ms to 7.5ms, a speed-up of over 110x.\n\nI re-ran cProfile to see what my performance gains were, and holy crap Batman.\n\nNot only was my total runtime down from ~52 seconds per iteration to a mere 1.5 seconds per iteration, but the most time-consuming block of my code was now einsum itself!\nOf course, I wasn’t going to argue with a full order of magnitude reduction in runtime.\nOur SciPy paper is still under review, so feel free to head over there and check out how we’re putting GMMs to use for bioimaging!\n\n\n\n\nCitationBibTeX citation:@online{quinn2018,\n  author = {Quinn, Shannon},\n  title = {An Einsum Use-Case},\n  date = {2018-06-19},\n  url = {https://magsol.github.io/2018-06-19-an-einsum-use-case},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2018. “An Einsum Use-Case.” June 19, 2018.\nhttps://magsol.github.io/2018-06-19-an-einsum-use-case."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "My name is Shannon Quinn. I’m an associate professor in the School of Computer Science and Department of Cellular Biology at the University of Georgia. Which is ironic at some level, considering my undergraduate degree in Computer Science came from Georgia Tech (GO JACKETS).\nMy interests are pretty broad, but the best summary I can give is that I enjoy hacking at large-scale data science problems. Recently I’ve been getting into DevOps, and ways of operationalizing machine learning; reproducibility is very important to me, and anything that helps make the hidden work of preprocessing, pretraining, and even precoding explicit is a good idea in my book. Perhaps unsurprisingly, I’m a huge proponent of open source development, and a big believer in open science. I try to make tools, data, and course materials all available with open source licenses, and try to give back to the open source communities whenever and however I can.\nIn my copious (lulz) free time, I enjoy board gaming, video gaming, and anything that involves working up a sweat: baseball, football, basketball, racquetball, cycling, hiking, and especially running."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data, donuts, and detours",
    "section": "",
    "text": "December Adventure, 2024 edition\n\n\nDay 1, 4th attempt, of ???\n\n\n\npersonal\n\n\ndecember adventure\n\n\nmagic the gathering\n\n\nhomelab\n\n\n\n\n\n\n\n\n\nDecember 4, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nDesolation\n\n\n\n\n\n\npersonal\n\n\nprofessional\n\n\n\n\n\n\n\n\n\nJune 13, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 23: Nearing the Finish\n\n\nAll [good?] things must come to an end\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\n\n\n\n\n\n\n\nMay 23, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 16: Python Profiling Rocks\n\n\nLack of profiling is the root of all evil\n\n\n\nprofessional\n\n\nwriting\n\n\nweblogpomo\n\n\nprogramming\n\n\npython\n\n\n\n\n\n\n\n\n\nMay 16, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 13: Return to Hiigara\n\n\nMay the burden remain\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\ngaming\n\n\n\n\n\n\n\n\n\nMay 13, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 10: Homelab extravaganza\n\n\nRun ALL the apps!\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\nhomelab\n\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 7: The importance of personal projects\n\n\nPay no attention to the wasteland of unfinished endeavors\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\n\n\n\n\n\n\n\nMay 7, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024, Day 3: mutter\n\n\nWho knew a hitching command line could be so irritating?\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\nopen source\n\n\n\n\n\n\n\n\n\nMay 3, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWeblogPoMo2024: BEGIN!\n\n\nDaily blogging is a high bar to clear\n\n\n\npersonal\n\n\nwriting\n\n\nweblogpomo\n\n\n\n\n\n\n\n\n\nMay 1, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nBurnout Marathon\n\n\nThe least fun race you’ll ever run\n\n\n\npersonal\n\n\nburnout\n\n\n\n\n\n\n\n\n\nMarch 1, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nThe Legend of Makar\n\n\nThe mostly long and some short of building your own desktop\n\n\n\npersonal\n\n\nprofessional\n\n\nnews\n\n\nmakar\n\n\n\n\n\n\n\n\n\nJanuary 25, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\n2023: A year of extremes\n\n\nUnmixed Gaussians but very mixed emotions\n\n\n\npersonal\n\n\nprofessional\n\n\nnews\n\n\nnew year\n\n\n\n\n\n\n\n\n\nJanuary 5, 2024\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nAdvent of Adventure\n\n\nThe Venn diagram of life, job, and hobbies is three nonoverlapping circles\n\n\n\npersonal\n\n\nprofessional\n\n\nadvent of code\n\n\ndecember adventure\n\n\nrae\n\n\nretropie\n\n\ndall-e\n\n\n\n\n\n\n\n\n\nDecember 8, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nRebuilding\n\n\nNowhere to go but up\n\n\n\npersonal\n\n\ncovid\n\n\nrunning\n\n\nweightlifting\n\n\nfood\n\n\nhealth\n\n\n\n\n\n\n\n\n\nNovember 9, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nThe Hero Of Everything\n\n\nApparently it’s not enough to merely save the world\n\n\n\npersonal\n\n\nvideo games\n\n\nzelda\n\n\ntears of the kingdom\n\n\n\n\n\n\n\n\n\nJuly 30, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nUpgrading the Raspberry Pi Cluster\n\n\nNothing bad has ever happened in the history of planned upgrades.\n\n\n\npersonal\n\n\nraspberry pi\n\n\nkubernetes\n\n\nk3s\n\n\nmastodon\n\n\nhardware\n\n\n\n\n\n\n\n\n\nJuly 10, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nThis post is about burnout\n\n\nMetaphor is a tool best left to those trained to use it\n\n\n\npersonal\n\n\nprofessional\n\n\nburnout\n\n\nmovies\n\n\nbooks\n\n\n\n\n\n\n\n\n\nJune 6, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMy thoughts ahead of Tears of the Kingdom\n\n\nNot to be mistaken for cheap facsimilies of ‘truth’ or ‘facts’\n\n\n\npersonal\n\n\ngaming\n\n\nzelda\n\n\ntotk\n\n\ntears of the kingdom\n\n\n\n\n\n\n\n\n\nMay 9, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nThree years later\n\n\nThe Savannah Women’s Half Marathon\n\n\n\npersonal\n\n\nrunning\n\n\ncovid\n\n\npandemic\n\n\ngetaway\n\n\ntravel\n\n\n\n\n\n\n\n\n\nApril 4, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon: Conclusions, musings, ramblings, ravings\n\n\nThe beauty!pain!beauty of open source\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\n\n\n\n\n\n\n\nFebruary 28, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon, Part V: Installing and configuring Mastodon\n\n\nSorry, I blacked out, what are we doing again?\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\n\n\n\n\n\n\n\nFebruary 24, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon, Part IV: SSL with Let’s Encrypt\n\n\nDNS is the cause of, and solution to, all our networking problems\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\nssl\n\n\ndns\n\n\n\n\n\n\n\n\n\nFebruary 16, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a wildlife camera\n\n\nIt’s almost like the corporate solutions are on to something\n\n\n\npersonal\n\n\nraspberry pi\n\n\nwildlife\n\n\nir\n\n\ncamera\n\n\nvideo processing\n\n\n\n\n\n\n\n\n\nFebruary 15, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon, Part III: Configuring and installing the prerequisites\n\n\nWelcome to dependency hell, we have recursion\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\ndependencies\n\n\n\n\n\n\n\n\n\nFebruary 9, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon, Part II: The Mastodon Helm chart\n\n\nA package manager for people who enjoy pain I guess\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\nhelm\n\n\n\n\n\n\n\n\n\nJanuary 25, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nMastodon, Part I: My home network topology\n\n\nDNS. It’s always DNS. Except when it’s not.\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\nnetworking\n\n\n\n\n\n\n\n\n\nJanuary 23, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nRunning your own Mastodon instance on a Raspberry Pi k3s cluster\n\n\nNow you too can unwittingly become an unpaid sysadmin!\n\n\n\npersonal\n\n\nraspberry pi\n\n\nk3s\n\n\nmastodon\n\n\n\n\n\n\n\n\n\nJanuary 20, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\n2022: A year in review\n\n\nLast year doesn’t deserve a rhyming couplet\n\n\n\npersonal\n\n\nprofessional\n\n\nnews\n\n\n\n\n\n\n\n\n\nJanuary 17, 2023\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nPardon de dust (2)\n\n\nMigrating blog backends is hard\n\n\n\npersonal\n\n\nprofessional\n\n\nnews\n\n\n\n\n\n\n\n\n\nDecember 13, 2022\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nFiddling with generative art models\n\n\n\n\n\n\npersonal\n\n\nprofessional\n\n\nai\n\n\ngenerative modeling\n\n\ndeep learning\n\n\nraspberry pi\n\n\nlegal disclaimer\n\n\nzelda\n\n\nfamily\n\n\n\n\n\n\n\n\n\nAugust 3, 2022\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nWhat the f*@$ is this s%#& (2022 ed.)\n\n\n\n\n\n\npersonal\n\n\nprofessional\n\n\nclover the bun\n\n\nz\n\n\ncovid-19\n\n\nrunning\n\n\nprofessor\n\n\nuniversity\n\n\nquansight\n\n\ntravel\n\n\nholidays\n\n\nyear in review\n\n\n\n\n\n\n\n\n\nJanuary 5, 2022\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nBack in Action\n\n\n\n\n\n\npersonal\n\n\nblogging\n\n\npython\n\n\npelican\n\n\ndependency hell\n\n\n\n\n\n\n\n\n\nDecember 30, 2021\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nFestivus for the Restivus\n\n\n\n\n\n\npersonal\n\n\nfestivus\n\n\nfuck 2020\n\n\nfuck that shit\n\n\nairing of grievances\n\n\n\n\n\n\n\n\n\nDecember 30, 2020\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nAt home during COVID-19\n\n\n\n\n\n\npersonal\n\n\nprofessional\n\n\ncovid-19\n\n\nsars-cov-2\n\n\nwork from home\n\n\nzelda\n\n\npandemic\n\n\nfurbabies\n\n\nzippy the cat\n\n\nclover the bun\n\n\n\n\n\n\n\n\n\nMay 20, 2020\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nBreath of Fresh (albeit, indoor) Air\n\n\n\n\n\n\npersonal\n\n\nbreath of the wild\n\n\nzelda\n\n\nrunning\n\n\ngaming\n\n\nnerds\n\n\nthe lady\n\n\ninjury\n\n\n\n\n\n\n\n\n\nAugust 12, 2019\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nQuinnwitz in Ireland\n\n\n\n\n\n\npersonal\n\n\ntravel\n\n\nireland\n\n\n\n\n\n\n\n\n\nJune 3, 2019\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nStarCraft II Questions\n\n\n\n\n\n\npersonal\n\n\ngaming\n\n\nvideo games\n\n\n\n\n\n\n\n\n\nJanuary 31, 2019\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nAn einsum use-case\n\n\n\n\n\n\nprofessional\n\n\npython\n\n\n\n\n\n\n\n\n\nJune 19, 2018\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nJedi Outcast: Echoes of a bygone gaming era\n\n\n\n\n\n\npersonal\n\n\ngaming\n\n\nstar wars\n\n\nfps\n\n\ncommunities\n\n\n\n\n\n\n\n\n\nApril 26, 2018\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nResolutions for 2018\n\n\n\n\n\n\npersonal\n\n\nprofessional\n\n\nnew year\n\n\nblog\n\n\nwriting\n\n\nside projects\n\n\nresearch\n\n\n\n\n\n\n\n\n\nJanuary 21, 2018\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nNew year, new blog layout\n\n\n\n\n\n\npersonal\n\n\nnew year\n\n\nblog\n\n\n\n\n\n\n\n\n\nJanuary 6, 2018\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nSummer of Data Science 2017\n\n\n\n\n\n\nprofessional\n\n\npersonal\n\n\ndata science\n\n\npython\n\n\ncomputer vision\n\n\nimaging\n\n\nmachine learning\n\n\ndeep learning\n\n\nnvidia\n\n\ngpu\n\n\nteaching\n\n\neducation\n\n\nbioimaging\n\n\n\n\n\n\n\n\n\nMay 31, 2017\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nSo, you want to conduct research with me?\n\n\n\n\n\n\nprofessional\n\n\nphd\n\n\ngraduate school\n\n\nresearch\n\n\nmentoring\n\n\ncomputer science\n\n\ngraduate student\n\n\n\n\n\n\n\n\n\nMarch 16, 2017\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nGame-ify Your Raspberry Pi\n\n\n\n\n\n\npersonal\n\n\nraspberry pi\n\n\ngaming\n\n\nvideo games\n\n\nnvidia\n\n\nsteam\n\n\n\n\n\n\n\n\n\nJanuary 6, 2017\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nOpen Science in Big Data (OSBD) Workshop\n\n\n\n\n\n\nprofessional\n\n\nworkshop\n\n\nbig data\n\n\nieee\n\n\nopen science\n\n\n\n\n\n\n\n\n\nSeptember 26, 2016\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nA twitterbot for posting weekly running stats\n\n\n\n\n\n\npersonal\n\n\npython\n\n\nstrava\n\n\nrunning\n\n\noauth\n\n\ntweepy\n\n\ntwitter\n\n\npybot\n\n\n\n\n\n\n\n\n\nMay 16, 2016\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nReviewing a reviewed grant’s reviews\n\n\n\n\n\n\nprofessional\n\n\nacademia\n\n\ngrants\n\n\nfeedback\n\n\nrejection\n\n\n\n\n\n\n\n\n\nFebruary 2, 2016\n\n\nShannon Quinn\n\n\n\n\n\n\n\n\n\n\n\n\nIntroductions\n\n\n\n\n\n\npersonal\n\n\npelican\n\n\npython\n\n\ngithub\n\n\njupyter\n\n\n\n\n\n\n\n\n\nNovember 7, 2015\n\n\nShannon Quinn\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-03-01-burnout-marathon/index.html",
    "href": "posts/2024-03-01-burnout-marathon/index.html",
    "title": "Burnout Marathon",
    "section": "",
    "text": "Warning\n\n\n\nThis post contains references to recent events at the University of Georgia involving the deaths of two undergraduate students.\n\n\nFebruary was a bruiser of a month: somehow both the shortest of the year by any objective measure, and also the most intense of the past year at least.\nFor several days this past week I’ve felt that “hollow muscle” sensation that goes beyond mere fatigue. It’s that feeling where you’ve been hopped up on cortisol for days (or longer) at a time and then you finally, blessedly, are able to relax; it feels a lot like a multi-day hangover or even withdrawal. My hands shake, my legs feel wobbly, and on a whole I feel as though I could take a nap at any time.\nI’m sure it’s happened to me in the intervening years, but the last time I vividly remember it was right at the start of 2014, as I was entering the final year of my PhD, and I had just started on fluoxetine. It helped me to finally start to sleep through the night on multiple consecutive nights, but I was waking each morning with this same feeling: heavy and tired, sure, but also all my muscles shook, as though coming down from a high. It lasted for at least a week but went away as my sleep and exercise routines evened out.\nThis past week was one of the worst in recent memory. Somehow, the tragedies of two UGA students dying—one of them murdered on trails we’ve run millions of times, the other (who died by suicide) a graduate of my high school—were only a part of what made the past week so difficult.\nFor all the progress I’ve made in learning to cope with and even reverse burnout, I still have no idea how to handle acute situations, especially when it’s multiple in just a few days’ time and the feeling of being hit from all directions is overwhelming. My therapist assured me that, since I didn’t physically or emotionally hurt anyone else or even myself in the immediate aftermath, that alone puts me way ahead of the curve. That helps to hear, but it really doesn’t feel like it.\nI’ve had a love-hate relationship with my Garmin Fenix watch ever since purchasing it back in 2015. It has a feature that estimates your current fitness “state”, including categories like “Productive”, “Maintaining”, “Peaking”, or “Recovery.” It measures all of this mostly using heart rate data, which by itself is suspect from a watch; as good as watch-based optical heart rate monitors have gotten, they’re still a “good estimate” at best by comparison to chest straps or pulse monitors at doctor’s offices.\nBut for the past 10 days it’s had me in “Maintaining” or even “Unproductive” for the longest period I can remember, despite making an active push to increase my weekly running mileage. And the reasoning Garmin provided for the classification was pretty damning: it said my activity level was good, but that my fitness was nonetheless still decreasing, a sign that I needed more recovery time.\n\n\n\nWhen even Garmin is consistently telling you to calm your shit, maybe it’s time to chill.\n\n\nI took Monday off from work. I am so, so grateful to have that flexibility to take time when I need it, but wow I needed it. I don’t really remember specifics from the weekend until about Monday evening; that’s how brain-dead I was.\nI don’t have any pearls of wisdom for getting through acutely stressful situations; I wish I did. An outlet for both the physical and the emotional/mental energy certainly helps (obviously, outlets that do NOT involve hurting other people). In my case:\n\nA pretty intense 30-minute throwing session in my backyard with my pitchback at about 8:30pm. The fact that I escaped without taking a single baseball to the face while the half of the yard I was standing in was in pitch darkness is one minor miracle. That my shoulder wasn’t sore the next day is another.\nMy wife and I ran together twice this week for the first time since Z was born over three years ago.\nI’ve thrown myself into my work this week: I had several very productive work sessions with my colleagues at PredxBio as we continue to build out some new spatial biology models; I wrote some draft SciPy abstracts (we might submit three!); and I approached a potential contractor for one of my grants.\nI managed to create a self-sufficient home media server, allowing me to cancel our AppleTV+ subscription a mere 24 hours before it was set to renew for its increased price.\nAfter ignoring the “Focus” mode feature on iOS basically since it appeared, I spent 15 minutes creating a new mode that all but completely disables my phone every night at 8pm. It’s been nothing short of wonderful.\n\nSo I guess, at least for me: intense physical labor with focused mental applications (winging a baseball and then being forced to field a return; or a high-intensity work schedule that draws on my experience) seems to be my ideal way of coming down from peak activation. I’ve reached out to some friends who have also provided some important feedback—feedback which was obvious in retrospect, but which I was too activated in the moment for it to even occur to me (my therapist had some fascinating insights here about human psychology and our tendency to cling to rules or procedures that make no sense in the moment, but we cling to them anyway because we just want one thing to work the way we expect it to). That back-and-forth with trusted friends also helped to clarify and crystallize my thoughts.\nBasically, no quick fix. Certainly no “anti-trigger” on the same intensity and timescale but opposite directionality. Maybe people who can do that exist; I’m certainly not one. But I did learn the hours of the nearby indoor batting cage, and my birthday is coming up, so hopefully I’ll be able to report on that soon. That’s something positive to come out of all this. Small; very small. But positive.\nMay the memories of the two students be a blessing.\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {Burnout {Marathon}},\n  date = {2024-03-01},\n  url = {https://magsol.github.io/2024-03-01-burnout-marathon},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “Burnout Marathon.” March 1, 2024. https://magsol.github.io/2024-03-01-burnout-marathon."
  },
  {
    "objectID": "posts/2023-02-28-mastodon-conclusions/index.html",
    "href": "posts/2023-02-28-mastodon-conclusions/index.html",
    "title": "Mastodon: Conclusions, musings, ramblings, ravings",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\n\nIntroduction\nPart I: My home network topology\nPart II: The Mastodon Helm chart\nPart III: Configuring and installing prerequisites\nPart IV: The waking nightmare that is Let’s Encrypt\nPart V: Actually installing Mastodon\nConclusions (this post)\n\nI know what you’re thinking:\n\nAnd honestly… you’re not wrong.\n\nRunning Mastodon has gotten easier\nIn the time I spent planning and writing this blog post series, many of the issues and bugs I ran into already have official fixes (I’ve tried to note PRs, whether merged or still open, where relevant throughout the series). The biggest news of note came down just late last week: Bitnami’s images on DockerHub now universally support ARM, making practically the entirety of Part III obsolete.\nThere are also discussions (perhaps only internally?) around refactoring the Helm chart to pull the prerequisites out entirely, refocusing instead on Mastodon itself.\n\n\nJoining Mastodon has gotten easier\nAnd honestly, it’s not like there’s a huge crowd of folks looking to run their own Mastodon instances, especially not with such a rich landscape of instances already up and running.\nGranted, there doesn’t really seem to be a unified way of finding an interesting instance; that particular aspect of diving into Mastodon still feels very “cannot be found except by those who already know where it is.” That’s a bit orthogonal to the blog series—especially since I set up my own instance not because I couldn’t find what I was looking for, but because I just wanted to see if I could—but still an ongoing consideration.\n\n\nOther notes on the process\nI do want to strongly underscore how grateful I am to the Mastodon dev team for all their help through this process. I would very likely still be mired in getting search up and running without their knowledgeable, kind, and patient assistance. Go support Mastodon’s open source work and, as a bonus, receive access to their dev Discord.\nThe official GitHub repository is also a wealth of information, and I cannot enumerate just how helpful it’s been since they moved the helm chart maintenance and development into its own repository, separate from the main Mastodon application.\nMy biggest gripe with this whole process really just boils down to the complexity of kubernetes and its ecosystem. There is so. much. stuff. to understand to get even the most basic kubernetes applications up and running. Helm is helpful—in a way—because it hides so much of this complexity, but this becomes a double-edged sword when invariably something isn’t working quite right. Frankly, with the lone exception of the NFS provisioner I use for storage in kubernetes applications, I have yet to install an application via Helm that didn’t also require diving into the values.yaml and backend templates to figure out what was really going on.\nUnfortunately I don’t have an easy answer, either. For someone well-versed in kubernetes and its ecosystem, this whole process probably would have taken a day; for me, it took a month. I’m ok with that, because I learned a lot from the process of doing it myself, but I’m also more cognizant now of just how much I still don’t know about kubernetes.\nUntil this unfathomably steep learning curve is smoothed out a little, I feel that it’s incumbent upon us who’ve dabbled somewhat in kubernetes to help lift up the folks coming behind us. Hence this blog series!\n\n\nFinal, final notes\nIs there anything I missed? Anything that isn’t clear? Please feel free to drop a comment on this post or any of the previous ones if you have some additional thoughts on the topics.\nI’ve also gone back and added links to all the posts in the series to all the other posts in this series, so you won’t have to click through sequentially to see them all.\nI really enjoyed putting this series together, and I already have some ideas for similar undertakings, both within and without the world of kubernetes (perhaps I’ll finally have a blog series around something ML and/or CV related, zomg). Until then!\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Mastodon: {Conclusions,} Musings, Ramblings, Ravings},\n  date = {2023-02-28},\n  url = {https://magsol.github.io/2023-02-28-mastodon-conclusions},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Mastodon: Conclusions, Musings, Ramblings,\nRavings.” February 28, 2023. https://magsol.github.io/2023-02-28-mastodon-conclusions."
  },
  {
    "objectID": "posts/2022-08-03-fiddling-with-generative-art/index.html",
    "href": "posts/2022-08-03-fiddling-with-generative-art/index.html",
    "title": "Fiddling with generative art models",
    "section": "",
    "text": "Much like a lot of the internet over the past couple months, I’ve been tinkering with some AI art generators, mainly Midjourney (if only because I’m waitlisted on DALL-E 2).\nIt’s been surprisingly fun, if challenging. This isn’t really my area of research, but I understand the basic underpinnings:\nThese models are trained using vast swaths of image-and-text pairings, so the model can develop an association between features in images and the corresponding text that describes them. Obviously this process is very complicated, and also requires not only a great deal of data but also a considerable amount of computing power, so it’s still a very active area of research and is largely out of reach of your every day researcher or individual training their own model. But once the model is trained, users can provide snippets of text, which the model then translates into an image.\nTherein lies the magic. There’s a lot of randomness involved in the image generation process, since even a text input as simple as “cat” could mean a LOT of different things, image-wise. That’s partly a feature: two people who give the exact same text input will likely get slight variations of the same concept, and possibly get wildly divergent results.\nBut it also makes for a challenging user experience: there’s a sort of “lingo” that you have to wrap your head around, a “way of talking to the model” that goes beyond simple word-concept mappings, that only comes with extended use of the models. It gets harder the more specific of an idea you have: your conceptual understanding of the idea may not bear any resemblance to the concept the model learned!\n(man this is getting philosophical! let’s see if I can make this a bit more concrete with some examples)\n\n\n\nGenerated with the text: empty beach, dark storm in distance, one flower blooms from the sand to the side, high detail, atmosphere, Arnold render, ultra-realistic, dramatic lighting, glow, cinematic lighting, epic, 8k\n\n\nThis was actually an image that I generated based off an image someone else had already generated (yeah, we can take public images and run them back through the model with new or additional text).\nFrom here, I ran a couple more of my own modifications:\n\n\nI really liked the second one, though with the third I love the ambiguity in the landscape: is it water, or is it snow? Hard to say in that lighting.\nFrom here, I started focusing a bit more on landscapes under a starlit sky (like the cover photo). I eventually settled on this one, which I really kinda love (so I made the highest-res version of it that I could):\n\n\n\nGenerated with the text: wooded mountainous winter landscape under cosmic night sky with distant glowing small town in a valley, nebulae, crescent moon, planetary rings, cinematic, atmospheric, 8k, dramatic lighting, ultra realistic\n\n\nI will say, it definitely takes some doing to get a feel for how it works–what I had in mind was nowhere near what the model spat out, even though I love what it created. Still, there weren’t really any planetary rings (I was thinking of Gaal’s homeworld in the AppleTV+ Foundation series), and the “glowing small town in a valley” seems to have been diffusely spread over the entire valley, almost like fireflies, rather than distinct. Beautiful, no question, but not exactly what I’d had in mind.\nOne final bit I tried before my trial ran out was a completely different direction:\n\n\n\nGenerated with the text: raspberry pi computer made out of raspberries, modern, futuristic\n\n\nI see a lot of super awesome art being generated from very terse prompts, so I was trying to capture that a little bit here (as opposed to the downright locquacious landscape prompts above).\nSome of the earlier images I created had more to do with my family. This first one was created shortly after my wife left her previous job to pursue her longtime dream of being a full-time fiction writer (it was seriously one of the first things I ever learned about her all those years ago): I was inspired to see if the model could capture something about what that looked like, in my head at least.\n\n\n\nGenerated with the text: a writer working at her computer surrounded by a world of her own creation\n\n\nAnd I really love this next one, as it evokes less of the specific act of writing and more of how it’s about creating.\n\n\n\nGenerated with the text: writer standing on the boundary between worlds, the world she lives in and the world she creates\n\n\nWe’ve also been huge fans of Zelda for quite awhile (which longtime readers already know), and not too long ago I commissioned a fan account to remake a family photo as if it were in the Zelda universe.\n\n\n\nQuite the handsome family, doncha think?\n\n\nSo I played with that idea a bit, and while the results weren’t great–I get the feeling the generator has a harder time dealing with very specific real-world concepts, as opposed to more general categories of things–I did get this pretty cute rendering of what is most definitely a Hyrulean family.\n\n\n\nGenerated with the text: zelda champions from breath of the wild, family, 1985, highres\n\n\nIt’s fun to tinker with. In all honesty I’ll probably keep playing with it here and there as the mood strikes; if you want to follow along, there’s a public feed of all the pictures I generate here (note: it’s “public” in that you have to create a free account to see it), since there’s no way I’m going to shell out the $ required to make my images private.\n\nLegal Disclaimer\nAt least, I’ll keep tinkering until copyright catches up… which, on that note, I should mention: I agree with everything in this twitter thread on the topic. I want to end on this note, because I think this is very important to keep in mind.\n\nKeep in mind, I am not a lawyer, but based on my read there are two legal interpretations of these models: as an author that learns and creates novel work, or a product that synthesizes derivative works. In the case of the former, any kind of substantive duplication of existing work created by someone else is copyright infringement; and in the case of the latter, it’s using novel, unlicensed work in a paid product, which is also copyright infringement.\nAs someone whose background is in exactly this kind of generative “AI” work, I would generally fall under the latter interpretation of these models as a product (what they “learn” is dubious at best; I would never call their reproductions “novel”). As such, I also agree with the tweet’s author that the moment these companies begin monetizing these models is when, at the very least, they’ve committed a moral rights violation. It’s the same exact reason I’m very uncomfortable with the GitHub CoPilot product: it’s been trained using billions of lines of code that was written, tested, debugged, scrutinized, and labored over by humans who did not consent to nor were reimbursed for having their code used in a paid product.\nThat last tweet in the thread is particularly poignant for me, and distills much of the reason for my disillusionment with the tech sector in general. I’m sorry to end on such a sour note, but while I do love the amazing things machine learning is doing, we have to keep at the forefront of our minds that machine learning is, ultimately, a human endeavor, and if it won’t work without humans, we should make sure those humans are taken care of: recognition, compensation, empathy, and so on.\nsteps off soap box…for now\n\n\n\n\nCitationBibTeX citation:@online{quinn2022,\n  author = {Quinn, Shannon},\n  title = {Fiddling with Generative Art Models},\n  date = {2022-08-03},\n  url = {https://magsol.github.io/2022-08-03-fiddling-with-generative-art},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2022. “Fiddling with Generative Art\nModels.” August 3, 2022. https://magsol.github.io/2022-08-03-fiddling-with-generative-art."
  },
  {
    "objectID": "posts/2022-01-05-what-the-f-is-this-s/index.html",
    "href": "posts/2022-01-05-what-the-f-is-this-s/index.html",
    "title": "What the f*@$ is this s%#& (2022 ed.)",
    "section": "",
    "text": "Clover disapproves of everything and wants you to get your butt in gear.\n\n\nI’m not sure where I should even start. How does one sum up a year that felt more like a decade? How does one reflect on a year that eschewed reflection in favor of mere survival?\nI want to be the eternal optimist who always sees the silver lining, who always takes away something positive from a negative experience. But to paraphrase (because I can’t find it) someone far more clever than I on Twitter: it feels a bit like trying to find the bright side of things while actively being run over by a zamboni.\nWell, I suppose one way would be to try and end this post on a positive note. So to that end, I’ll start with the stuff that sucked in 2021.\n\nThe Bad\nWhere do I even start? The pandemic continued to rage–Alpha, Delta, and Omicron right at the cusp of the new year–and elected leaders around the globe shrugged their collective shoulders, as if saying “we tried nothing and it didn’t work, so I guess that’s it.”\nUniversity of Georgia, in lockstep with the Georgia Board of Regents and many other public universities across the country, collectively threw up their hands, hid behind the malevolent cowardice of our elected leaders, and did all of jack and shit to protect any of the hundreds of thousands of dedicated public service workers who have given 140% of themselves to the institution of higher learning since time immemorial. They continued to fart out meaningless platitudes about “rallying together” whenever another surge arrived but refused to take any meaningful or substantive actions recommended by public health experts the world over–like requiring masks or vaccinations–and instead demanded more of already overtaxed, underpaid janitorial staff to do more pointless bullshit like installing platic dividers or cleaning surfaces forty times a day.\nRunning has continued to be an elusive outlet for stress. Every run feels hard, and more often than not I’m inclined to not run. Which doesn’t do anything to help my mood, but that vicious negative feedback loop continues nonetheless. I hate it but I’m not sure how to break out of it.\nOther shit that sucked:\n\nOur bun Clover had a bout of GI stasis in the early part of the year. Thankfully, the folks at the UGA Vet Hospital were amazing in getting her well again. Still, scary as shit.\nthe weather (75F on Christmas? fucking really?)\nteaching (and I hate that I hated it, but I’m so, so burned out)\nliterally the Georgia Board of Regents\nannual grant reports (best I can describe is we’re running in place)\nburnout in general\nmental health in general\nevery day being a series of bad choices made from a list of exclusively bad choices\n\n\n\nThe Good\nSomehow, through the grace of God and possibly every deity in the multiverse, we have not tested positive for COVID (knocks on wood).\n\nI took my first flight since Dec 2019 to Washington, D.C., for a workshop hosted at George Washington University on teaching with open source technology. It was a blast. Not only was it an absolute pleasure to spend a few days with some of my professional heroes, folks I’ve known for years through Twitter and who share my same passion for open source technology and innovative instrucitonal methods, but it was great just going to a meeting again!\n\nTraveling was the strangest thing, both familiar and foreign. Of course I was a nervous wreck going through the airport, but I commend everyone at GWU for taking every precaution, including mandating the use of masks indoors. It was also the first time either one of us single-parented for more than a few hours at a time, and Cathryn did amazingly well! She even managed Z’s weekly bath ON HER OWN.\n\nI was tenured and promoted. Indeed, I somehow won the cosmic coin flip. I am now an Associate (“ass o’ shit”, in the technical parlance) Professor of Computer Science and Cellular Biology.\n\n\n\nIf my doctoral thesis was an image.\n\n\nWe bought a second car (named “Mipha”), a Honda CRV Hybrid, in the summer. We had assumed we’d need two cars, what with our jobs requiring slightly different hours and wildly different physical locations, it would entail too much logistical square dancing for a single car when daycare pickup / dropoff was added to the mix. Of course, then I taught the fall semester almost entirely remotely because of the Delta surge. Still, it’s been really nice to have a bit more room, and our handful of trips to the mountains with Z would absolutely NOT have been possible with Sam (our Honda Accord Hybrid). Not crazy about the added car insurance, though.\nOver Christmas, we managed a trip to Arizona (which, in hindset, we may not have done given Omicron) for a family reunion on Cathryn’s side to celebrate her grandfather’s 101st birthday. It was also the first time Z had ever met the family on Cathryn’s side, and the first time she got to meet her great-grandfather, born a century earlier. We took rapid tests every day, and got PCR tested before and after, and somehow only 1 person in the entire extended family got COVID. It was also the first time Z traveled by airplane, and she was amazing. It was lovely. Exhausting, but lovely.\n\n\n\nRain. All day. In the desert. Yeah, global warming’s a myth.\n\n\nOther stuff that was neat and definitely didn’t suck:\n\nOur house won our HOA’s First Place for holiday decorations, specifically in the “whimsical” category! I’m thinking our 7-foot inflatable menorah had something to do with it.\nBoth Cathryn and I hired running coaches to help us get back into the swing of things. Baby steps!\nI was offered–and accepted–a position with Quansight as Principal Solution Architect. I’ll have a lot more to say about this in a later post.\nBathroom renovations are scheduled, and office renovations are being planned. All that’s left in the Priority A category is to address the outdoor flooding.\nWe managed a handful of mountain trips with Z, and even one with our friend Laura. Z loooves the outdoors, which is awesome.\nI got this blog working again!\nAge of Calamity’s two expansion packs are fun as hell.\nZ is just… the singularity of joy in our lives.\n\n\n\nWrap Up\n\nIt’s cathartic to get all this out in some form. And, of course, there are innumerable positives (and negatives) that I’m forgetting / suppressing / ignoring. I will say this:\nI’m genuinely excited for 2022. There’s an insane amount of uncertainty and dread and fear, but there are some changes in store for which I’m really and truly stoked. I just have to hope.\n\n\n\n\nCitationBibTeX citation:@online{quinn2022,\n  author = {Quinn, Shannon},\n  title = {What the f*@\\$ Is This s\\%\\#\\& (2022 Ed.)},\n  date = {2022-01-05},\n  url = {https://magsol.github.io/2022-01-05-what-the-f-is-this-s},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2022. “What the f*@$ Is This s%#& (2022\nEd.).” January 5, 2022. https://magsol.github.io/2022-01-05-what-the-f-is-this-s."
  },
  {
    "objectID": "posts/2024-05-23-weblogpomo2024-day-23-nearing-the-finish/index.html",
    "href": "posts/2024-05-23-weblogpomo2024-day-23-nearing-the-finish/index.html",
    "title": "#WeblogPoMo2024, Day 23: Nearing the Finish",
    "section": "",
    "text": "We’re at day 23 of #WeblogPoMo2024, and this is post number 7 for me—one every three-ish days, give or take. And in today’s post, I’m here to say: I’m not sure how many more posts there will be. I’m in and out of travel for most of the remaining month, and while there will be plenty of downtime (and, assuming, WiFi access), I’m not expecting joy-writing to be high on the priority list.\nSimply put: between jet lag, phoning home, and a really nasty bee sting I picked up that’s taking its sweet time healing—not to mention said travel—I don’t really see much time for this.\nI could be wrong! There might be another post, or two, or even THREE (gasp). Anything is possible! But given the stress of travel, I want to temper the expectations of my most important of readers: me.\nSo in possible lieu of any further #WeblogPoMo2024 posts, please enjoy these Homeworld 3 screenshots that were actually taken by yours truly.\n\n\n\nTwo Hiigaran motherships.\n\n\n\n\n\nThis was a hard mission.\n\n\n\n\n\nThe atmosphere on this one was unreal.\n\n\n\n\n\nGonna be tough for the enemy to break this line.\n\n\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 23: {Nearing} the {Finish}},\n  date = {2024-05-23},\n  url = {https://magsol.github.io/2024-05-23-weblogpomo2024-day-23-nearing-the-finish},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 23: Nearing the\nFinish.” May 23, 2024. https://magsol.github.io/2024-05-23-weblogpomo2024-day-23-nearing-the-finish."
  },
  {
    "objectID": "posts/2024-05-16-weblogpomo2024-day-16-python-profiling-rocks/index.html",
    "href": "posts/2024-05-16-weblogpomo2024-day-16-python-profiling-rocks/index.html",
    "title": "#WeblogPoMo2024, Day 16: Python Profiling Rocks",
    "section": "",
    "text": "Today I was digging through some code written by somebody else and trying to establish benchmarks against some new data we had just received. In doing so, I noticed the application was spending a lot of time at one particular stage. Upon inquiry, my coworkers said something to the effect of “oh yeah, that part always takes a long time to run.”\nIn looking through the code in question, some ideas began to form in my head, but I was missing data. So I turned to an old Python friend: cProfile!\ncProfile is a built-in package—as in, part of the default Python distribution—that performs code profiling and is dead-simple to use. Given that I was interested only in a small slice of the overall program, I did have to dig a bit to understand how to essentially “wrap” a certain part of the program in profiling, so that was new for me.\nIt basically amounted to:\nimport cProfile, pstats\n\nprofiler = cProfile.Profile()\nprofiler.enable()\n###\n# All the code you want to profile goes here!\n###\nprofiler.disable()\nstats = pstats.Stats(profiler)\nstats.dump_stats(\"outputdir/outputfile.stats\")\nThat dumps out the profile information (in a binary format, sorry) to a file. From there, you can spin up something like IPython to read the binary and print out the stats:\ns = pstats.Stats(\"outputdir/outputfile.stats\")\ns.sort_stats(\"tottime\").print_stats()\nAnd then you have all the runtime stats of the code enclosed by your profiler! It even helped me identify a strange \\(O(n^2)\\) search loop; easy to miss, because it was a 1-liner, but was responsible for over 50% of the observed runtime! I probably would never have found it on my own.\nFor more information, check out the docs on the built-in Python profilers!\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 16: {Python} {Profiling} {Rocks}},\n  date = {2024-05-16},\n  url = {https://magsol.github.io/2024-05-16-weblogpomo2024-day-16-python-profiling-rocks},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 16: Python Profiling\nRocks.” May 16, 2024. https://magsol.github.io/2024-05-16-weblogpomo2024-day-16-python-profiling-rocks."
  },
  {
    "objectID": "posts/2023-02-09-configuring-and-installing-prereqs/index.html",
    "href": "posts/2023-02-09-configuring-and-installing-prereqs/index.html",
    "title": "Mastodon, Part III: Configuring and installing the prerequisites",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\n\nIntroduction\nPart I: My home network topology\nPart II: The Mastodon Helm chart\nPart III: Configuring and installing prerequisites (this post)\nPart IV: The waking nightmare that is Let’s Encrypt\nPart V: Actually installing Mastodon\nConclusions\n\n\nPreamble\nAs stated previously, the Mastodon image is fully arm64-compatible. However, if and until the dev team chooses to unbundle Mastodon from its dependencies in the Helm chart, we have to worry about multiple applications Mastodon relies on which themselves rely on images that are not arm64-compatible.\nThis isn’t exactly dependency hell, but it did bring to mind a recent blog post by Vicki Boykis–who you should absolutely follow if you don’t already–about how layered modern software engineering and programming have become:\n\nModern software is hard to develop locally, hard to build the internal logic for, and intrinsically hard to deploy, especially so in the case of machine learning. Just take a look at the MLOps paper, which I have nightmares about occasionally.\nThe problem has gotten so bad that you can usually no longer start from scratch and develop and test a single piece of software in a single, preferably local environment.\n\nAs someone in the data science and machine learning space for the past decade+, I can definitely say that this is true. So I hope this post provides some clarity so you can proceed with installing arm64-compatible Mastodon without spending as much time as I did getting it to run.\n\n\nThe short version\nThe upshot is that the three major dependencies of Mastodon–redis, postgres, and elasticsearch–are all bitnami images, and none of bitnami’s images are arm64-compatible.\n(there is a mega-thread open discussing bitnami’s eventual migration to arm64-compatible images, but they’ve made it very clear that it just isn’t a priority for them right now)\nIn mid-November 2022, this issue was posted. I was still working on getting my own Mastodon instance up and running, so it wasn’t until Dec 1 that I was finally able to respond with something concrete (though by no means a complete picture–I still couldn’t figure out what to do about elasticsearch).\nMy response should have some familiar notes from the previous post, specifically regarding the modifications that needed to be made to Chart.yaml.\nAnother user in the issue mentioned the “bitnami-compat” project, which I highly recommend checking out, but which I didn’t end up using, for reasons I’ll get into later in this post.\nThe OP on the issue opened up a Discussion, where I answered with the short version of what this post will contain (along with, again, some content from the last post). You can read that if you like, or continue here! Or both!\nThe key approach I took: rather than swapping out entire charts, I stuck with the bitnami charts referenced in the Mastodon chart, but modified the images each of the bitnami charts referred to. In this way, I could minimize the amount of yaml reconfiguration I was doing to keep things at a reasonable amount of crazy.\n\n\npostgresql\nPostgreSQL was the easiest change, at least if minimizing “number of switches I needed to flip” is our metric of choice here for determining easy versus difficult.\nThe only real change I needed to make was how I performed the helm install process of the bitnami chart for postgres. Here’s the command I used:\nhelm install postgres bitnami/postgresql \\\n    --set global.postgresql.auth.postgresPassword=\"my_postgres_password\" \\\n    --set global.postgresql.auth.username=\"my_postgres_username\" \\\n    --set global.postgresql.auth.password=\"my_postgres_password\" \\\n    --set global.postgresql.auth.database=\"my_postgres_database\" \\\n    --set image.repository=\"postgres\" \\\n    --set image.tag=\"15.0\"\nThat’s it. The only real change of note is the image.repository target: it’s pointing to the official PostgreSQL image on DockerHub, which has arm64-compatible images. The other items related to username, password, and database are items that need to be filled in anyway (here or in the values.yaml file), and the tag just ensures I’m using the same version that the bitnami image would have used, again to minimize any downstream conflicts.\nAnd that was it! I used the bitnami chart with the postgres image, and it worked!\n\n\nredis\nNext up, our in-memory data broker.\nThis process was largely the same as with PostgreSQL, with one notable deviation: I also set the flag to put redis in standalone mode, given that my Pi cluster is resource-constrained and couldn’t afford to have the HA version that, I believe, is the default for the bitnami chart.\nHere’s the helm command:\nhelm install redis bitnami/redis \\\n    --set global.redis.password=\"my_redis_password\" \\\n    --set architecture=\"standalone\" \\\n    --set image.repository=\"redis\" \\\n    --set image.tag=\"7.0\"\nAgain, the password is something we need to set up anyway, the architecture is set to standalone to minimize its in-memory footprint, tag is meant to match with the bitnami version, and finally the image.repository points to the official redis image on DockerHub which, like PostgreSQL, has an arm64-compatible version.\n\n\nelasticsearch OpenSearch\nI tried to get elasticsearch to work. I really did.\nI started off the same way as with postgres and redis: like the first two, there are only a few critical global parameters that need to be set, and they’re the usual suspects–change the image registry to point to the official image on DockerHub, change the image tag to match the bitnami image version, and… that’s really about it.\nThe hang-ups, crashes, and reboots started immediately. Turns out, elasticsearch is incredibly resource-intensive. So I set about trying to set absolutely minimal overheads: setting master and data replicas to 1, constraining the java heap size, and disabling ingest… none of which worked.\nEven aside from the resource constraints, there was a second problem. For whatever reason, the bitnami chart for elasticsearch has a second container–the “kernel settings modifier”–that is part of the pod, and which also has an image that, by default, is not compatible with ARM. So in theory, to get elasticsearch to work with the same technique, the following fields would also have to be changed in the helm chart:\n    --set sysctlImage.registry=\"ghcr.io\" \\\n    --set sysctlImage.repository=\"zcube/bitnami-compat/bitnami-shell\" \\\n    --set sysctlImage.tag=\"11.0.0-debian-11-r39\" \\\nThis is a bit different from the changes made with postgres and redis. There is no “official” distribution of the “kernel settings modifier” image, as this is exclusive to bitnami. Instead, we needed to go to the bitnami-compat project which is attempting to make bitnami-compatible arm64 images for all the major charts, and which could feasibly serve as drop-in replacements for redis and postgres as well (I just didn’t try them because I got them working before discovering bitnami-compat). But it’s perfect for this situation.\nSuffice to say, this completely solved the architectural compatibility issues, but I still could not fix the resourcing problems without fundamentally hobbling elasticsearch to the point of futility.\nInstead, I followed some advice from the Mastodon devs who have, unofficially, been able to get OpenSearch to work as a drop-in elasticsearch replacement in Mastodon.\n(Side note: OpenSearch is based on Apache Lucene, which was the progenitor project to Apache Mahout, for which I’m a member of its PMC! Small world. I love open source &lt;3 )\nTurns out, OpenSearch is remarkable, both in its minimal resource usage and with its ease of dropping right in where elasticsearch would go. My only complaint was the chart’s use of a multi-line yaml string in its settings, which–to my limited knowledge and experience, at least–precluded its exclusive command-line use, and forced me instead to modify the values.yaml and pass that directly to helm. Still, there were very few modifications I needed to make–here’s an indicator with line numbers corresponding to what is currently the latest version of the chart (committed Jan 3, 2023):\n# Line 8: again, needed to keep things minimal\nsingleNode: true\n\n# Line 22: just to be obnoxiously consistent\nreplicas: 1\n\n# config.opensearch.yml | plugins.security\n# Insert the following line just below Line 61\n# *** This might be the single most important change! ***\ndisabled: true\n\n# Added somewhere under persistence, after Line 187\nstorageClass: &lt;my storage class&gt;\n\n# Line 299\nsecurityConfig.enabled: false\nThat’s all I needed. Then by passing the edited values.yaml to helm install, it ran just fine.\n\n\nPostamble\nThat’s it for the prerequisites! At this point, you could pretty much spin up a Mastodon instance as configured. However, before getting to how I went about that process, I wanted to touch on one final problem I ran into, which–despite the nit-picky-ness of getting these arm64-compatible dependencies working–is where I actually spent most of my time trying to get Mastodon up and running: obtaining an SSL certificate through Let’s Encrypt.\nUntil next time!\n\n\n\n\n\n\nUpdate: Feb 24, 2023\n\n\n\nVery recently, this post showed up on a closed Mastodon helm chart ticket: it looks like Bitnami is now fully supporting ARM-compatible images on their DockerHub (I checked Postgres and it does indeed have ARM tags on the builds). I haven’t tried them out as of this update, but in theory it should more or less obviate the need for this entire post! Hooray, progress!\n\n\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Mastodon, {Part} {III:} {Configuring} and Installing the\n    Prerequisites},\n  date = {2023-02-09},\n  url = {https://magsol.github.io/2023-02-09-configuring-and-installing-prereqs},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Mastodon, Part III: Configuring and\nInstalling the Prerequisites.” February 9, 2023. https://magsol.github.io/2023-02-09-configuring-and-installing-prereqs."
  },
  {
    "objectID": "posts/2023-01-25-mastodon-helm-chart/index.html",
    "href": "posts/2023-01-25-mastodon-helm-chart/index.html",
    "title": "Mastodon, Part II: The Mastodon Helm chart",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\n\nIntroduction\nPart I: My home network topology\nPart II: The Mastodon Helm chart (this post)\nPart III: Configuring and installing prerequisites\nPart IV: The waking nightmare that is Let’s Encrypt\nPart V: Actually installing Mastodon\nConclusions\n\nI don’t know about you, dear reader, but when I first started this journey into teaching myself kubernetes, I was elated at the prospect of Helm: a “package manager for kubernetes”, it said! Thank the cloudless heavens; I was getting so bogged down with managing separate yaml files, I was thrilled at the prospect of someone just setting some reasonable defaults and packaging it all together.\n\n\n\nSuch a cruel realization.\n\n\n\nIntroducing the Mastodon chart\nYou can find the latest version of the Mastodon chart here.\nI should mention: when I started working on this in early December, the chart was actually still part of the main Mastodon repo! This meant that changes were much slower to be merged, and as a result I had to implement some workarounds that have since been fixed in the newest chart. Even so, I’ll point out 1) any changes I made, 2) whether those changes still need to be made now, and 3) relevant PRs.\nThe chart repo’s README linked above provides pretty good instructions for getting up and running. Or, in my case, to get some initial error messages that pointed me where I needed to go next.\nAt the bare minimum, everyone has to fill in:\n\nthe whole mastodon.secrets section (four keys)\nthe postgres and redis sections (whether or not they’re enabled in the chart)\nthe mastodon.stmp section for the mailer’s SMTP settings (not technically required, but nobody will be able to register with your instance or reset their passwords without them)\n\nBecause of my circumstances, I also had to modify the elasticsearch section (that’s another bitnami image that wasn’t ARM-compatible, like redis and postgres; but I’m leaving all three of these for the next post!), the ingress section (because I was running traefik instead of the default nginx), and the mastodon.persistence section (because I was using a local NAS for storage–I know, not recommended for production, but for a two-user instance? no problem).\nSo with that lengthy introduction and background out of the way, the salient points here and the primary guiding principles in diving into the chart are:\n\nDisabling the dependencies (elasticsearch, redis, postgres) so I could install them myself later (next post!)\nAdding NAS storage as the primary storage mechanism (I was using nfs subdir external provisioner)\nConfiguring ingress to work with traefik instead of nginx\n\n\n\nThe “easy” stuff: storage and ingress\nProbably the easiest modification to make was the storage. Under mastodon.persistence, there are two main groups: assets and system. They both have their own persistent volumes in case you need to dramatically alter their respective configurations, but I went with the default, adding only one line to each subsection (since storageClassName wasn’t even listed in the default chart, but has templates in the backend that will handle the key-values if provided):\n  persistence:\n    assets:\n      # -- ReadWriteOnce is more widely supported than ReadWriteMany, but limits\n      # scalability, since it requires the Rails and Sidekiq pods to run on the\n      # same node.\n      accessMode: ReadWriteOnce\n      storageClassName: my-nfs-storage-class ### ADDED THIS LINE\n      resources:\n        requests:\n          storage: 10Gi\n    system:\n      accessMode: ReadWriteOnce\n      storageClassName: my-nfs-storage-class ### ADDED THIS LINE\n      resources:\n        requests:\n          storage: 100Gi\nThat’s it! Mischief managed.\nFor ingress, things were a little more complicated. Not because it required more configuration in the chart itself, but because it required more configuration ahead of using the chart at all. The ingress configuration in the Mastodon chart itself masks the hours spent getting traefik set up exactly the way I wanted. Sadly, this is beyond the scope of the Mastodon instance setup (it will definitely appear in a blog post about just getting my k3s cluster off the ground!), but I will discuss configuring the TLS support / SSL certificates in a later post in this series, so stay tuned.\nHere was my configuration (changes from the current default are marked, and comments are deleted for brevity):\ningress:\n  enabled: true\n  annotations:\n    cert-manager.io/cluster-issuer: \"letsencrypt-prod-dns\" ### ADDED - will go over in detail in a future post in this series\n  ingressClassName: traefik  ### MODIFIED - added the ingress class name I used\n  hosts:\n    - host: quinnwitz.house  ### MODIFIED - my instance domain name\n      paths:\n        - path: '/'\n  tls:\n    - secretName: mastodon-tls\n      hosts:\n        - quinnwitz.house ### MODIFIED - my instance domain name\nThat’s it! Relatively tame modifications, but belie a groundswell of configuration and wrangling that had already happened. In particular, note the tls.secretName field: I may not have modified it, but I did have to create a Secret named mastodon-tls ahead of deploying the chart! That was part of the magic of cert-manager behind the scenes, communicating with Let’s Encrypt and getting an SSL certificate set up (again, a future post–stay tuned).\n\n\nThe harder stuff: disabling dependencies and modifying templates\nOk, disabling the dependencies was actually easy. Here’s all it took:\n\nGo to redis, postgresql, and elasticsearch sections\nEach one has an enabled: key–set it to false\n\nThat’s it! They’re disabled. Your Helm chart is now fully ARM-compatible!\n…except by disabling all the bitnami charts, you’ve introduced an insidious bug where, for some reason, the Bitnami Common Library chart can no longer be found. Fortunately, the fix is easy.\nGo to the Chart.yaml file and add a new entry under the dependencies: list:\n - name: common\n   version: 1.x.x\n   repository: https://charts.bitnami.com/bitnami\nNow when you run helm dep update before installing the chart, the Common chart will still be downloaded and everything will work, even with the other bitnami dependencies disabled.\nUnfortunately, this leaves us with the trickiest part of the Helm chart modifications: actually tweaking the redis, postgres, and elasticsearch sections (and, in some cases, templates!) to work with the separate instances we’ll spin up later.\nElasticsearch doesn’t require any extra tweaking, so we can leave that alone for now.\nPostgres needs the following fields:\n\npostgresqlHostname: postgres automatically spits this out when you succesfully install it for the first time, so just copy/paste from that\npostgresqlPort: this is almost always 5432, to the point where that’s the default in the helm chart’s backend template\nauth.database, auth.username, and auth.password / auth.postgresPassword are set by you, the user when you install postgres separately; we’ll go over this in the following blog post\nit’s very important to note that auth.password and auth.postgresPassword should have the same value\n\nFinally, redis needs the following fields:\n\nhostname: like postgres, this is spit out automatically when you successfully spin up redis for the first time, so take note of it and copy/paste it here\npassword: this is set by you, the user when you install redis separately; we’ll go over this in the following blog post\nweirdly, I needed to set auth.existingSecret too\n\nTo the last point, I created the following redis-password.yaml file:\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mastodon-redis\n  namespace: mastodon\ntype: Opaque\nstringData:\n  redis-password: &lt;same value as password&gt;\nRunning kubectl apply -f redis-password.yaml into the Mastodon namespace got it working. I still don’t know why I needed both the Secret and the password in the helm chart to get it to work–it may work with just the Secret, or maybe whatever weird situation caused it was fixed and now just the password in the helm chart will work–but this operation was fairly simple and got everything working so I went with it. I created a PR for this a few months back, but it was rolled into a broader PR tasked with migrating the chart over to its own repository, so I’m not sure if its fixes were ever implemented.\nThere were some changes directly to the templates/configmap-env.yaml file that were needed, but thankfully many of these have already been addressed courtesy of some PRs:\n\nFix helm postgresql secret (#19678)\nAllow external redis instance (#6, replaces #20322)\nAdd option to configure external postgresql port (#20370)\nHelm chart improved for ingress (#19826)\n\n\n\nThanks Helm!\nThat about does it for setting up the Helm chart and its corresponding values ahead of installing it… which we won’t actually do for a couple more blog posts yet.\nFor now, I need to rewind a bit to go over 1) how to install the dependencies we just spent an entire blog post disabling and then configuring anyway, and 2) how to get SSL to work.\nOnce we get those items squared away, then we can circle back to the completed Helm chart and install a functioning Mastodon instance! Isn’t being a sysadmin great?!\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Mastodon, {Part} {II:} {The} {Mastodon} {Helm} Chart},\n  date = {2023-01-25},\n  url = {https://magsol.github.io/2023-01-25-mastodon-helm-chart},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Mastodon, Part II: The Mastodon Helm\nChart.” January 25, 2023. https://magsol.github.io/2023-01-25-mastodon-helm-chart."
  },
  {
    "objectID": "posts/2024-05-07-weblogpomo2024-day-7-the-importance-of-personal-projects/index.html",
    "href": "posts/2024-05-07-weblogpomo2024-day-7-the-importance-of-personal-projects/index.html",
    "title": "#WeblogPoMo2024, Day 7: The importance of personal projects",
    "section": "",
    "text": "I don’t think I’m alone in having a menagerie of personal projects. The constituents of said menagerie morph (some slowly, some quickly) as time passes, but it’s never empty. It hasn’t been empty since… high school? Earlier?\nYes, it’s sometimes disheartening to see how little progress I make on so many different fronts. Though, by simply writing out that sentence, I get just an inkling of how ridiculous it sounds.\nBut these projects, simply, keep me sane. I love creating things; I love building things; I love trying something out in the real world that is often outside the narrow purview of what my immediate employer is looking for. I like trying things for things’ sakes, though sometimes there is also a practical reason.\nLately I’ve been trying to get a new outdoor wildlife camera setup working. It’s a bit more technically complicated than the one I posted about last year so it’s taking me a bit longer to get things working. But I’m really enjoying doing it.\nPersonal projects are, after all, all about delight.\n\nLike most things, I think when it comes to #WeblogPomo2024, it’ll be a cadence of “when I can” as opposed to “EVERY F#$&ING DAY OR DIAF”. After all, if I’m writing a nontrivial fraction of the number of words Sir Terry Pratchett wrote on a daily basis during his illustrious career, I’d say I’m doing pretty well.\n\n\n\nCitationBibTeX citation:@online{quinn2024,\n  author = {Quinn, Shannon},\n  title = {\\#WeblogPoMo2024, {Day} 7: {The} Importance of Personal\n    Projects},\n  date = {2024-05-07},\n  url = {https://magsol.github.io/2024-05-07-weblogpomo2024-day-7-the-importance-of-personal-projects},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2024. “#WeblogPoMo2024, Day 7: The Importance of\nPersonal Projects.” May 7, 2024. https://magsol.github.io/2024-05-07-weblogpomo2024-day-7-the-importance-of-personal-projects."
  },
  {
    "objectID": "posts/2019-08-12-breath-of-the-wild/index.html",
    "href": "posts/2019-08-12-breath-of-the-wild/index.html",
    "title": "Breath of Fresh (albeit, indoor) Air",
    "section": "",
    "text": "This is a divergence that is simultaneously strange and entirely predictable.\nAllow me to explain.\nFirst and foremost, I’ve been training for my first marathon in 4.5 years for the past several months. It’s largely consisted of base-building, but in the last couple of weeks we entered the “official” 16-week marathon training period…\n…and my knee started pulling. Oh! And it coincided with the first week of decent summer weather we’ve had here in Athens since…2018? And if the past two weeks are any indication, this summer is going to be as bad as that brutal one in 2016.\n\nAnyway!\nSince I noticed the pulling in my knee the week before “official” training was to begin, my coach and I agreed–in the name of being super-cautious this early in the training cycle–that I would take a week off from running, focus on cross-training and physical therapy exercises, and let my knee heal up. During this time, I dove into the 2017 hit Zelda: Breath of the Wild, the new Zelda release for the Nintendo Switch, and logged–to use the technical term–a shitton of hours.\n\nLet me back up a little further.\nI’ve never been secretive about my love of video gaming (and board gaming, and regular old sportsball gaming… any kind of gaming, really). But my real passion in video games has largely been constrained to variants of first-person shooters and real-time strategy. This includes the usual suspects like Left 4 Dead 2 and StarCraft II, but also slight variations like Civilization V (haven’t gotten the hang of VI yet), Cities: Skylines, Homeworld, and Sins of a Solar Empire.\nThe upshot: Zelda has never really been on my radar.\nI mean, of course I’m familiar with the Zelda franchise. Back in the days of the OG GameBoy, I played Link’s Awakening. A lot of it. I played through it so many times I eventually figured out how to find enough “secret seashells” to get the Master Sword just before completing the 4th of the 8 main dungeons.\n\n(if it’s possible to get the sword sooner than that, don’t bother, I don’t want to know)\nBut for those who know the larger Zelda lore, this installment exists awkwardly both within but also without the Zelda story. I mean–SPOILERS for a 20+ year old game SPOILERS–it was all a dream. Or was it instead a reality that existed within our own, but vanished when the Wind Fish woke up? Who knows?\n\n(apparently there was a Nintendo Switch remake of Link’s Awakening?)\nRegardless, while the usual Zelda themes certainly exist in Link’s Awakening, the specific story points don’t. So years later it was a shock to learn that Link actually had a primary antagonist, Ganon.\nWhen I first met my future wife, one of the many things about her that charmed me was her love of the Zelda franchise, especially Ocarina of Time. I was never super motivated to play the games myself, but something that seems almost uniquely exclusive to Zelda games: they’re incredibly fun to watch someone else play! Even better, The Lady and I soon discovered that, not only did we have different playstyles when it came to video games, but they complemented each other in a way that really helped her/us solve the puzzles in these games with ruthless efficiency.\nBut even after watching her crush Ganon in Ocarina of Time, Twilight Princess, and Ganon’s progenitor in Skyward Sword (which I bought her as a gift on the very first Nintendo console we ever owned together… awwwwwww), I still never felt the itch to play the game myself.\nAnd when I likewise bought Breath of the Wild, again for her to play, I once more assumed I’d watch, point things out here and there, and let her Zelda fandom run wild. Plus, I’d seen the reviews of this installment, and knew that while they’d thrown out a lot of “typical” Zelda grind, they also added a bunch of new gaming mechanisms that, on the surface, I held my nose for:\n\nBreakable weapons: I’d played games where weapons only lasted for finite amounts of time, and holy shit did this mechanic annoy the crap out of me.\nRecipes: I haven’t actually played a game with this mechanic, but it’s been showing up more frequently in RPGs, a gaming genre I generally have a very, very hard time getting into.\nSeasonality: This encompasses not only night/day changes, but also changes in weather patterns in-game, and subsequent changes in clothing / preparation of countermeasures (food, elixirs) in order to survive. I’ve played a lot of games with the night/day mechanic and have found it “meh” at best, super f*ckin annoying at worst. Combined with the need to constantly swap out clothing to adjust (and potentially lose abilities the previous clothing gave me) was irksome just to think about.\nNonlinear open world: Again, nothing against nonlinear gameplay–I for one love that Civilization has multiple win conditions, and that the StarCraft II missions are built to discourage “turtling” and force you to get creative–but as an avid follower of Zero Punctuation I know how “well” Ubisoft’s (for example) “nonlinear” “open world” games have faired, and for the life of me I couldn’t see a game on Zelda’s scope doing any better.\n\nBoy oh boy, was I wrong.\n\nI watched The Lady play a game of her own for quite awhile, and at some point just kinda thought: eh, why not? and started my own game.\nI was hooked. I can’t even explain why; even while writing that list of grievances, I kept thinking of examples other than Breath of the Wild with those mechanics and getting annoyed all over again. And yet, these are so well-done in Breath of the Wild that I don’t even notice them. Even moreso, annoyances in previous Zelda iterations–the “forced save points” of Skyward Sword, the nails-on-a-chalkboard running-back-and-forth over the Ocarina landscape to finish a simple side quest, the rupee limitations of literally every other Zelda game (until you bought a bigger rupee purse ???), the constant hunt for more arrows, and the lack of any jumping ability–they’re all gone!\nThe best thing I can say about this game is that they did an incredible job of 1) identifying the annoying things of previous Zelda games and cutting them out, and 2) introducing these new mechanics in a way that felt natural and intuitive. That’s really the crux of it: the game is easy to figure out, even while the actual gameplay is incredibly, brutally, and satisfyingly challenging.\nThat mastery of basics is why the game scales to such a massive landscape (thank you, travel points!); that’s why there’s enough room for three distinct and gorgeous dragons that fill you with excitement every time their music comes out of nowhere;\n\nthat’s why staying in the nearest stable during a thunderstorm or going deep into the arctic tundra feels so much like curling up in front of a crackling fire on a freezing cold day;\n\nthat’s why, even after completing part of a main quest, you’ll find yourself returning over and over to the same points on the map–to see an old friend, find a new side quest, or exchange some shiny rocks you could sell anywhere for a better price but you keep coming here because something about it makes you feel at home;\n\nthat’s why you can take a break in between main quests to try and ride a stag;\n\nand yes, this is an actual side quest.\nNintendo knocked this one clear out of the park. It’s so wonderfully and incredibly immersive: I go from exploring the freezing cold peaks of the Hebra mountains to chasing down a monster aficionado with a nighttime shop along the southeastern coastline with absolutely no recollection of how I transitioned from one to the other.\nBut by far, the single biggest surprise is the plot. It’s nuanced, and mysterious, and even chilling in some cases, and it has me on the edge of my seat wanting to know what happens next. Previously, I’ve always felt the plot in Zelda games was a perpetual weakness: Zelda/Link good, Ganon bad, bludgeon Ganon until bad goes away and credits roll. But this game–at least so far (I’m not done yet)–makes me think there’s something at work beyond Ganon and his usual hijinks. The “good guys” in particular don’t seem perfect; I’m being led to think they made mistakes!\nSadly, classes start this week, so it’s unlikely I’ll be making fast progress over the next few months. But I do know The Lady was pretty thrilled to unlock one particular character from previous Zelda games who, while technically present in this game, required some external convincing to join the quest:\n\nI am loving everything about this game. Go buy it and forget reality! It’s a great way to kill time while healing from an injury.\n\n\n\nCitationBibTeX citation:@online{quinn2019,\n  author = {Quinn, Shannon},\n  title = {Breath of {Fresh} (Albeit, Indoor) {Air}},\n  date = {2019-08-12},\n  url = {https://magsol.github.io/2019-08-12-breath-of-the-wild},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2019. “Breath of Fresh (Albeit, Indoor)\nAir.” August 12, 2019. https://magsol.github.io/2019-08-12-breath-of-the-wild."
  },
  {
    "objectID": "posts/2024-01-05-a-year-of-extremes/index.html",
    "href": "posts/2024-01-05-a-year-of-extremes/index.html",
    "title": "2023: A year of extremes",
    "section": "",
    "text": "Where 2022 tried its hardest to kill me, 2023 merely put that killer instinct in neutral. A vast improvement to be sure, but it requires substantial context to fully appreciate.\nOk, maybe that’s not fair to 2023. It had some highs. It also had some lows. All told, 2023 was one of the most bimodal years in my recent memory, perhaps second only to 2020."
  },
  {
    "objectID": "posts/2024-01-05-a-year-of-extremes/index.html#footnotes",
    "href": "posts/2024-01-05-a-year-of-extremes/index.html#footnotes",
    "title": "2023: A year of extremes",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nPost-COVID lockdown mileage records. My insane all-time annual record set in 2014 still stands. For now.↩︎\nWhat can I say? The past few years have been a marathon.↩︎\nI have an entire draft written about my issues with academia at the institutional, state, and local levels, but I don’t know when, or even if, I’ll post it; if you want to talk about it though, I’m happy to.↩︎"
  },
  {
    "objectID": "posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/index.html",
    "href": "posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/index.html",
    "title": "Jedi Outcast: Echoes of a bygone gaming era",
    "section": "",
    "text": "I should start by issuing fair warning: this is a post I’ve been meaning to write in some form or another for the better part of the last 15 years.\nCommence “old mang” jokes.\nBut there was a group of gamers I met many years ago who, to this day, remain some of my best friends. We don’t keep in near-daily contact like we used to, but it doesn’t take more than a couple friendly jabs to pick up right where we left off. Particularly at a time when I feel very alien and removed from the gaming community, both by virtue of stage of life as well as events of late, I want to hold up a sliver of the gamer’s experience that, at least for me, was phenomenally positive and formative.\n\nJedi Outcast\n\n\n\nSource: https://www.gog.com/game/star_wars_jedi_knight_ii_jedi_outcast\n\n\nThe entire story essentially revolves around a video game: Jedi Knight II: Jedi Outcast. But while this seemingly-innocuous run-of-the-mill Star Wars game was the central impetus, its unique properties–which I can honestly say haven’t been replicated in more recent games–gave rise to a community that still impacts me to this day.\nJedi Outcast, colloquially referred to either as “JK2” or “JO”, is a first-person shooter that continued the adventures of Kyle Katarn started in the original Dark Forces and carried forward in Jedi Knight. It was, far and away, the finest installment of the series.\n\nJO came with a single-player campaign that involved an attempt by a fallen Jedi to harness Force energy in order to artificially infuse his warriors with the Force, essentially creating dark Jedi on-demand. It was quite engaging! But the real novelty, and probably the most unexpected success, was the multiplayer.\nI mentioned before it had some unique properties that gave it its staying power. Among others, and in no particular order:\n\nIt was the first game in the series to feature truly immersive lightsaber mechanics. Dark Forces II had introduced lightsabers, but to wield it was essentially like watching a monkey hit something with a stick. JO made it look like it came out of a movie.\nThe Force powers were also considerably better-integrated with gameplay. Again, Dark Forces II had pioneered Force powers, but they were clunky in their use; in fact, you could beat the single player without ever using a single one. JO seamlessly wove their use into the game.\nThe developers open-sourced the server-side JO code almost immediately after release, prompting the explosion of a modding community around the game, building everything from new in-game characters to new multiplayer maps to entire server mods.\nThe multiplayer enabled what we affectionately referred to as a “chat room with a GUI”: an environment where players could shoot and duel, but also literally stand around talking.\n\n\nIn the picture above, the dark text boxes you see above some players heads are the tell-tale indicators that the player is typing a message. Meanwhile, battle can literally rage around them.\nAll this gave rise to an environment conducive to the formation of “gaming clans”: communities of fellow gaming nerds who enjoyed the game and the people in it. Numerous clans popped in and out of existence, with as many varieties of names and purposes and values as individuals on the planet.\nHere’s where I entered into things: my story begins in the fall of 2003, when I was just starting my first semester as a freshman at Georgia Tech.\n\n\nFall 2003\nI’d been the proud owner of a JK2 CD-ROM for a year or so at that point, but hadn’t had a desktop powerful enough to play it. Now, armed with a brand-new Dell Optiplex with a 3GHz processor and 4GB RAM, I had enough horsepower to give the game a test drive.\nOh yeah, and also study Computer Science at one of the finest institutions for the field in the world. But I digress.\nI devoured the single-player JO campaign, loving every minute of it. But when it came to the multiplayer, I was very hesitant. I remembered all too vividly the frantic competitiveness of multiplayer StarCraft from high school–I’d been ranked in the Top 1000 at one point, but pretty much to the detriment of my sanity–and really didn’t want to get similarly sucked into an anxiety-inducing hyper-competitive environment where, at the end of the day, all I had to show for my hours sunk into the game was a migraine.\nWell, I could say one thing for sure: I was nowhere near as good at the multiplayer as I’d thought I was from the single-player. I got my ass handed to me. A lot. But another thing I quickly learned: the vast majority of the folks playing this game were chill. The whole “chat room with a GUI” thing.\nSoon, I fell into an online clan, called “Imperial Forces”. But my courtship with the clan was extremely brief: evidently, any bad clan can have one decent person in it, and after a very short membership–maybe a week?–I departed its ranks.\nAnd discovered the “Power of Thee.”\n\nYes, it was indeed “cleverly” titled to invoke a particular acronym. But beyond the name, it was the people: every single one of them was both super-chill and super talented. I could tell there was considerable variation in age, both younger and older than me, but they were wholly welcoming. And so freaking good.\nLucky for me, they recruited me. But like any good Jedi organization, new recruits–apprentices–are assigned a master. My master was a veteran of JO, a Knight named Kaleb. He helped me learn the intricacies of the game, as well as the “protocols” that had arisen around the GUI-ified chat room of JO, things like\n\nIf someone has a chat window above their head, don’t attack them\nWith great [admin] power comes great responsibility\nDon’t take things too seriously, otherwise you’ll get C4’d\n\n\nAt some point, I was deemed ready for my “Trials”. Apprentices such as myself pass their Trials and become full members of the clan by winning at least 4 out of 6 lightsaber duels with Knight-level members or higher. I don’t remember my exact record–I don’t mean to toot my own horn, but it very well might have been 6-0 (Kaleb was a great teacher!)–but I passed my Trials and was duly Knight-ed into PoT.\n\n\nSpring 2004\nTo provide a bit of context: JO was released in 2002. So right as I was hitting a stride with my new clan and actually git good at multiplayer, the game had already been out for over two years. And on the “clan” scene, two years is an eternity. There were senior members of PoT–the “Council” members, including the original founders–whom I’d never met because they’d already moved on, essentially having gone permanently inactive. The active membership–Knights who’d passed their Trials and made up the bulk of the active membership, and Jedi Masters who were promoted from Knight by virtue of some outstanding contribution to the clan–kept things fresh by recruiting new talent.\nBut the gears of time ground on. Spring 2004 was a particularly rough time for me personally, as I settled into my second semester of college and I was caught somewhere between who I’d been in high school and who I wanted to become as I moved into adulthood. My roommate, a dear friend from high school, was also going through some really hard times and ended up dropping out halfway through the semester, so I ended up being alone more often than not.\nAt the risk of sounding melodramatic, JO and PoT was an anchor; I was getting to know my fellow clanmates better, chatting with them directly over AOL Instant Messenger instead of exclusively through JO. Getting to know them as people, rather than avatars. Sharing experiences. It… helped. In more ways than I can recount, even now.\nBut that anchor was shifting in ways I hadn’t been around long enough to realize.\n\n\nSummer 2004\nIn many ways, this was one of PoT’s strongest seasons. In others, it was almost its end.\nI’d (somehow) secured an internship at an Atlanta-based supply-chain company, but because they had no idea what they wanted me to do, I found myself with a lot of free time.\nSo I exercised some of the new network connections I’d made through JO and organized an inter-clan match: a day-long competition between PoT and They Might Be Jedi, or TMBJ.\n\nTMBJ was the JO clan. Everyone wanted to join them, and failing that (which was often), wanted to be them. They were kind, they were competitive, and they were good at everything. Their most famous member went by the handle “ShroomDuck”, and he was a singularly talented individual who was equal parts charming in person, deadly with a lightsaber, and wicked talented with JO modding tools, Photoshop, and web design.\nBasically, a bit of a personal hero at the time. So, I submitted a challenge to TMBJ through him and on behalf of PoT to engage in a bit of well-mannered duels to the death.\nGuess what? We won!\n\n\nTMBJ was stacked with talent, but somehow our own cohesiveness and teamwork–led by the inordinately talented likes of IronSlayer, Bill the Pony, Rob, John, Vader, and my master Kaleb–bested the JO juggernaut that day.\nThen, mere weeks later, it all came crashing down: pretty much every one of those individuals announced that, for various reasons, they were leaving. We all knew it wasn’t coincidence they were all leaving at the same time, but as I was still a Knight at the time and not privy to the discussions of the Council (to which Kaleb had been promoted since), I didn’t have any details.\nSuddenly, we were a shell of ourselves: the 5-6 people who comprised a good 75% of the clan’s activity were gone.\nI’ve been told before–by coaches, by therapists, by parents, and by my wife–that I don’t know how to quit. It’s not always meant as a compliment, either; there are times when you really should cut your losses and walk away. I’ve learned how to do that more as I’ve gotten older, but suffice to say, my 19-year old self knew little to nothing of that skill.\nSo I dug in. Over the next several months, I configured my own server to use for PoT (IronSlayer had run our local server until then), helped revamp the clan website, and advertised the clan whenever I was in-game. I sought out contacts I’d made in-game and brought them to our servers, increasing the baseline activity level that would attract more new blood. I relentlessly badgered the shattered Council with ideas, initiatives, and new recruits, insisting the new blood was there if I could just have permission to recruit them.\n\n\nFall 2004\nTo their credit, after the initial shock wore off (and with some prodding on my part), the Council got down to work. I was quickly promoted to Jedi Master, and in short order, instated on the Council to fill the open seats left by the departures of the previous season.\nKaleb had a made a 1-year anniversary graphic back when he’d still been in the clan, so I followed suit as both a tribute to someone who’d taught me everything and also as a nudge to everyone else that I wasn’t going anywhere, and neither should they.\n\nYes–I even learned from Kaleb how to make custom player skins. I wasn’t nearly as talented as he was, as I basically applied minor tweaks to a default built-in skin, but I was awfully proud of the “PoT” shoulder and thigh logos, the shamrocks on the calves, the lightning bolt across the chest, and the giant “69” emblazoned on the back.\n\nOur ranks started swelling again. Too fast on occasion, even; we had to shut down recruitment at times in order to fully process applications and keep some semblance of order on our servers. Some of the best friends I made through PoT either appeared during this time, or the circumstances were such that an acquaintance deepened into a friendship.\n\nRob was this way: a total goofball who was one of the best “gunners” (term for a JO player who preferred the point-and-shoot weapons to lightsabers) I’d ever encountered. To the casual observer, he and I appeared almost as opposites: I was all about structure and regimen; he just wanted to shoot at something and crack jokes. But when we were both promoted to the Council in the wake of the summer departures, against all odds we worked extraordinarily well together, our differing styles complementing each other and resulting in a friendship that endures to this day.\n\nTahiri was another. He always kept a veil of secrecy around him, in no small part because his in-game avatar was female (his name “Tahiri” follows an Extended Universe character by the same name, who is female as well). But over AIM I learned he was a mere year older than I was, and as we worked closely to keep PoT alive in that summer and fall of 2004, we forged a relationship similar to the one I had with Rob, with the roles reversed: I kept him from being too rigid, and he kept me from being too slapdash.\n\n\n2005\nWe continued recruiting, and I even managed to snare my literal Best Man, The Danimal.\n\nOur renewed membership enabled us to engage in more inter-clan matches. We even managed to win a few of them!\n\n\n\nDidn’t do so well here–if TMBJ was #1, UJ was #2. Especially in saber duels, they were unstoppable.\n\n\n\n\n\nNJOC was a much smaller clan, and through a rigorous practice regimen in the weeks leading up to the match, we actually ended up winning!\n\n\nI do want to mention something here, given Kaleb brought it up in his blog post some months ago: the Delta Order.\n\nIn the intervening months after the departures of mid-2004, it was clear–especially from the matches–that PoT was seriously lacking in gunning talent. Rob was still among the best I’d ever seen at any point in the game, but if he wasn’t around, we really had nobody who could even come close to matching his play level. I was getting better, but again we really didn’t have anyone else who was a pure gunner.\nDelta Order was an attempt to remedy that: Rob and I would work together to groom younger members who demonstrated a knack for gunning to be the next Rob, essentially. It wasn’t meant as a super-secret infiltrate-clans-from-within, CIA-like operation. Admittedly, we could have just as easily had a regular low-key practice session for anyone who wanted practice shooting things, but we thought this might make it more “official” and interesting to the younger players if they got a cool logo to go with their training efforts.\nIt worked, somewhat: we trained Monkeh into one of the finest gunners in the clan (outside Rob, of course), and brought a lot of other players’ skills more into parity with the general audience of the game. It was partially thanks to the Delta Order that we ended up winning the aforementioned match against NJOC.\n\n\n2006\nAt some point, we started organizing intra-clan matches in the form of summer tournaments. These were a blast!\nWe made entire brackets, and organized two separate double-elimination tournaments: one with best-of-three lightsaber duels, and the other with first-to-15-kills run-and-gun duels, appealing to the two flavors of JO player.\nThe response was overwhelming, and was a huge boost to the clan. Though to this day, I’m stll not sure how Rob of all people won the lightsaber competition. I think I just forgot to fill out the rest of the other bracket, but am pretty sure that was the year Rob won both competitions. WTF?\n\n\nSomewhere in here, I colluded with a couple of my friends in PoT to stage an April 1 trick where we would all announce our immediate retirements from PoT. Tahiri wasn’t pleased. Note the shift as he starts with sheer panic, then later after reading an “April Fool’s!” follow-up post, shifts to relief with some good-old-fashioned ribbing.\n\nWe were having a lot of fun. I’m glossing over a lot–there was intra-clan drama, clashing of personalities, and the Council (myself included) made a lot of noob mistakes in handling them–but for all intents and purposes, the clan was humming along.\n\n\n2007\nFor all practical purposes, this is where my role in PoT–after a solid four years–started waning. I was entering into the last year of my undergraduate studies at Georgia Tech and eyeing graduate school, was in a serious relationship that I was trying to convert from long-distance to short-distance, and JO was really starting to show its age: fewer new players were appearing, and more experienced hands were leaving. While we still technically had a full complement on the Council, only three of us–Rob, Tahiri, and myself–were still active in any meaningful capacity. Our Jedi Master ranks were pretty thin, and while we had many active Knights, our apprentice prospects were drying up.\nIn short, it was time to start having difficult conversations: PoT, at least in its current form, wasn’t going to last forever. And that end was looking to come sooner and sooner.\nIn the months that followed, a lot of options were thrown out, from continuing as we were to converting into a less formal “gaming community” (TMBJ had followed this route, having given up its JO-specific branding over a year prior) to disbanding entirely. None were particularly appealing; we didn’t want PoT to simply disappear, but our leadership was aging; I knew I couldn’t invest the kind of time and effort in revamping PoT that I’d put in back in mid-2004.\nIn short: this was one of the first lessons I learned in walking away. But, in classic “me”, it wasn’t because I came to some incredibly-wise decision to that effect, but because I was slapped in the face with the right decision.\nAt some point, we made the decision to convert to a “gaming community” that had affiliations with multiple games, including JO, but also: Battlefront, StarCraft II, and even Left 4 Dead 2. We had a ranking system set up, and a representative “Senatorial” ambassadorship for each game. The clan seemed on board.\nAnd then simmering egos exploded, and it became clear: we’d made the wrong decision. We quickly changed course, and decided it was time for the venerable PoT experiment to end. In our naive excitement to keep PoT alive, we ignored very real structural problems in the membership that had not been addressed.\n\n\nPostscript\nEven now, I struggle for words to encapsulate everything the Power of Thee taught me, from making my own character skins; configuring and administering dedicated servers; hacking the shit out of Photoshop to make halfway-decent signature graphics; glitching JO in precisely the right way to grab the Flechette launcher through the floor; bunny-hopping; @@@@@@@@@@@@@@@@@@@@-ing.\nBut even more important, and less amenable to precise wording, is the relationships I made and continue to learn from.\n\nKaleb, who I don’t speak to nearly often enough but really taught me everything I know, and even though we disagreed on some things in the end I still have the utmost respect for; he fights for who he loves, and that’s a kind of interpersonal honor that is rare these days\nUnderwhelmed, who selflessly hosted our forums for years, and until I lost touch with him was a kind of unofficial mentor; I hope he’s still rescuing tacos and giving them safe haven in his stomach\nMormi Ganry, a fellow tech guru whose commitment to always doing the right thing was above reproach; of course, this included that amazing instance when he managed to upload Linksys router firmware onto the open admin console for an unsecured D-Link router that belonged to a troll on our server…\nRob, who despite (or because of?) his incessant in-game trash-talking, was one of the most honest and heartfelt individuals I’d ever met\nTahiri, who was my conscience on more than one occasion, and my instructor on many others, and who helped me through relationship issues during my formative years\nJelle, a fiercely loyal friend who I actually visited in Belgium during my 2007 study abroad, and who I also don’t speak to nearly often enough, but who also kept me honest when we disagreed on multiple different fronts\nXixes, who was the quintessential “PoTnah”: always available to help anyone who might need it, always willing to lend a hand, always happy to jump into a clan match even if he knew he wasn’t the right person for the job; he’d give it everything he had\nSwordFish, a Canadian with a wicked hilarious sense of a humor and endless capacity for friendship who I have since sadly lost touch with\nMonkeh, an often-controversial individual who spoke almost exclusively in l33t-sp34k, who didn’t care if he rubbed you the wrong way, and who turned into an exceptional gunner, but whose dedication to PoT and its leadership was never in question\nIain, a quiet and polite member whose unassuming disposition masked a clever wit and incredibly sharp intellect, and especially technical talent, that led us to grant an overdue post-PoT promotion to Jedi Master\n\n…and many, many others: Vader, John, Bill the Pony, IronSlayer, Pablo, Jason, Anakin, Chrury, Deadclown, Rica, Secca, Snarf, Ragnarok, SeparateWays, and plenty others whom I’m forgetting or never knew that well.\nSuffice to say, the clan–really, the people in it–were instrumental in making me into who I am now. I use a lot of the same leadership strategies in my day job, mentoring and instructing new students and training them into researchers; working through personnel conflicts and managing competing egos; and somehow making sure I have time to keep my own skills up to par with the playing field at large. In retrospect, it’s amazing how such an otherwise run-of-the-mill FPS could have had such an outsized impact on me, but I’m eternally grateful for it, and hope only that I can continue to learn from it.\nOnce I find where Tahiri went.\n\n\n\n\n\nCitationBibTeX citation:@online{quinn2018,\n  author = {Quinn, Shannon},\n  title = {Jedi {Outcast:} {Echoes} of a Bygone Gaming Era},\n  date = {2018-04-26},\n  url = {https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2018. “Jedi Outcast: Echoes of a Bygone Gaming\nEra.” April 26, 2018. https://magsol.github.io/posts/2018-04-26-jedi-outcast-echoes-of-a-bygone-gaming-era/."
  },
  {
    "objectID": "posts/2023-06-06-this-post-is-about-burnout/index.html",
    "href": "posts/2023-06-06-this-post-is-about-burnout/index.html",
    "title": "This post is about burnout",
    "section": "",
    "text": "…but before I get to that, I want to talk about a movie I saw recently and a book I read recently.\n\n\n\n\n\n\nCaution\n\n\n\nThe following section contains some minor character spoilers from the 2023 film Spider-Man: Across the Spider-Verse. No major plot reveals.\n\n\nMy wife and I were recently able to see an evening showing of Across the Spider-Verse. It was phenomenal; we loved it. As someone who stuck with the MCU movies a little longer than most of my friends, I’ve been feeling “meh” toward superhero flicks for about a year now. We haven’t seen the newest Black Panther, Ant-Man, nor Guardians movies, nor have we felt an overriding urge to watch them even when they hit streaming (though I’ve heard the Guardians movie is pretty solid, so that may be the exception. Maybe).\nThe Spider-Verse movies, even though solidly in the superhero genre, have been universally incredible. Possibly helped by the fact that there’s only two of them, with the third due out in March 2024. The animation is beautiful, the writing is top-notch, the humor is subtle and perfectly timed, and the characters are fantastic. I loved how this movie dove more into Gwen’s own background, and I was particularly pulled in by Spider-Man 2099.\nHe’s a relectant hero (like all the Spiders), doing what he thinks is right, ultimately trying to prevent what happened to him (which was terrible, even by the generic Spider-Trauma Barometer™️) from happening to anyone else.\nExcept… he fought too hard for too long. Even surrounded by others, he isolated himself. He made hard decisions, and bit by bit the consequences of those decisions ate him up. He stared into the abyss, and the abyss eventually took up residence. He lost sight of why he started his work in the first place—when you have to repeat “We’re the good guys!” twice in a row, practically shouting it at your subordinates, one has to ask who it is you’re trying to convince—and became the very thing he ostensibly started out fighting against.\n\n\n\n\n\n\nCaution\n\n\n\nThe following section contains some minor character spoilers from the 2023 novel The Frugal Wizard’s Handbook For Surviving Medieval England. No major plot reveals.\n\n\nI also just devoured the latest Brandon Sanderson book, The Frugal Wizard’s Handbook For Surviving Medieval England, which was officially called “Secret Project #2” for most of the past 12 months since his big 2022 Kickstarter. It’s not part of any of Sanderson’s other established universes, so it’s a wonderful standalone novel about a near-future dimension-hopping guy who loses his memories upon arriving in an unknown dimension set in Medieval England. He has to figure out who he is and why he’s in that dimension, as others—both natives of the dimension, and people from his own—are trying to kill him.\nI loved the story because, while it had many familiar beats storytelling beats around a journey of self-discovery, its final conceit and ultimate reveal about the character had a surprising amount of depth.\nUltimately, it was a story of a character who’d had a lot of bad breaks in his life, coupled with a few poor decisions, which culminated in internalizing the belief that he was not deserving. When he inevitably failed, he believed he deserved it. His well-meaning “friends” gave him the usual “you need to try harder, good things come to those who try.” Which of course is strictly true, but leaves out important context: when you’ve had a string of failures, either from bad decisions OR simple bad luck—or most realistically, some ugly combination of both—you start internalizing those failures as the default mode.\n\nYou lose a little—and that makes you wonder if you deserve to lose. So you lose some more. And it all compounds. You’re behind, no matter how you scramble to stop it. You’re too far gone.\n\nThe memory loss ends up being a godsend, because by the end—when the main character has regained his memories—he can compare himself to someone who, just days before, took action he believed was right without the mental baggage of failure as the default, and for that very reason ended up winning more often than he lost.\nBut the critial discovery, to me at least, was that belief in oneself does not exist in vacuum. You don’t necessarily believe in yourself because you woke up one morning and made the decision. You also look (through the lens of your own experience) at your wins and losses in the past, and use that assessment to decide whether or not you’re worth believing in. And that self-assessment can be brutal; it can end up digging a hole that is nigh impossible to get out of, perpetuating failure.\n\nWhere there’s smoke…\nIn January 2015, I started a tenure-track position at the University of Georgia. In August 2021, I was officially promoted to Associate Professor, with tenure. And by early 2022, I was convinced that I needed to leave academia entirely, a sentiment that has not changed since then.\nWhy leave? For those reasons and all the parts of that thinking that led here, I’ll have a post later. Maybe. I’ve been working on a version of it for nearly two years now, but I’m not yet sure if it will see the light of day. It may just be for me.\nFor now, the reason is simple: I’m completely and utterly, spiritually and physically and emotionally, so-far-beyond-the-abyss, burned out.\nOf course, the reasons why the burnout got so bad are legion, and I will concede that many of those reasons are my own fault:\n\nI have a hard time asking for help\nI enjoy what I do to the extent of saying “yes” to things that sound exciting (everything sounds exciting!) without considering how it will get done\nI’ve always been somewhat of a people-pleaser, and so setting hard boundaries is difficult and exhausting, and it’s easier (in the short-term) to give people what they want\n\nThis has led to a situation where I’ve begun to expect failure as a rule. Not with scientific experiments or with code development—that’s wholly different (at least in my brain), and that’s not what I’m talking about here; if anything, my lab’s science has been one of the bright spots in all this—but rather, interacting with people: I expect that I’ll disappoint them somehow, which becomes a self-fulfilling prophecy because it’s happened so often in the last few years.\nAnd it happened because I was so severely burned out that I could barely function. I mentioned this in my new year’s post, though not really the full extent of it. Honestly, I’m not sure what its full extent is. If I take a really close look at the contours, I may have been burned out since early 2019, shortly after receiving my NSF CAREER award notice. I’ve been hobbling along ever since.\nThis burnout led to anger and resentment, and a feeling of having to single-handedly hold things together: that I was the only one competent enough to do what needed to be done. Inevitably, balls were dropped—because this is not a sustainable approach to literally anything—and the failures mounted, leading to feelings of nihilism and anhedonia.\nThis went on for years. I stared into the abyss for far too long, and when I had a chance to step back, I did not like the person I was becoming. We’re so far beyond schedule tweaks, productivity hacks, and “write for 30 minutes each day”; we’re well into “I need an entire semester, possibly an entire academic year, off, just to begin the healing process in earnest.”\nAnd yes, that’s ostensibly what sabbaticals are there for. But in a final might-be-hilarious-in-10-years power move, I’ve been denied to even submit a request for a sabbatical because “there’s no one else to teach the class you’ve been assigned for the fall, and there are already 40+ students registered.”\nSomewhere around this time in 2022, while I was working for Quansight, I was given the opportunity to do a 3-day online training in PyTorch for a client. In classic “me” fashion, I enthusiastically volunteered. But when the day came, I was so stressed out by the idea of teaching—a primary source of my burnout—that I broke out in full-body hives. That has happened to me only once before, though in that case we traced it to what was most likely improperly cooked shellfish.\n\n\nEmbrace the process\nRecognizing burnout is important. Counteracting burnout is important. Both of these steps are difficult to ascertain and implement. This blog post about burnout among core Python package maintainers addresses some of that. But there’s a third burnout thread I have to constantly remind myself of:\nBurnout decimates your physical and mental capabilities, and they don’t return overnight. It’s such a kick in the teeth when just recognizing burnout is so challenging, and moreso to stem the tide, but just because these have been done does not mean life immediately snaps back to normal.\nI’ve spent the last couple years wondering why running seems so much harder than it used to be, while running so much slower than I used to. I spent the day after the SciPy 2023 paper submission deadline (just this past Friday evening) kicking myself for not getting the paper done and feeling like a failure because of it. Years ago, debugging Python and PyTorch errors was straightforward, and prototyping machine learning models was relatively easy for me; while writing this paper, every error message was a multi-hour-long block on my progress. Working through them was like wading through molassess, and at the time I couldn’t understand why.\nIt’s because burnout doesn’t vanish overnight. It impedes your faculties, like sand in joints, simultaneously slowing things down and increasing the resistence. The knee-jerk reaction is to push harder, which flares the burnout and ultimately undoes forward progress. Which feeds into the failure mindset, and thus perpetuates the cycle.\n\n\nNot just surviving, but thriving\nI’ve been in survival mode for years now, just trying to get through each day and not really seeing more than a week or two ahead. It’s a good way to stay alive, but a terrible way to live. I’ve gone through long stretches where I have no motivation to create, or to learn, or to grow; instead, all my energy is focused exclusively on getting from one day to the next.\nI don’t want to simply survive, I want to thrive. I want to build, I want to learn, I want to grow. And as has become very clear over the past few years: that won’t happen for me if I stay in academia. I haven’t been able to make it work, and I’ve been at this for almost 9 years now. I’ve said it jokingly for years, but it’s also the hard truth: academia is a pie-eating contest where the prize is more pie.\nSo, I’m leaving. It suffices to say that by prioritizing healing from my burnout, and by extension prioritizing my family and friends and personal interests and hobbies, it is clear beyond any doubt that there is simply no viable universe in which these priorities can be met while remaining in academia. Of course, I’m existentially terrified—who leaves a tenured position for industry?!—but I’m also excited by the mere possibility of thriving.\nBurnout recovery is going to take awhile; after all, I spent years getting to this point. But I’ve also spent the better part of the last few months starting the recovery process, and there’s already been noticeable improvement. I have sustainable routines in place that are clearly doing me good, but I can’t make some of the biggest changes while I’m still in academia.\nI’ve recognized my burnout, and I’m taking every step I can to make the changes I need to thrive. But I have to keep reminding myself that things won’t improve overnight, even when I’m doing everything right. It’ll take some time for the pea soup in my brain to clear out, and it’s been an agonizingly slow process of rebuiding my physical body (not helped by potential long COVID symptoms, but that’s a post for another day).\nBut I at least want the chance to thrive. So I’m taking it. Wish me luck.\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {This Post Is about Burnout},\n  date = {2023-06-06},\n  url = {https://magsol.github.io/2023-06-05-this-post-is-about-burnout},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “This Post Is about Burnout.” June 6,\n2023. https://magsol.github.io/2023-06-05-this-post-is-about-burnout."
  },
  {
    "objectID": "posts/2023-01-14-year-that-almost-was/index.html",
    "href": "posts/2023-01-14-year-that-almost-was/index.html",
    "title": "2022: A year in review",
    "section": "",
    "text": "2022 was a fucking shitshow.\nForget the transition out of academia that fell flat on its fucking face in the final mile1. Forget the actual running that went from runway to runway, gunning the engine and building some speed on occasion but without ever quite taking off. Forget 2022’s parting shot of giving our entirely family COVID within days of the year’s end (save our daughter, miraculously and thankfully) when we’ve been so diligent for three fucking years. Forget that we’ve been pretty much the only ones still wearing masks on planes and at our daughter’s daycare, as if “I’ve decided to get on with my life” somehow makes the pandemic over simply by willing it; as if it’s impossible to “get on with life” while also taking basic fucking precautions that hurt no one and help everyone.\nAll of that was rage-inducing beyond words and each deserve their own posts to really break down. But the real story of my 2022 was of burnout that I foolishly thought I could outrun."
  },
  {
    "objectID": "posts/2023-01-14-year-that-almost-was/index.html#footnotes",
    "href": "posts/2023-01-14-year-that-almost-was/index.html#footnotes",
    "title": "2022: A year in review",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYes, there will be a future blog post on this. No, I’m not going to expound any further on it here.↩︎\nAsk if you really want to know.↩︎\nDon’t worry, I have an entire series of blog posts (six, I think?) planned to go over it in gross detail. Stay tuned!↩︎\nJust about 17 years ago! 😱 ↩︎\nDitch Goodreads!↩︎\nThis one’s for you, Mom and Dad 🎄✉️ ↩︎\nThe last half I ran was late 2019, almost a 3-year gap!↩︎\nNow I’m just fucking with you. Also I love footnotes, so expect to see a lot of them on every blog post.↩︎\nThough I did get invited to one on ChatGPT, and wow the temptation to say “yes” and then just burn the whole place down is overpowering… I’ll have to think about it.↩︎"
  },
  {
    "objectID": "posts/2018-01-06-new-year-new-blog/index.html",
    "href": "posts/2018-01-06-new-year-new-blog/index.html",
    "title": "New year, new blog layout",
    "section": "",
    "text": "Happy 2018!\nI’ve been wanting to put a fresh coat of paint on things for awhile around here, especially since the old Flex template didn’t have a really good way of supporting embedded Jupyter notebooks without completely upending the CSS (love the theme otherwise!).\nTaking a page (or really, an entire layout) from Jake’s blog, I can now embed Jupyter notebooks without trashing the whole layout of the site. There are some posts I’ve been wanting to make for awhile that will require a considerable amount of code, so I’m excited to be able to dig into them now!\nI’ll be following up soon with a lengthier resolutions post, but for now I just wanted to say “I’m still alive” and roll out the new layout. Happy new year everyone!\n\n\n\nCitationBibTeX citation:@online{quinn2018,\n  author = {Quinn, Shannon},\n  title = {New Year, New Blog Layout},\n  date = {2018-01-06},\n  url = {https://magsol.github.io/posts/2018-01-06-new-year-new-blog/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2018. “New Year, New Blog Layout.” January\n6, 2018. https://magsol.github.io/posts/2018-01-06-new-year-new-blog/."
  },
  {
    "objectID": "posts/2020-05-20-working-from-home/index.html",
    "href": "posts/2020-05-20-working-from-home/index.html",
    "title": "At home during COVID-19",
    "section": "",
    "text": "Image source: instachaaz (the stuff is awesome)\n\n\nWell, this has certainly been a unique past couple of months. I had a lot of things in mind for the spring 2020 semester and beyond, but I can safely say it’s all been completely upended now.\nI don’t want to trivialize COVID-19 to the suburban equivalent of “can’t go to the community pool for a few months because of a particularly bad case of the fiery poops;” there are real people whose livelihoods are suffering: financially, professionally, and literally, and I think the world as a whole would be a lot better off if we collectively recognized that and pitched in to help.\nThe Lady and I have been establishing new habits and routines, while trying to maintain a semblance of normality during the pandemic. There have been a lot of snacks (peanut butter M&Ms, cookie dough ice cream, hint of lime chips, and of course, Lucky Charms cereal), some creativity in workplace setup (moved an extra computer monitor from upstairs, and set up a surge protector behind the dining table–also had to line one end of the table with aluminum foil, because our cat kept jumping up on the table from that side), and digging out some old mainstays.\n\nClassics Never Go Out of Style\nEarly on in the lockdown, The Lady and I kicked off a Zelda-thon, starting with Skyward Sword on the Nintendo Wii. There’s a strange story there: I’d purchased the game for her way back when we lived in separate apartments in Pittsburgh, because she was the Zelda fan between the two of us. Yeah, I’m a gamer, but she’s a Zelda gamer. It was a lot of fun to watch her play the game, and I occasionally jumped in when she needed to tap out. But after reaching the penultimate boss, we just… stopped playing.\nFor eight years. We knew this, because when we fired up the game again on the weekend of March 14, we saw the last save file pop up for March 28, 2012. Almost eight years to the day.\nSince The Lady played most of the game eight years ago, I ended up “driving” this time around. She jumped in whenever she wanted, but we ended up tearing through the game in 10 days. It was pretty impressive, and it was great to finally see the end of the game that has been referenced SO MUCH in theory videos around Breath of the Wild (which we’ll get to!).\nOnce we knocked out Skyward Sword, The Lady took the driver’s seat for Twilight Princess. I’d never seen the game played start to finish, and had really never seen anything beyond the quests involving collecting light shards (which is, as I discovered, a meager portion of the game’s introduction). Suffice to say, this one took a lot longer; most of the month of April, if memory serves.\nAfter that, I took a deep breath and fired up Breath of the Wild… in Master Mode. Yes, I’ve posted about this game here before, and we ended up beating it sometime in November 2019. But the DLC included an evil modification called “Master Mode”, which among other terrible things, has the following effects:\n\nEvery enemy in the game is upgraded by one level (red become blue, blue become brown, brown become silver, silver become gold, a brand-new level)\nEnemies heal when they’ve been out of combat for two seconds (not hyperbole; literally two seconds)\nBrand-new floating platforms with enemies, because fuck you that’s why\n\nIt is brutal, especially in the first quarter of the game. You end up skipping fights by default, sneaking around a lot more, and fighting as though you cannot take a single hit (because in all likelihood, you can’t). I haven’t finished it yet, but just this past weekend we completed the last of the DLC “Ballad of the Champions,” so really the only thing left of the Main Quests is to destroy Calamity Ganon.\nOnce this is done, The Lady plans to break out the game that really and truly started it all: Ocarina of Time, which I’ve also never seen played start to finish, so that will be fun to watch!\nOn a completely separate video gaming front, I managed to get a Stargate mod working for Sins of a Solar Empire, and even started playing a small 1v1 as the Ancients against the Wraith. It looks incredible!\n\n\n\nFor fans of Stargate: Universe, you’ll recognize this class of Ancient ship.\n\n\n\n\n\nFans of both SG-1 and Atlantis will instantly recognize this “gate ship”!\n\n\n\n\n\nThis looks like a scene straight out of the Atlantis finale!\n\n\nI can’t wait to explore some of the other races–Asgard, Goa’uld, and Ori round out the playable races, while a recent update includes some “minor factions” that are always AI-controlled but can still change the dynamics of play: Tau’ri (that’s us!), Free Jaffa, Vanir (rogue Asgard offshoot seen in Atlantis), and Michael’s Hybrids.\n\n\nVariety is the Pribe of Libe\nWhile The Lady and I have been re-visiting the classics to keep us grounded, we’ve also been branching out.\nFirst, like most, we tried our hand at baking sourdough. And, frankly, it turned out incredible!\n\n\n\nSourdough bread, like everyone else.\n\n\nWe’ve since baked a new recipe of chocolate chip cookies (which mostly turned out chewy), and have plans to whip up some butterscotch bars.\nWe’ve also been starting up some regular remote get-togethers, from weekly chats with my family to weekly post-run “coffee chats” with some of our running friends. We’ll go out for runs by ourselves, come home, get cleaned up, and FaceTime each other while making coffee and getting ready for the day. We’re also about to try out remote gaming tomorrow with some friends of ours from Pittsburgh–they, like us, are big board gaming geeks. I’m not sure exactly what we’re going to play or how it’ll pan out, but I’m excited to try!\nThe Lady and I took a page from a recent list of recommended quarantine board games and purchased Star Realms. Think: a super-simple mash-up of Magic: The Gathering and Dominion. It’s a deck-building game with a common “market” of cards you can purchase, and the goal is to use those cards to bludgeon your opponent to death in the most sci-fi manner possible. Meanwhile, I sunk several days in over at Hero Forge designing avatars for her and me. I think they came out pretty well!\n\nSpeaking of remote activities together, we actually did try our hand at a “remote viewing” of a movie, and it worked remarkably well! Two of our runners friends joined us to watch A League Of Their Own, both because one of them had never seen it before, and because of last week’s news that the last of the original Rockford Peaches passed away at 101. We’d originally hoped to use a video synchronization platform like Netflix Party, but Netflix doesn’t have A League Of Their Own; Amazon Prime does. So we looked into Kast, but after 30 minutes of tinkering, it was clear the app is still too young and rough around the edges; we were constantly having either sound or video issues. So we did it the old-fashioned way: fired up a Zoom chat, and counted down to hitting “Play” out loud. And it actually worked quite well! We were never more than 20 seconds off each other.\n\nOur sudden and constant presence all day every may have caught our pets off guard, but they sure seem to be enjoying it. Zippy is scampering around us, jumping on our laps, and trying to jump on our work table one minute, then is passed out on the couch for hours on end the next. Clover, meanwhile, seems to find a napping spot anywhere she goes, but has started expecting treats at all hours of the day (partly our fault for giving her the occasional piece of banana with breakfast… and piece of fruit or veggie for lunch… and for dinner… ).\n\nOne of the biggest changes on my end (besides the obvious, of course), was buying a new laptop. This has been on my list for several months, as my aging MacBook Pro Mid-2014 has been struggling more and more to keep up with workloads. When the new laptop arrived, it took three entire days to fully transfer and configure it just right; I’m still coming across things here and there that need to be fully fleshed out (e.g., screen saver still isn’t the picture collage, and it’s not properly password protected, and the desktop backgrounds don’t switch out, and other small but noticeable things).\nBut the thing I wasn’t expecting that hit me really hard when it was time to shut down, wipe, and ship out the old laptop was the melancholy.\nI’d purchased this old laptop (aptly-named “Apollo”) in September 2014 in the throes of writing my dissertation. I remember it distinctly: sitting in the Squirrel Hill Starbucks, ear pods in, listening to some Pandora station while typing away in the Latex document… when suddenly my ear pods screeeeeched, my screen froze, and moments later, my ear pods went silent and the screen went dark. I rebooted, and… nothing. According to the Apple Geniuses later that evening, the motherboard has inexplicably fried. It was well out of warranty, so my only option was to purchase a brand-new laptop.\n\nThat was Apollo. It got me through my PhD dissertation and defense, the move to Athens and the start of my tenure-track position at UGA, and through the first five years of it–well into my promotion and tenure process, my first couple of successful grants, and so, so many papers. It was a veritable workhorse of a laptop that, with a little sprucing up, still has some life in it.\nNow, I have a laptop that is literal orders of magnitude more powerful than the previous one, yet it has huge shoes to fill. We’ll see if the new laptop–Dinraal–is up to the task.\n\n\n\nWhat’s next?\nNot sure, honestly. We’re taking it one day at a time. We’re being kind to each other and ourselves. We’re trying to be safe, not just for us, but for everyone else around us.\nStay safe and happy, my friends.\n\n\n\n\nCitationBibTeX citation:@online{quinn2020,\n  author = {Quinn, Shannon},\n  title = {At Home During {COVID-19}},\n  date = {2020-05-20},\n  url = {https://magsol.github.io/2020-05-20-working-from-home},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2020. “At Home During COVID-19.” May 20,\n2020. https://magsol.github.io/2020-05-20-working-from-home."
  },
  {
    "objectID": "posts/2023-07-30-hero-of-everything/index.html",
    "href": "posts/2023-07-30-hero-of-everything/index.html",
    "title": "The Hero Of Everything",
    "section": "",
    "text": "This is the first of two Tears of the Kingdom related blog posts I’ll be making. Don’t worry—there won’t be any story spoilers in either one. But my wife did just beat the game this past week (my game isn’t anywhere near the end), so I did want to put down some spoiler-free thoughts on the topic, as well as more detail surrounding recent discoveries on hybrid-powered flight I’ve been posting about on Mastodon.\nIn the meantime, I just wanted to put in writing something my wife and I hit on very quickly after starting Tears of the Kingdom: the many hats Link wears. Sure, he has a Big Bad he needs to put down—the whole “Hero of hyrule/time/twilight/the skies/winds/dreams/etc” thing—but this is about the side quests. In games prior to, oh I don’t know, 2017, these always included a few non-warrior talents: escorting people places, fetching an item, taking care of animals, and so on.\nBut Tears of the Kingdom (and to an only slightly lesser extent, Breath of the Wild) took this to a whole new level. Just focusing on the main story quest is starting to feel like only doing the bare minimum.\nWithout further adieu, I give you (this list is most likely incomplete, so please feel free to contribute!):\nThe List of Roles Link Is “Hired” (Willingly…?) Into Aside From, You Know, Actual Hero-ing in Tears of the Kingdom.\n\nFarmer\nGardener\nConstruction worker\nLumberjack\nBabysitter\nCook\n(Electrical / Mechanical) Engineer\nElementary School Teacher\nChauffeur\nJournalist\nPhotographer\nResearch Assistant\nCartographer\nTest driver\nUndercover secret agent\nUncle\nHistorian\nElection Official / Campaign Worker\nEquestrian\nSpelunker\nBlacksmith\nMiner\nGeneral\nPrivateer\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {The {Hero} {Of} {Everything}},\n  date = {2023-07-30},\n  url = {https://magsol.github.io/2023-07-30-hero-of-everything},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “The Hero Of Everything.” July 30,\n2023. https://magsol.github.io/2023-07-30-hero-of-everything."
  },
  {
    "objectID": "posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html",
    "href": "posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html",
    "title": "Running your own Mastodon instance on a Raspberry Pi k3s cluster",
    "section": "",
    "text": "As I mentioned in my previous post, I spent the last month of last year spinning up my own Mastodon instance (which you can check out!) I’ve had a Raspberry Pi cluster of 5x Pi 4B modules sitting around for the better part of the last two years1. I’ve occasionally toyed with installing k3s and experimenting with various bits and pieces of kubernetes, but never actually deployed something I found useful.\nDon’t get me wrong–I do want to go over how I installed and configured k3s on my Raspberry Pi cluster. It’s remarkable how quickly this area of things moves, and the guides I was working off for this were all 2-3 years old, and remarkably outdated. So a more recent tutorial on that basic component would definitely have its niche, I think.\nBut first, I want to kick off a series of posts detailing how I got a Mastodon instance running! It took a surprising amount of wrangling, so I wanted to share my experience before I forget the tiny details.\nWhy would you be interested in this series? Aside from the usual rough-and-tumble of installing anything on kubernetes via helm, the two parts that took the greatest amount of time and effort were 1) getting the Mastodon dependencies to work, and 2) wrestling Let’s Encrypt into submission. That first point is interesting because while Mastodon itself works just fine on ARM, the default images included in the Mastodon helm chart for the dependencies do NOT, and so it won’t work out-of-the-box on a Raspberry Pi cluster2. And the second point was just plain rage-inducing, and I’d love for folks to not have to experience that.\nI’ll fill in the links as I write the posts, so that you can bookmark this page if you’d like, though I’ll make sure to include the links on the other posts as well as I write them. In the meantime, don’t hesitate to drop any pointers / corrections / questions!"
  },
  {
    "objectID": "posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html#footnotes",
    "href": "posts/2023-01-20-mastodon-instance-k3s-rpi-introduction/index.html#footnotes",
    "title": "Running your own Mastodon instance on a Raspberry Pi k3s cluster",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYes, I did indeed purchase them two years ago. Would’ve been nigh impossible to get them at any time in between 😬↩︎\nAs of February 24, 2023, this is no longer true! Here’s the announcement from Bitnami of ARM-compatible images↩︎"
  },
  {
    "objectID": "posts/2017-05-31-summer-of-data-science/index.html",
    "href": "posts/2017-05-31-summer-of-data-science/index.html",
    "title": "Summer of Data Science 2017",
    "section": "",
    "text": "A few days ago, while I was still in Portland, OR enjoying the last few days of PyCon 2017, Renee (@BecomingDataSci) mentioned on Twitter that she might bring back the “Summer of Data Science” she kicked off last year.\nIn short: use the summer as an opportunity to learn and/or accomplish something data science-related in a goal-oriented, data-driven way.\nAs a tenure-track professor still yet to endure the 3rd-year review, pretty much everything data science related revolves around furthering my eventual tenure dossier. But the summers are still considerably more flexible for me to accomplish some of these goals than the fall or spring (I love teaching, but it’s all-consuming). I also have more than just myself–networks of collaborators and research assistants who can help me with these goals.\nSo without further adieu, I’d like to put forth my own Summer of Data Science, 2017 Edition:\n\nTeaching: 1360E improvements and 4360/6360 preparation\nI’m teaching an online course this summer, starting June 5 and continuing through the end of July: CSCI 1360E Foundations of Informatics and Analytics.\nOr, more colloquially, I just call it “introduction to data science.”\nIt’s one of the five courses I proposed in my first year (a story for another time, believe me…) and taught for the first time last summer, and in-person last fall. I’m teaching it again this summer and hoping to make some of the standard improvements, such as sprucing up slides and fixing autograder bugs from previous incarnations.\nMore pressing is CSCI 4360/6360 Data Science II, which has yet to have its own website. This course has never been taught, but is slated for Fall 2017.\nDid I mention there are already over 40 students registered, undergraduate and graduate combined?\nThis is supposed to be the “corner cases” of data science: lesser-used and/or more powerful analysis methods that aren’t necessarily the first tools or techniques you reach for in a given situation. This will include, but certainly not be limited to, concepts like randomized algorithms, semi-supervised learning, and backpropagation; techniques like out-of-core processing, distributed computing, and functional programming; tools like Julia, numba, and dask.\nBefore you ask: No. I’m not covering Spark.\nAt any rate, the conceptual framework is in place, but practically none of the architectural logistics have been established. So this will take up virtually all of my time for the remainder of the summer, once the following item is completed…\n\n\nResearch: NSF CAREER proposal\nThe advantage of this goal is it has a hard end date: July 19.\nThe disadvantage is that the NSF CAREER is the pinnacle of NSF early-career investigator awards. Its importance cannot be overstated; its je ne sais quoi is on display in the faces of new investigators when you mention it around them.\nI’ve connected with my university’s grant proposal officers, and am participating in a peer review process that involves two rounds of review: first with fellow CAREER submitees (as in, we exchange each other’s current drafts!), and second with the university grant officers.\nAn investigator can only make three submission attempts for the CAREER. The CAREER is only open for submissions once per year. If chosen, the investigator must still be un-tenured at time of award. These conditions place brutal limits on how long you can wait to start making submissions, and I already skipped submitting my first two years. Still, I have no illusions about the uphill battle I have, so my goal this first time around is simply to acquire feedback: from my peers, from my grants officers, and from the NSF reviewers.\n\n\nPersonal: Coursera’s optimization course\nI signed up to take Coursera’s Discrete Optimization course out of the University of Melbourne, taught by none other than Professor Pascal Van Hentenryck at Michigan and Dr. Carleton Coffrin, currently at Los Alamos.\nOptimization is pretty much the backbone of modern machine learning, and yet I have almost no formal training in it–beyond incidentally covering it in various machine learning and statistics courses as part of some broader topic in which it’s used. Oddly, the most rigorous instruction I received as a graduate student in optimization was a Cell & Systems Modeling course where we used various optimization techniques to find parameter values for population models.\nEspecially in conjunction with what I hope to teach in CSCI 4360 in the fall, this would be invaluable both professionally as well as personally."
  },
  {
    "objectID": "posts/2024-01-25-the-legend-of-makar/index.html",
    "href": "posts/2024-01-25-the-legend-of-makar/index.html",
    "title": "The Legend of Makar",
    "section": "",
    "text": "I built my first desktop from components when I was 15, a sophomore in high school. With the exception of my college workstation (laptops hadnt’t quite reached ubiquity yet), I’ve assembled every desktop I have ever owned since then.\nIt’s a skill and a pasttime I deeply enjoy, but one which I don’t have the opportunity to explore very often. Even though “every desktop since age 15” sounds impressive, in real numbers it amounts to just a handful:\nThere were certainly upgrades throughout that timeline—I swapped hard drives and memory in and out of that dorm server many times; my first “real job” desktop saw at least one GPU upgrade; my graduate desktop was a true exercise in frustration as I spent the first two years diagnosing an intermittent and nigh-irreproducible freezing—but it’s actually rare I get brag to folks that I’m “assembling my new computer from parts.”\nSo I figured: for this round, I’d go all out with full documentation in the form of a blog post 😁"
  },
  {
    "objectID": "posts/2024-01-25-the-legend-of-makar/index.html#footnotes",
    "href": "posts/2024-01-25-the-legend-of-makar/index.html#footnotes",
    "title": "The Legend of Makar",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI swear, there’s a post coming about this. Sometime.↩︎\nI built this in my second week of sabbatical. The first week was a veritable fire hose from which I was struggling to surface. That, plus the general post-holiday malaise, plus university stuff still demanding my attention… yeah this is probably the best answer.↩︎"
  },
  {
    "objectID": "posts/2023-02-16-ssl-with-lets-encrypt/index.html",
    "href": "posts/2023-02-16-ssl-with-lets-encrypt/index.html",
    "title": "Mastodon, Part IV: SSL with Let’s Encrypt",
    "section": "",
    "text": "This article is part of a series about installing and configuring a Mastodon instance on a cluster of Raspberry Pi computers running k3s. To go back to previous articles in the series, try any of the links below:\nI want to start by saying: I am no expert here. As such, it is not only possible, but is in fact likely, that I was missing something so painfully obvious as to be worthy of derision for the rest of my natural life.\nTo be fair, that’d be mean, but still very possibly deserved.\nWhen I started the whole Mastodon installation process, I loosely followed the recipe outlined here at Geek Cookbook, which—until this series of blog posts!—was the only resource I could find anywhere on the world wide interwubs on installing Mastodon on kubernetes (thank you again, funkypenguin; go sponsor him!).\nOf course, I could only follow it to a point; I didn’t make use of flux (though I know I really, really should; that’s a blog series for another time, methinks) so a lot of the constructs weren’t precisely relevant to me. As such there was a lot I had to infer. Ingress was no exception."
  },
  {
    "objectID": "posts/2023-02-16-ssl-with-lets-encrypt/index.html#footnotes",
    "href": "posts/2023-02-16-ssl-with-lets-encrypt/index.html#footnotes",
    "title": "Mastodon, Part IV: SSL with Let’s Encrypt",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYeah yeah yeah I know I need to switch to Brave or Firefox, IN MY SPARE TIME FOLKS.↩︎\nAt least, not at the rates I’d be using it.↩︎"
  },
  {
    "objectID": "posts/2016-09-26-osbd2016-workshop/index.html",
    "href": "posts/2016-09-26-osbd2016-workshop/index.html",
    "title": "Open Science in Big Data (OSBD) Workshop",
    "section": "",
    "text": "Back in May of this year, some of the other computer science professors and I put together a proposal for a workshop. The workshop would be in conjunction with the December 2016 IEEE BigData Conference, and would focus specifically on the intersection of big data and open science.\nIn June, we got the good news: it was accepted!\n\nWhat is “Open Science”?\nI’ve been interested in open science since I started graduate school. I’d been using Apache projects since college, learning how to set up and configure my own LAMP stack (yes, I’ll admit I dabbled in PHP for a few years, but I’m clean now!), but had never really contributed to an open source project until the 2010 Google Summer of Code. During that time, I worked on adding spectral clustering the Apache Mahout library.\nWhile open source is great and wonderful, this is just one component of Open Science. It’s another reason I’m incredibly excited about the “container revolution”: Docker and its ilk. This concept makes entire pipelines perfectly reproducible, to the point where it’s now possible for entire scientific projects to be replicated with a single command: from running the analysis, to building the figures, to assembling the final PDF file (which, by the way, can be uploaded to arXiv for everyone to read!)\nThese other aspects–open sourcing data, reproducibility scripts, and entire pipelines–are veritable educational and research gold mines, but are arguably much more difficult than simply dumping some code on GitHub. These difficulties are only exacerbated in the realm of “big data”.\n\n\nWhat are the goals of the workshop?\nThe goals of the workshop are threefold.\nFirst: we aim to identify some of the biggest challenges in democratizing big data analytics. Open Science is a critical component of both educational pedagogy and scientific research. With the increasing relevance of big data analytics, making these tools and resources available to the next generation of scientists and big data practitioners is crucial. Unfortunately, this is also extremely challenging.\nSecond: we aim to bring together big data practitioners from multiple backgrounds to discuss and establish the current state of affairs with respect to reproducibility in big data analytics and machine learning. Priorities change and constraints differ between researchers and developers in academia versus industry versus government; nonetheless, open science and big data are important to practitioners in each of these areas.\nThird: we aim to examine and propose possible routes forward to advance the continued integration of open science in big data analytics, putting tools, techniques, data, and documentation in the hands of researchers, students, and other big data practitioners. We will identify emerging trends in terms of open science best practices, and how these can be incorporated into current big data endeavors.\n\n\nWhat kinds of proceedings is the workshop accepting?\nWe hope to have two tracks: a full research paper session, and a student (short) paper session.\nPapers submitted to the OSBD workshop should, at the very minimum, have a significant Open Science component. This can take several forms, including but not limited to any combination of the following:\n\nUses free and open source packages\nOpenly available online, e.g. GitHub\nScripts are available to reproduce figures\nData are openly available e.g. dat, datahub.io\netc.\n\nWe are welcoming of original research into big data analytics, so long as there is an open science component.\nFurthermore, in the spirit of Open Science and reproducibility, we strongly encourage our presenters to incorporate live code demos, data walkthroughs, or some other hands-on activity into their talks.\n\n\nWhen is the submission deadline?\nThe deadline for workshop paper submissions is Sunday, October 25, 2016. This provides a 2-week buffer zone between the notification deadline of the main IEEE BigData conference, in case you want to repackage your conference submission for the workshop.\n\n\nWhere can one find more information about OSBD?\nWe have a website: https://osbd.github.io/\nThe website contains information about the topics around the workshop, the invited speakers who will be attending (keynote and panelists), the important dates around the workshop, and the instructions for formatting and submitting your paper to the workshop.\nWe are very excited about this workshop, and encourage you to submit! We look forward to seeing you in December!\n\n\nShannon Quinn, Co-chair\nJohn Miller, Co-chair\nSuchi Bhandarkar, Co-chair\nYi Hong, Co-chair"
  },
  {
    "objectID": "posts/2023-12-08-advent-of-adventure/index.html",
    "href": "posts/2023-12-08-advent-of-adventure/index.html",
    "title": "Advent of Adventure",
    "section": "",
    "text": "This past Monday evening, from a tiny cabin in Dahlonega, GA, I turned to my wife and said: “What a week, huh?”\nWe had a much-needed mini-vacation in the middle of the week to recoup and relax. It wasn’t nearly long enough to fully come down from the cortisol high but it at least jump-started the process. We even got a hike in, and did some stargazing. Even as relatively small as Athens is, there’s still a lot of light pollution, the lack of which is breathtaking if you can get a little further out.\n\n\n\nIt’s tough to see, not the least of which because of iPhone 15’s aggressive low-light compensation, but the Milky Way is visible from the left-middle almost to the branches of the tree.\n\n\nI’ve felt guilty—for many reasons; there’s never a shortage, but in this case because I’d originally wanted to participate in this year’s Advent of Code. I was introduced to it two years ago, too late to finish it completely, but at the time I enjoyed it. Last year I was too burned out to get more than a few days in, so I was feeling particularly motivated this year.\nBut then the end-of-semester shenanigans were an order of magnitude worse than expected, and December entered with a bang and from the mountains I lamented not having logged a single activity.\nThen I came across December Adventure.\nI loved the main idea: the goal is just to write a little bit of code, every day, in the month of December. Or, really, to make progress on any project or projects, a little bit each day.\nSo consider this not only my inaugural #DecemberAdventure post, but a bit of a catch-up on the things I’ve been doing that have brought me a tiny bit of joy in the dismally oversaturated realities of the past couple months.\n\nRetroPie, redux\nAstute readers here may recall that this is something I’d already done a few years back (ok, several years back, geez). However, that was a Pi 3B+, which did ok with NES and SNES games, but ground to a complete standstill on any 3D games—N64 was beyond it.\nArmed with a Pi 4B with 4GB of RAM, I sought to bring RetroPie back! I’d also seen in the documentation that the Nintendo Switch Pro controllers were supported, so getting that working was another goal of mine (rather than the generic USB controllers I’d used last time).\n\n\n\nAn open view of the Pi inside the SNES enclosure, complete with a fan.\n\n\nA few other minor changes from last time: now I had a cool mini-SNES enclosure for the Pi, which came with room for a single fan to help keep things cool. I was pretty sure the fan was overkill, but I figured, what the heck. I also actually wired the Pi to ethernet, rather than relying on wifi like last time. It took a little bit of adjusting, but it was a change I’d wanted to make to our home network backbone anyway.\nThe result: a snazzy new RetroPie!\n\n\n\nThe SNES enclosure, with power and ethernet cables plugged in.\n\n\nI did still run into some issues with getting the Nintendo Switch Pro controller working. Specifically, the Bluetooth: this issue in the discussion forum mirrored my problems exactly. I could turn on diagnostics for the Pi and see that it was detecting every single button press and stick movement, but for some reason those changes weren’t being propagated to the emulator software.\nIn the end, I plugged the Pro controllers into the back of the Pi, and they worked beautifully. It just meant I had to sit on the floor, feet from my TV, in order to play. Like the days of Yore, I suppose.\n\n\nChatGPT and DALL-E, for “science”\nI recently started a new collaboration investigating the utility of commercial LLMs—specifically, the new GPT 4 with vision—in understanding, deciphering, and analyzing biomedical image data.\nI’ve thrown a little bit of my [OPENLY AVAILABLE] data at it. To use the academic lingo: the performance to date has been decidedly unimpressive. But work continues.\nNevertheless, it’s also given me the opportunity to play around again with image generators (I stopped paying Midjourney a long time ago). In particular, I’ve been keen to see if ChatGPT’s integration with DALL-E has allowed for better iteration on images—carrying over context from previous image prompts to iterate on and improve subsequent images.\nWith Midjourney, iteration often entailed copy/pasting the previous prompt and making subtle changes that I thought would give me what I was looking for. Here, I was hopeful that, given the conversational interface with ChatGPT, I could now just tweak the things I wanted to change by “having a chat.”\nYet again, I was disappointed. But I did come up with some interesting mash-ups. Inspired by a recent keynote speech at our Institute of AI Symposium, I wanted to see what favorite universes of mine I could combine.\nIf anyone has read any of Brandon Sanderson’s Stormlight Archive, they will immediately recognize the ten Heralds. For those who haven’t: think of the Heralds as deeply flawed and damaged, likely insane superheroes. Maybe not “The Boys” level awful, but certainly not your aw-shucks-go-team plucky Avengers.\nWell, I tried putting them in different situations. First I tried oil paintings in the medieval ages.\n\n\n\nThe 10 Heralds, depicted in a medieval oil painting style.\n\n\n\n\n\nA second attempt at the same image.\n\n\nIn both cases, you may notice… there are more than 10 individuals. I couldn’t find a way to guarantee the number I was asking for, as you’ll see.\nNext I tried the Heralds in the Lego universe.\n\n\n\nThe 10 Heralds as LEGO heroes.\n\n\nAgain, it seems as though there are 11 people? And what’s with the bird motif, suddenly? I said nothing about birds.\nThis continues when I tried putting the Heralds in the Marvel Avengers universe.\n\n\n\nThe 10 Heralds as the Avengers.\n\n\nAgain, I count 11 individuals, with no fewer than three wearing Iron Man-like powered suits. You can’t all be Iron Man!\n\n\n\nThe 10 Heralds as the Avengers, again.\n\n\nOnce more, the weird bird motif shows up, despite no mention of birds in the prompt (or any part of the ChatGPT discussion thread). There also only seem to be 9? And Captain America’s shield is just… floating there. I do love that Iron Spider suit, though; I wonder which Herald that is.\nFrom here I tried pitting the Heralds against Legend of Zelda: Tears of the Kingdom enemies, but set in The Expanse universe.\n\n\n\nThe 10 Heralds fighting demonic robots on a shattered landscape in a gritty world.\n\n\nAs far as I can tell, there are only 5 Heralds, but otherwise this picture is pretty cool. I love how Mordor-esque the landscape is, and even though the robot army bears no resemblance to anything in Tears of the Kingdom, it’s still pretty neat.\nThe second attempt was a lot closer to what I was looking for:\n\n\n\nThe 10 Heralds fighting demonic spider-like robots on a shattered landscape in a gritty world.\n\n\nStill only 9 Heralds as far as I can tell, and again the humanoid robots aren’t recognizable, BUT I love the giant arachnid enemies. I can definitely see that as an Expanse-ification of the classic Breath of the Wild Guardians.\nFrom here I tried a smattering of other things.\n\n\n\nA United States Presidential headshot of Jezrien, the leader of the Heralds.\n\n\n\n\n\nA picture of Kaladin, one of the Knights Radiant, in the art style of Breath of the Wild.\n\n\n\n\n\nA depiction of the Rocinante, the Martian gunship from The Expanse, if it were engineered as a Zonai construct from Tears of the Kingdom.\n\n\n\n\n\nAnother depiction of the Rocinante, this time showing it having landed in Hateno Village, in the art style of Breath of the Wild.\n\n\nEach one of these deviates significantly from what I would have expected, which is not a problem per se. I would say that they do seem to have a tendency to gravitate toward certain modes, and it’s really hard to pull the image generators off those modes.\n\n\nRae rae rae your robot\nI backed the Luxonis kickstarter last year for the rae robots (Robotics Access for Everyone), and since getting them, they’ve been… tricky.\nThe forums are full of folks just trying to get them working, and the associated documentation is extremely sparse to entirely nonexistent. It’s a brand-new product, but the team definitely hasn’t had a chance to catch up on the documentation side.\nI ended up getting things working, but it required multiple lines of advice combined in different ways.\nFirstly, I started with the Advanced (manual) setup, and this… ended up being impossible, at least if you want your rae to show up on Robothub (which, currently, is the only way to install and run apps). I’ll write a later post documenting this side, but suffice to say, it just doesn’t work.\nSecondly, I couldn’t get the hard reset button on the bottom of the rae to work. I may have been doing it wrong. But I found this excellent post outlining a “soft reset” that worked perfectly.\nThirdly, from the moment I pushed the power button on the rae, I just pointed it at the QR code from Robothub (linked from the Cloud setup instructions) and held it there for several minutes. Eventually, the lights started flashing blue at regular intervals and the screen indicated it was connecting to my local wifi network. The rest worked as advertised (even if the lights turn red, apparently this is a known bug).\nI haven’t done anything else with them yet, except name them.\n\n\n\nZelda fans, unite.\n\n\n\n\nWhat’s next?\nConsider this my first official entry into #DecemberAdventure, and maybe retroactively through the whole month of December so far.\nAfter today, I’ll try to post regular updates on Mastodon about my #DecemberAdventure activities. Now the semester is largely over—there are still some outstanding obligations, but without class there should be more time for tinkering.\nAnd relaxing.\n\n\n\nMore of this, please.\n\n\n\n\n\n\nCitationBibTeX citation:@online{quinn2023,\n  author = {Quinn, Shannon},\n  title = {Advent of {Adventure}},\n  date = {2023-12-08},\n  url = {https://magsol.github.io/2023-12-08-advent-of-adventure},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nQuinn, Shannon. 2023. “Advent of Adventure.” December 8,\n2023. https://magsol.github.io/2023-12-08-advent-of-adventure."
  }
]